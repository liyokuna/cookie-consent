{"version":3,"sources":["ng://@ng-bootstrap/ng-bootstrap/util/util.ts","ng://@ng-bootstrap/ng-bootstrap/accordion/accordion-config.ts","ng://@ng-bootstrap/ng-bootstrap/accordion/accordion.ts","ng://@ng-bootstrap/ng-bootstrap/accordion/accordion.module.ts","ng://@ng-bootstrap/ng-bootstrap/alert/alert-config.ts","ng://@ng-bootstrap/ng-bootstrap/alert/alert.ts","ng://@ng-bootstrap/ng-bootstrap/alert/alert.module.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/label.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/checkbox.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/radio.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/buttons.module.ts","ng://@ng-bootstrap/ng-bootstrap/carousel/carousel-config.ts","ng://@ng-bootstrap/ng-bootstrap/carousel/carousel.ts","ng://@ng-bootstrap/ng-bootstrap/carousel/carousel.module.ts","ng://@ng-bootstrap/ng-bootstrap/collapse/collapse.ts","ng://@ng-bootstrap/ng-bootstrap/collapse/collapse.module.ts","node_modules/tslib/tslib.es6.js","ng://@ng-bootstrap/ng-bootstrap/datepicker/ngb-date.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-tools.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-i18n.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-service.ts","ng://@ng-bootstrap/ng-bootstrap/util/key.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-keymap-service.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-view-model.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-config.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-month-view.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation.ts","ng://@ng-bootstrap/ng-bootstrap/util/autoclose.ts","ng://@ng-bootstrap/ng-bootstrap/util/focus-trap.ts","ng://@ng-bootstrap/ng-bootstrap/util/positioning.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/ngb-date-parser-formatter.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-input.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-day-view.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation-select.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-hijri.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-civil.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-umalqura.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/jalali/jalali.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/jalali/ngb-calendar-persian.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hebrew/hebrew.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hebrew/ngb-calendar-hebrew.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hebrew/datepicker-i18n-hebrew.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-native-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-native-utc-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker.module.ts","ng://@ng-bootstrap/ng-bootstrap/dropdown/dropdown-config.ts","ng://@ng-bootstrap/ng-bootstrap/dropdown/dropdown.ts","ng://@ng-bootstrap/ng-bootstrap/dropdown/dropdown.module.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-config.ts","ng://@ng-bootstrap/ng-bootstrap/util/popup.ts","ng://@ng-bootstrap/ng-bootstrap/util/scrollbar.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-backdrop.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-ref.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-dismiss-reasons.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-window.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-stack.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal.module.ts","ng://@ng-bootstrap/ng-bootstrap/pagination/pagination-config.ts","ng://@ng-bootstrap/ng-bootstrap/pagination/pagination.ts","ng://@ng-bootstrap/ng-bootstrap/pagination/pagination.module.ts","ng://@ng-bootstrap/ng-bootstrap/util/triggers.ts","ng://@ng-bootstrap/ng-bootstrap/popover/popover-config.ts","ng://@ng-bootstrap/ng-bootstrap/popover/popover.ts","ng://@ng-bootstrap/ng-bootstrap/popover/popover.module.ts","ng://@ng-bootstrap/ng-bootstrap/progressbar/progressbar-config.ts","ng://@ng-bootstrap/ng-bootstrap/progressbar/progressbar.ts","ng://@ng-bootstrap/ng-bootstrap/progressbar/progressbar.module.ts","ng://@ng-bootstrap/ng-bootstrap/rating/rating-config.ts","ng://@ng-bootstrap/ng-bootstrap/rating/rating.ts","ng://@ng-bootstrap/ng-bootstrap/rating/rating.module.ts","ng://@ng-bootstrap/ng-bootstrap/tabset/tabset-config.ts","ng://@ng-bootstrap/ng-bootstrap/tabset/tabset.ts","ng://@ng-bootstrap/ng-bootstrap/tabset/tabset.module.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/ngb-time.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/timepicker-config.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/ngb-time-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/timepicker.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/timepicker.module.ts","ng://@ng-bootstrap/ng-bootstrap/tooltip/tooltip-config.ts","ng://@ng-bootstrap/ng-bootstrap/tooltip/tooltip.ts","ng://@ng-bootstrap/ng-bootstrap/tooltip/tooltip.module.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/highlight.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead-window.ts","ng://@ng-bootstrap/ng-bootstrap/util/accessibility/live.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead-config.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead.module.ts","ng://@ng-bootstrap/ng-bootstrap/index.ts"],"names":["toInteger","value","parseInt","toString","undefined","getValueInRange","max","min","Math","isString","isNumber","isNaN","isInteger","isFinite","floor","isDefined","padNumber","slice","hasClassName","element","className","split","indexOf","NgbAccordionConfig","this","closeOthers","Injectable","args","providedIn","nextId","NgbPanelToggle","accordion","panel","Object","defineProperty","prototype","Directive","selector","host","type","[disabled]","[class.collapsed]","[attr.aria-expanded]","[attr.aria-controls]","(click)","NgbAccordion","decorators","Inject","forwardRef","NgbPanel","Optional","Host","Input","NgbPanelHeader","templateRef","TemplateRef","NgbPanelTitle","NgbPanelContent","disabled","id","isOpen","ngAfterContentChecked","titleTpl","titleTpls","first","headerTpl","headerTpls","contentTpl","contentTpls","ContentChildren","descendants","config","activeIds","destroyOnHide","panelChange","EventEmitter","closeOtherPanels","isExpanded","panelId","expand","_changeOpenState","_findPanelById","expandAll","_this","length","panels","forEach","collapse","collapseAll","toggle","_closeOthers","_updateActiveIds","nextState","defaultPrevented_1","emit","preventDefault","find","p","filter","map","Component","exportAs","class","role","[attr.aria-multiselectable]","template","Output","NGB_ACCORDION_DIRECTIVES","NgbAccordionModule","forRoot","ngModule","NgModule","declarations","exports","imports","CommonModule","NgbAlertConfig","dismissible","NgbAlert","_renderer","_element","close","closeHandler","ngOnChanges","changes","typeChange","firstChange","removeClass","nativeElement","previousValue","addClass","currentValue","ngOnInit","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","[class.alert-dismissible]","Renderer2","ElementRef","NgbAlertModule","entryComponents","NgbButtonLabel","[class.btn]","[class.active]","[class.disabled]","[class.focus]","NGB_CHECKBOX_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","NgbCheckBox","multi","_label","_cd","valueChecked","valueUnChecked","onChange","_","onTouched","isFocused","focused","onInputChange","$event","modelToPropagate","target","checked","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","active","markForCheck","autocomplete","[checked]","(change)","(focus)","(blur)","providers","ChangeDetectorRef","NGB_RADIO_VALUE_ACCESSOR","NgbRadioGroup","_radios","Set","_value","name","_disabled","onRadioChange","radio","onRadioValueUpdate","_updateRadiosValue","register","add","_updateRadiosDisabled","unregister","delete","updateValue","updateDisabled","NgbRadio","_group","stringValue","setProperty","_checked","ngOnDestroy","[name]","NGB_BUTTON_DIRECTIVES","NgbButtonsModule","NgbCarouselConfig","interval","wrap","keyboard","pauseOnHover","showNavigationArrows","showNavigationIndicators","NgbSlide","tplRef","NgbCarousel","_platformId","_ngZone","_destroy$","Subject","_start$","_stop$","slide","ngAfterContentInit","isPlatformBrowser","runOutsideAngular","pipe","slides","switchMap","timer","takeUntil","merge","subscribe","run","next","activeSlide","_getSlideById","activeId","isFirstChange","select","slideId","_cycleToSelected","_getSlideEventDirection","prev","_getPrevSlide","NgbSlideEventDirection","RIGHT","_getNextSlide","LEFT","pause","cycle","slideIdx","direction","selectedSlide","current","currentActiveSlideId","nextActiveSlideId","currentActiveSlideIdx","_getSlideIdxById","toArray","currentSlideId","slideArr","currentSlideIdx","[style.display]","tabIndex","(mouseenter)","(mouseleave)","(keydown.arrowLeft)","(keydown.arrowRight)","PLATFORM_ID","NgZone","NGB_CAROUSEL_DIRECTIVES","NgbCarouselModule","NgbCollapse","collapsed","[class.collapse]","[class.show]","NgbCollapseModule","extendStatics","d","b","setPrototypeOf","__proto__","Array","hasOwnProperty","__extends","__","constructor","create","__assign","assign","t","s","i","n","arguments","call","apply","__read","o","m","Symbol","iterator","r","e","ar","done","push","error","NgbDate","year","month","day","from","date","equals","other","before","after","fromJSDate","jsDate","getFullYear","getMonth","getDate","toJSDate","Date","getTime","setFullYear","NGB_DATEPICKER_CALENDAR_FACTORY","NgbCalendarGregorian","NgbCalendar","useFactory","tslib_1.__extends","getDaysPerWeek","getMonths","getWeeksPerMonth","getNext","period","number","setDate","getPrev","getWeekday","getDay","getWeekNumber","week","firstDayOfWeek","time","setMonth","round","getToday","isValid","isChangedDate","dateComparator","checkDateInRange","minDate","maxDate","isDateSelectable","state","markDisabled","buildMonths","calendar","i18n","force","displayMonths","months","monthsToReuse","splice","firstDate","reusedIndex","findIndex","buildMonth","dayTemplateData","outsideDays","calendarToday","lastDate","weeks","weekdays","getFirstViewDate","daysPerWeek","firstMonthDate","dayOfWeek","weekObject","days","newDate","nextDate","ariaLabel","getDayAriaLabel","today","contextUserData","dayObject","context","$implicit","data","currentMonth","selected","tabindex","hidden","shift","NGB_DATEPICKER_18N_FACTORY","locale","NgbDatepickerI18nDefault","NgbDatepickerI18n","getDayNumerals","getWeekNumerals","weekNumber","getYearNumerals","deps","LOCALE_ID","_locale","_super","weekdaysStartingOnSunday","getLocaleDayNames","FormStyle","Standalone","TranslationWidth","Short","_weekdaysShort","index","_monthsShort","getLocaleMonthNames","Abbreviated","_monthsFull","Wide","getWeekdayShortName","weekday","getMonthShortName","getMonthFullName","formatDate","NgbDatepickerService","_calendar","_i18n","_model$","_select$","_state","focusVisible","navigation","prevDisabled","nextDisabled","selectBoxes","years","selectedDate","model","_nextState","toValidDate","focus","focusDate","focusMove","focusSelect","emitEvent","open","reset","options","defaultValue","ngbDate","patch","newState","_updateState","_patchContexts","startDate","checkMinBeforeMax","Error","forceRebuild","yearChanged","monthChanged","generateSelectBoxYears","start","end","generateSelectBoxMonths","prevMonthDisabled","prevDate","nextMonthDisabled","Tab","Enter","Escape","Space","PageUp","PageDown","End","Home","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","NgbDatepickerKeyMapService","_service","model$","_minDate","_maxDate","_firstViewDate","_lastViewDate","processKey","event","which","Key","shiftKey","stopPropagation","PREV","NEXT","NgbDatepickerConfig","showWeekdays","showWeekNumbers","NGB_DATEPICKER_DATE_ADAPTER_FACTORY","NgbDateStructAdapter","NgbDateAdapter","fromModel","toModel","NGB_DATEPICKER_VALUE_ACCESSOR","NgbDatepicker","_keyMapService","_elementRef","_ngbDateAdapter","_destroyed$","navigate","input","select$","oldDate","navigationPrevented","newSelectedDate","newFocusedDate","oldFocusedDate","_controlValue","onStable","asObservable","take","elementToFocus","querySelector","navigateTo","ngAfterViewInit","focusIns$","fromEvent","_monthsEl","focusOuts$","_a","relatedTarget","onDateSelect","onKeyDown","onNavigateDateSelect","onNavigateEvent","NavigationEvent","ViewChild","NgbDatepickerMonthView","doSelect","NgbDatepickerNavigation","isHTMLElementContainedIn","array","some","item","contains","iOS","ngbAutoClose","zone","document","closed$","insideElements","ignoreElements","escapes$","mouseDowns$","MouseEvent","button","closeableClicks$","withLatestFrom","_b","delay","race","navigator","userAgent","test","FOCUSABLE_ELEMENTS_SELECTOR","join","getFocusableBoundaryElements","list","querySelectorAll","el","ngbFocusTrap","stopFocusTrap$","refocusOnClick","lastFocusedElement$","tabEvent","focusedElement","_c","last","arr","lastFocusedElement","Positioning","getAllStyles","window","getComputedStyle","getStyle","prop","isStaticPositioned","offsetParent","offsetParentEl","documentElement","position","elPosition","parentOffset","width","height","top","bottom","left","right","getBoundingClientRect","offset","clientTop","clientLeft","elBcr","viewportOffset","pageYOffset","pageXOffset","elOffset","offsetHeight","offsetWidth","positionElements","hostElement","targetElement","placement","appendToBody","placementPrimary","placementSecondary","hostElPosition","targetElStyles","marginTop","parseFloat","marginBottom","marginLeft","marginRight","topPosition","leftPosition","style","transform","targetElBCR","html","windowHeight","innerHeight","clientHeight","windowWidth","innerWidth","clientWidth","placementSeparator","positionService","baseClass","placementVals","isArray","allowedPlacements","classList","addClassesToTarget","targetPlacement","primary","secondary","classes","classname","placementToRemove","remove","hasAuto","val","obj","search","testPlacement","isInViewport","placementVals_1","__values","tslib_1.__values","placementVals_1_1","addedClasses","NGB_DATEPICKER_PARSER_FORMATTER_FACTORY","NgbDateISOParserFormatter","NgbDateParserFormatter","parse","dateParts","trim","format","NgbInputDatepicker","NGB_DATEPICKER_VALIDATOR","NG_VALIDATORS","_parserFormatter","_elRef","_vcRef","_cfr","_dateAdapter","_document","_changeDetector","_closed$","_cRef","autoClose","dateSelect","_onChange","_onTouched","_validatorChange","_zoneSubscription","location","container","instance","registerOnValidatorChange","validate","c","_fromDateStruct","requiredBefore","requiredAfter","invalid","_model","_writeModelValue","manualDateChange","updateView","inputValueChanged","_inputValue","cf","resolveComponentFactory","createComponent","_applyPopupStyling","_applyDatepickerInputs","_subscribeForDatepickerOutputs","changeDetectorRef","detectChanges","appendChild","hostView","onBlur","unsubscribe","datepickerInstance","optionName","navigateEvent","(input)","ViewContainerRef","ComponentFactoryResolver","DOCUMENT","NgbDatepickerDayView","isMuted","[class.bg-primary]","[class.text-white]","[class.text-muted]","[class.outside]","NgbDatepickerNavigationSelect","changeMonth","changeYear","NgbCalendarHijri","_setYear","_setMonth","_setDay","toGregorian","MuhDate","fromGregorian","mDays","getDaysPerMonth","isGregorianLeapYear","gDate","mod","a","GREGORIAN_EPOCH","ISLAMIC_EPOCH","NgbCalendarIslamicCivil","gYear","gMonth","gDay","julianDay","hYear","hMonth","ceil","getIslamicYearStart","hDay","getIslamicMonthStart","hDate","wjd","depoch","quadricent","dqc","cent","dcent","quad","dquad","yindex","yearday","leapadj","tjd2","isIslamicLeapYear","GREGORIAN_FIRST_DATE","GREGORIAN_LAST_DATE","HIJRI_BEGIN","MONTH_LENGTH","NgbCalendarIslamicUmalqura","daysDiff","getDaysDiff","date1","date2","diff","abs","j","numOfDays","dayDiff","y","jalaliDate","julianToGregorian","jalaliToJulian","jYear","jMonth","jDay","jalCal","gregorianToJulian","gy","march","div","setHours","gdate","julianToJalali","julianDayNumber","jalaliDay","jalaliMonth","numberOfDays","jalaliYear","gregorianDay","leap","setJalaliMonth","trunc","jump","breaks","breaksLength","leapJ","jp","jm","gm","gd","NgbCalendarPersian","setJalaliYear","yearValue","setJalaliDay","PARTS_PER_HOUR","PARTS_PER_DAY","PARTS_FRACTIONAL_MONTH","PARTS_PER_MONTH","BAHARAD","numberOfFirstDayInYear","monthsBeforeYear","fractionalMonthsBeforeYear","dayNumber","timeOfDay","isHebrewLeapYear","getDaysInGregorianMonth","getHebrewMonths","getDaysInHebrewYear","getDaysInHebrewMonth","yearLength","yearType","daysInMonth","getDayNumberInHebrewYear","numberOfDay","daysSinceHebEpoch","monthsSinceHebEpoch","firstDayOfThisYear","dayOfYear","hebrewDate","diffDays","hebrewNumerals","numerals","hArray0_9","hArray10_19","hArray20_90","hArray100_900","hArray1000_9000","mem","result","step","unshift","NgbCalendarHebrew","setHebrewMonth","setHebrewDay","WEEKDAYS","MONTHS","MONTHS_LEAP","NgbDatepickerI18nHebrew","NgbDateNativeAdapter","_fromNativeDate","_toNativeDate","NgbDateNativeUTCAdapter","getUTCFullYear","getUTCMonth","getUTCDate","UTC","setUTCFullYear","NgbDatepickerModule","FormsModule","NgbDropdownConfig","NgbDropdownItem","elementRef","NgbDropdownMenu","dropdown","[class.dropdown-menu]","[attr.x-placement]","(keydown.ArrowUp)","(keydown.ArrowDown)","(keydown.Home)","(keydown.End)","NgbDropdown","NgbDropdownAnchor","anchorEl","getNativeElement","aria-haspopup","NgbDropdownToggle","_open","openChange","_positionMenu","_applyPlacementClasses","_setCloseHandlers","_applyContainer","_menu","_menuElement","_anchor","_resetContainer","itemElements","_getMenuElements","isEventFromItems","isEventFromToggle","_isEventFromToggle","itemElement","activeElement","_isDropup","menuItems","_bodyContainer","renderer","dropdownElement","dropdownMenuElement","removeStyle","removeChild","body","bodyContainer","createElement","setStyle","dropdownClass","ContentChild","read","NGB_DROPDOWN_DIRECTIVES","NgbDropdownModule","NgbModalConfig","backdrop","ContentRef","nodes","viewRef","componentRef","PopupService","_type","_injector","_viewContainerRef","_componentFactoryResolver","content","_windowRef","_contentRef","_getContentRef","createEmbeddedView","rootNodes","createText","noop","ScrollBar","compensate","_isPresent","_adjustBody","_getWidth","userSetPadding","paddingRight","paddingAmount","rect","measurer","NgbModalBackdrop","[class]","NgbActiveModal","dismiss","reason","NgbModalRef","_windowCmptRef","_backdropCmptRef","_beforeDismiss","dismissEvent","Promise","resolve","reject","_resolve","_reject","then","_removeModalElements","_dismiss","windowNativeEl","parentNode","destroy","backdropNativeEl","BACKDROP_CLICK","ESC","NgbModalWindow","backdropClick","ModalDismissReasons","escKey","defaultPrevented","_elWithFocus","autoFocusable","firstFocusable","elWithFocus","(keyup.esc)","[attr.aria-modal]","[attr.aria-labelledby]","NgbModalStack","_applicationRef","_scrollBar","_rendererFactory","_activeWindowCmptHasChanged","_ariaHiddenValues","Map","_backdropAttributes","_modalRefs","_windowAttributes","_windowCmpts","activeWindowCmpt","_revertAriaHidden","_setAriaHidden","moduleCFR","contentInjector","containerEl","createRenderer","revertPaddingForScrollBar","removeBodyClass","activeModal","contentRef","injector","backdropCmptRef","_attachBackdrop","windowCmptRef","_attachWindowComponent","ngbModalRef","beforeDismiss","_registerModalRef","_registerWindowCmpt","_applyWindowOptions","_applyBackdropOptions","dismissAll","hasOpenModals","attachView","windowInstance","backdropInstance","_createFromTemplateRef","_createFromString","_createFromComponent","component","createTextNode","contentCmptFactory","modalContentInjector","Injector","useValue","parent","parentElement","children","sibling","nodeName","set","getAttribute","setAttribute","removeAttribute","clear","unregisterModalRef","ngbWindowCmpt","onDestroy","ApplicationRef","RendererFactory2","NgbModal","_moduleCFR","_modalStack","_config","combinedOptions","NgbModalModule","NgbPaginationConfig","boundaryLinks","directionLinks","ellipses","maxSize","pageSize","rotate","NgbPaginationEllipsis","NgbPaginationFirst","NgbPaginationLast","NgbPaginationNext","NgbPaginationNumber","NgbPaginationPrevious","NgbPagination","pageCount","pages","page","pageChange","size","hasPrevious","hasNext","previousDisabled","selectPage","pageNumber","_updatePages","isEllipsis","_applyEllipses","_applyRotation","leftOffset","rightOffset","_applyPagination","_setPageInRange","newPageNo","prevPageNo","collectionSize","newPage","DIRECTIVES","NgbPaginationModule","Trigger","isManual","DEFAULT_ALIASES","hover","delayOrNoop","listenToTriggers","triggers","isOpenedFn","openFn","closeFn","openDelay","closeDelay","parsedTriggers","parseTriggers","aliases","trimmedTriggers","trigger","triggerPair","alias","manualTriggers","subscription","observeTriggers","Observable","subscriber","listeners","toggleFn","listen","unsubscribeFn","triggerDelay","input$","pending","filteredInput$","currentlyOpen","share","delayedOpen$","delayedClose$","NgbPopoverConfig","disablePopover","NgbPopoverWindow","isTitleTemplate","title","[id]","NgbPopover","componentFactoryResolver","viewContainerRef","shown","_ngbPopoverWindowId","popoverClass","_popupService","_isDisabled","ngbPopover","popoverTitle","_unregisterListenersFn","bind","NgbPopoverModule","NgbProgressbarConfig","animated","striped","showValue","NgbProgressbar","getValue","getPercentValue","NgbProgressbarModule","NgbRatingConfig","readonly","resettable","NGB_RATING_VALUE_ACCESSOR","NgbRating","_changeDetectorRef","contexts","leave","rateChange","ariaValueText","nextRate","enter","handleBlur","handleClick","update","rate","handleKeyDown","v","k","fill","internalChange","newRate","_getFillValue","toFixed","nextValue","aria-valuemin","[attr.aria-valuemax]","[attr.aria-valuenow]","[attr.aria-valuetext]","[attr.aria-disabled]","(keydown)","NgbRatingModule","NgbTabsetConfig","justify","orientation","NgbTabTitle","NgbTabContent","NgbTab","NgbTabset","tabChange","justifyClass","tabId","selectedTab","_getTabById","activeTab","tabs","tabsWithId","tab","NGB_TABSET_DIRECTIVES","NgbTabsetModule","NgbTime","hour","minute","second","changeHour","updateHour","NaN","changeMinute","updateMinute","changeSecond","updateSecond","checkSecs","NgbTimepickerConfig","meridian","spinners","seconds","hourStep","minuteStep","secondStep","readonlyInputs","NGB_DATEPICKER_TIME_ADAPTER_FACTORY","NgbTimeStructAdapter","NgbTimeAdapter","NGB_TIMEPICKER_VALUE_ACCESSOR","NgbTimepicker","_ngbTimeAdapter","_hourStep","_minuteStep","_secondStep","structValue","propagateModelChange","newVal","isPM","enteredHour","toggleMeridian","formatHour","formatMinSec","touched","NgbTimepickerModule","NgbTooltipConfig","disableTooltip","NgbTooltipWindow","NgbTooltip","_ngbTooltipWindowId","tooltipClass","_ngbTooltip","NgbTooltipModule","NgbHighlight","highlightClass","resultStr","resultLC","toLowerCase","termLC","term","currentIdx","parts","RegExp","regExpEscape","text","replace","part","originalPart","substr","NgbTypeaheadWindow","activeIdx","focusFirst","formatter","selectEvent","activeChangeEvent","hasActive","results","getActive","markActive","_activeChanged","resetActive","(mousedown)","ARIA_LIVE_DELAY","InjectionToken","factory","ARIA_LIVE_DELAY_FACTORY","getLiveElement","lazyCreate","Live","_delay","say","message","textContent","setText","setTimeout","NgbTypeaheadConfig","editable","showHint","NGB_TYPEAHEAD_VALUE_ACCESSOR","NgbTypeahead","nextWindowId","ngZone","_live","selectItem","popupId","_valueChanges","_resubscribeTypeahead","BehaviorSubject","isPopupOpen","processedResults$","tap","_inputValueBackup","ngbTypeahead","userInput$","_subscription","_subscribeToUserInput","_closePopup","_unsubscribeFromUserInput","_writeInputValue","_formatItemForInput","dismissPopup","_showHint","_selectResult","_openPopup","_selectResultClosePopup","activeDescendant","userInputLowerCase","formattedVal","inputFormatter","resultFormatter","resultTemplate","count","[class.open]","[autocomplete]","autocapitalize","autocorrect","aria-multiline","[attr.aria-autocomplete]","[attr.aria-activedescendant]","[attr.aria-owns]","NgbTypeaheadModule","NGB_MODULES","NgbModule"],"mappings":"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","sourcesContent":["export function toInteger(value: any): number {\n  return parseInt(`${value}`, 10);\n}\n\nexport function toString(value: any): string {\n  return (value !== undefined && value !== null) ? `${value}` : '';\n}\n\nexport function getValueInRange(value: number, max: number, min = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nexport function isString(value: any): value is string {\n  return typeof value === 'string';\n}\n\nexport function isNumber(value: any): value is number {\n  return !isNaN(toInteger(value));\n}\n\nexport function isInteger(value: any): value is number {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n\nexport function isDefined(value: any): boolean {\n  return value !== undefined && value !== null;\n}\n\nexport function padNumber(value: number) {\n  if (isNumber(value)) {\n    return `0${value}`.slice(-2);\n  } else {\n    return '';\n  }\n}\n\nexport function regExpEscape(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\nexport function hasClassName(element: any, className: string): boolean {\n  return element && element.className && element.className.split &&\n      element.className.split(/\\s+/).indexOf(className) >= 0;\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [NgbAccordion](#/components/accordion/api#NgbAccordion) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all accordions used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbAccordionConfig {\n  closeOthers = false;\n  type: string;\n}\n","import {\n  AfterContentChecked,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  forwardRef,\n  Host,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  QueryList,\n  TemplateRef\n} from '@angular/core';\n\nimport {isString} from '../util/util';\n\nimport {NgbAccordionConfig} from './accordion-config';\n\nlet nextId = 0;\n\n/**\n * The context for the [NgbPanelHeader](#/components/accordion/api#NgbPanelHeader) template\n *\n * @since 4.1.0\n */\nexport interface NgbPanelHeaderContext {\n  /**\n   * `True` if current panel is opened\n   */\n  opened: boolean;\n}\n\n/**\n * A directive to put on a button that toggles panel opening and closing.\n *\n * To be used inside the [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader)\n *\n * @since 4.1.0\n */\n@Directive({\n  selector: 'button[ngbPanelToggle]',\n  host: {\n    'type': 'button',\n    '[disabled]': 'panel.disabled',\n    '[class.collapsed]': '!panel.isOpen',\n    '[attr.aria-expanded]': 'panel.isOpen',\n    '[attr.aria-controls]': 'panel.id',\n    '(click)': 'accordion.toggle(panel.id)'\n  }\n})\nexport class NgbPanelToggle {\n  @Input()\n  set ngbPanelToggle(panel: NgbPanel) {\n    if (panel) {\n      this.panel = panel;\n    }\n  }\n\n  constructor(\n      @Inject(forwardRef(() => NgbAccordion)) public accordion: NgbAccordion,\n      @Optional() @Host() @Inject(forwardRef(() => NgbPanel)) public panel: NgbPanel) {}\n}\n\n/**\n * A directive that wraps an accordion panel header with any HTML markup and a toggling button\n * marked with [`NgbPanelToggle`](#/components/accordion/api#NgbPanelToggle).\n * See the [header customization demo](#/components/accordion/examples#header) for more details.\n *\n * You can also use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to customize only the panel title.\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPanelHeader]'})\nexport class NgbPanelHeader {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive that wraps only the panel title with HTML markup inside.\n *\n * You can also use [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader) to customize the full panel header.\n */\n@Directive({selector: 'ng-template[ngbPanelTitle]'})\nexport class NgbPanelTitle {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive that wraps the accordion panel content.\n */\n@Directive({selector: 'ng-template[ngbPanelContent]'})\nexport class NgbPanelContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive that wraps an individual accordion panel with title and collapsible content.\n */\n@Directive({selector: 'ngb-panel'})\nexport class NgbPanel implements AfterContentChecked {\n  /**\n   *  If `true`, the panel is disabled an can't be toggled.\n   */\n  @Input() disabled = false;\n\n  /**\n   *  An optional id for the panel that must be unique on the page.\n   *\n   *  If not provided, it will be auto-generated in the `ngb-panel-xxx` format.\n   */\n  @Input() id = `ngb-panel-${nextId++}`;\n\n  isOpen = false;\n\n  /**\n   *  The panel title.\n   *\n   *  You can alternatively use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to set panel title.\n   */\n  @Input() title: string;\n\n  /**\n   * Type of the current panel.\n   *\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n   * `'secondary'`, `'light'` and `'dark'`.\n   */\n  @Input() type: string;\n\n  titleTpl: NgbPanelTitle | null;\n  headerTpl: NgbPanelHeader | null;\n  contentTpl: NgbPanelContent | null;\n\n  @ContentChildren(NgbPanelTitle, {descendants: false}) titleTpls: QueryList<NgbPanelTitle>;\n  @ContentChildren(NgbPanelHeader, {descendants: false}) headerTpls: QueryList<NgbPanelHeader>;\n  @ContentChildren(NgbPanelContent, {descendants: false}) contentTpls: QueryList<NgbPanelContent>;\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.headerTpl = this.headerTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n}\n\n/**\n * An event emitted right before toggling an accordion panel.\n */\nexport interface NgbPanelChangeEvent {\n  /**\n   * The id of the accordion panel that is being toggled.\n   */\n  panelId: string;\n\n  /**\n   * The next state of the panel.\n   *\n   * `true` if it will be opened, `false` if closed.\n   */\n  nextState: boolean;\n\n  /**\n   * Calling this function will prevent panel toggling.\n   */\n  preventDefault: () => void;\n}\n\n/**\n * Accordion is a collection of collapsible panels (bootstrap cards).\n *\n * It can ensure only one panel is opened at a time and allows to customize panel\n * headers.\n */\n@Component({\n  selector: 'ngb-accordion',\n  exportAs: 'ngbAccordion',\n  host: {'class': 'accordion', 'role': 'tablist', '[attr.aria-multiselectable]': '!closeOtherPanels'},\n  template: `\n    <ng-template #t ngbPanelHeader let-panel>\n      <button class=\"btn btn-link\" [ngbPanelToggle]=\"panel\">\n        {{panel.title}}<ng-template [ngTemplateOutlet]=\"panel.titleTpl?.templateRef\"></ng-template>\n      </button>\n    </ng-template>\n    <ng-template ngFor let-panel [ngForOf]=\"panels\">\n      <div class=\"card\">\n        <div role=\"tab\" id=\"{{panel.id}}-header\" [class]=\"'card-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\">\n          <ng-template [ngTemplateOutlet]=\"panel.headerTpl?.templateRef || t\"\n                       [ngTemplateOutletContext]=\"{$implicit: panel, opened: panel.isOpen}\"></ng-template>\n        </div>\n        <div id=\"{{panel.id}}\" role=\"tabpanel\" [attr.aria-labelledby]=\"panel.id + '-header'\"\n             class=\"collapse\" [class.show]=\"panel.isOpen\" *ngIf=\"!destroyOnHide || panel.isOpen\">\n          <div class=\"card-body\">\n               <ng-template [ngTemplateOutlet]=\"panel.contentTpl?.templateRef\"></ng-template>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbAccordion implements AfterContentChecked {\n  @ContentChildren(NgbPanel) panels: QueryList<NgbPanel>;\n\n  /**\n   * An array or comma separated strings of panel ids that should be opened **initially**.\n   *\n   * For subsequent changes use methods like `expand()`, `collapse()`, etc. and\n   * the `(panelChange)` event.\n   */\n  @Input() activeIds: string | string[] = [];\n\n  /**\n   *  If `true`, only one panel could be opened at a time.\n   *\n   *  Opening a new panel will close others.\n   */\n  @Input('closeOthers') closeOtherPanels: boolean;\n\n  /**\n   * If `true`, panel content will be detached from DOM and not simply hidden when the panel is collapsed.\n   */\n  @Input() destroyOnHide = true;\n\n  /**\n   * Type of panels.\n   *\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n   * `'secondary'`, `'light'` and `'dark'`.\n   */\n  @Input() type: string;\n\n  /**\n   * Event emitted right before the panel toggle happens.\n   *\n   * See [NgbPanelChangeEvent](#/components/accordion/api#NgbPanelChangeEvent) for payload details.\n   */\n  @Output() panelChange = new EventEmitter<NgbPanelChangeEvent>();\n\n  constructor(config: NgbAccordionConfig) {\n    this.type = config.type;\n    this.closeOtherPanels = config.closeOthers;\n  }\n\n  /**\n   * Checks if a panel with a given id is expanded.\n   */\n  isExpanded(panelId: string): boolean { return this.activeIds.indexOf(panelId) > -1; }\n\n  /**\n   * Expands a panel with a given id.\n   *\n   * Has no effect if the panel is already expanded or disabled.\n   */\n  expand(panelId: string): void { this._changeOpenState(this._findPanelById(panelId), true); }\n\n  /**\n   * Expands all panels, if `[closeOthers]` is `false`.\n   *\n   * If `[closeOthers]` is `true`, it will expand the first panel, unless there is already a panel opened.\n   */\n  expandAll(): void {\n    if (this.closeOtherPanels) {\n      if (this.activeIds.length === 0 && this.panels.length) {\n        this._changeOpenState(this.panels.first, true);\n      }\n    } else {\n      this.panels.forEach(panel => this._changeOpenState(panel, true));\n    }\n  }\n\n  /**\n   * Collapses a panel with the given id.\n   *\n   * Has no effect if the panel is already collapsed or disabled.\n   */\n  collapse(panelId: string) { this._changeOpenState(this._findPanelById(panelId), false); }\n\n  /**\n   * Collapses all opened panels.\n   */\n  collapseAll() {\n    this.panels.forEach((panel) => { this._changeOpenState(panel, false); });\n  }\n\n  /**\n   * Toggles a panel with the given id.\n   *\n   * Has no effect if the panel is disabled.\n   */\n  toggle(panelId: string) {\n    const panel = this._findPanelById(panelId);\n    if (panel) {\n      this._changeOpenState(panel, !panel.isOpen);\n    }\n  }\n\n  ngAfterContentChecked() {\n    // active id updates\n    if (isString(this.activeIds)) {\n      this.activeIds = this.activeIds.split(/\\s*,\\s*/);\n    }\n\n    // update panels open states\n    this.panels.forEach(panel => panel.isOpen = !panel.disabled && this.activeIds.indexOf(panel.id) > -1);\n\n    // closeOthers updates\n    if (this.activeIds.length > 1 && this.closeOtherPanels) {\n      this._closeOthers(this.activeIds[0]);\n      this._updateActiveIds();\n    }\n  }\n\n  private _changeOpenState(panel: NgbPanel, nextState: boolean) {\n    if (panel && !panel.disabled && panel.isOpen !== nextState) {\n      let defaultPrevented = false;\n\n      this.panelChange.emit(\n          {panelId: panel.id, nextState: nextState, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        panel.isOpen = nextState;\n\n        if (nextState && this.closeOtherPanels) {\n          this._closeOthers(panel.id);\n        }\n        this._updateActiveIds();\n      }\n    }\n  }\n\n  private _closeOthers(panelId: string) {\n    this.panels.forEach(panel => {\n      if (panel.id !== panelId) {\n        panel.isOpen = false;\n      }\n    });\n  }\n\n  private _findPanelById(panelId: string): NgbPanel | null { return this.panels.find(p => p.id === panelId); }\n\n  private _updateActiveIds() {\n    this.activeIds = this.panels.filter(panel => panel.isOpen && !panel.disabled).map(panel => panel.id);\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle} from './accordion';\n\nexport {\n  NgbAccordion,\n  NgbPanel,\n  NgbPanelTitle,\n  NgbPanelContent,\n  NgbPanelChangeEvent,\n  NgbPanelHeader,\n  NgbPanelHeaderContext,\n  NgbPanelToggle\n} from './accordion';\nexport {NgbAccordionConfig} from './accordion-config';\n\nconst NGB_ACCORDION_DIRECTIVES =\n    [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle];\n\n@NgModule({declarations: NGB_ACCORDION_DIRECTIVES, exports: NGB_ACCORDION_DIRECTIVES, imports: [CommonModule]})\nexport class NgbAccordionModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbAccordionModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [NgbAlert](#/components/alert/api#NgbAlert) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all alerts used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbAlertConfig {\n  dismissible = true;\n  type = 'warning';\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  Renderer2,\n  ElementRef,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {NgbAlertConfig} from './alert-config';\n\n/**\n * Alert is a component to provide contextual feedback messages for user.\n *\n * It supports several alert types and can be dismissed.\n */\n@Component({\n  selector: 'ngb-alert',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {'role': 'alert', 'class': 'alert', '[class.alert-dismissible]': 'dismissible'},\n  template: `\n    <button *ngIf=\"dismissible\" type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.alert.close\"\n      (click)=\"closeHandler()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <ng-content></ng-content>\n    `,\n  styleUrls: ['./alert.scss']\n})\nexport class NgbAlert implements OnInit,\n    OnChanges {\n  /**\n   * If `true`, alert can be dismissed by the user.\n   *\n   * The close button (Ã) will be displayed and you can be notified\n   * of the event with the `(close)` output.\n   */\n  @Input() dismissible: boolean;\n  /**\n   * Type of the alert.\n   *\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n   * `'secondary'`, `'light'` and `'dark'`.\n   */\n  @Input() type: string;\n  /**\n   * An event emitted when the close button is clicked. It has no payload and only relevant for dismissible alerts.\n   */\n  @Output() close = new EventEmitter<void>();\n\n  constructor(config: NgbAlertConfig, private _renderer: Renderer2, private _element: ElementRef) {\n    this.dismissible = config.dismissible;\n    this.type = config.type;\n  }\n\n  closeHandler() { this.close.emit(null); }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const typeChange = changes['type'];\n    if (typeChange && !typeChange.firstChange) {\n      this._renderer.removeClass(this._element.nativeElement, `alert-${typeChange.previousValue}`);\n      this._renderer.addClass(this._element.nativeElement, `alert-${typeChange.currentValue}`);\n    }\n  }\n\n  ngOnInit() { this._renderer.addClass(this._element.nativeElement, `alert-${this.type}`); }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAlert} from './alert';\n\nexport {NgbAlert} from './alert';\nexport {NgbAlertConfig} from './alert-config';\n\n@NgModule({declarations: [NgbAlert], exports: [NgbAlert], imports: [CommonModule], entryComponents: [NgbAlert]})\nexport class NgbAlertModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbAlertModule}; }\n}\n","import {Directive} from '@angular/core';\n\n@Directive({\n  selector: '[ngbButtonLabel]',\n  host:\n      {'[class.btn]': 'true', '[class.active]': 'active', '[class.disabled]': 'disabled', '[class.focus]': 'focused'}\n})\nexport class NgbButtonLabel {\n  active: boolean;\n  disabled: boolean;\n  focused: boolean;\n}\n","import {ChangeDetectorRef, Directive, forwardRef, Input} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {NgbButtonLabel} from './label';\n\nconst NGB_CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbCheckBox),\n  multi: true\n};\n\n\n/**\n * Allows to easily create Bootstrap-style checkbox buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\n@Directive({\n  selector: '[ngbButton][type=checkbox]',\n  host: {\n    'autocomplete': 'off',\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '(change)': 'onInputChange($event)',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  },\n  providers: [NGB_CHECKBOX_VALUE_ACCESSOR]\n})\nexport class NgbCheckBox implements ControlValueAccessor {\n  checked;\n\n  /**\n   * If `true`, the checkbox button will be disabled\n   */\n  @Input() disabled = false;\n\n  /**\n   * The form control value when the checkbox is checked.\n   */\n  @Input() valueChecked = true;\n\n  /**\n   * The form control value when the checkbox is unchecked.\n   */\n  @Input() valueUnChecked = false;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  set focused(isFocused: boolean) {\n    this._label.focused = isFocused;\n    if (!isFocused) {\n      this.onTouched();\n    }\n  }\n\n  constructor(private _label: NgbButtonLabel, private _cd: ChangeDetectorRef) {}\n\n  onInputChange($event) {\n    const modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;\n    this.onChange(modelToPropagate);\n    this.onTouched();\n    this.writeValue(modelToPropagate);\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._label.disabled = isDisabled;\n  }\n\n  writeValue(value) {\n    this.checked = value === this.valueChecked;\n    this._label.active = this.checked;\n\n    // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n    this._cd.markForCheck();\n  }\n}\n","import {ChangeDetectorRef, Directive, ElementRef, forwardRef, Input, OnDestroy, Renderer2} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {NgbButtonLabel} from './label';\n\nconst NGB_RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRadioGroup),\n  multi: true\n};\n\nlet nextId = 0;\n\n/**\n * Allows to easily create Bootstrap-style radio buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\n@Directive({selector: '[ngbRadioGroup]', host: {'role': 'radiogroup'}, providers: [NGB_RADIO_VALUE_ACCESSOR]})\nexport class NgbRadioGroup implements ControlValueAccessor {\n  private _radios: Set<NgbRadio> = new Set<NgbRadio>();\n  private _value = null;\n  private _disabled: boolean;\n\n  get disabled() { return this._disabled; }\n  set disabled(isDisabled: boolean) { this.setDisabledState(isDisabled); }\n\n  /**\n   * Name of the radio group applied to radio input elements.\n   *\n   * Will be applied to all radio input elements inside the group,\n   * unless [`NgbRadio`](#/components/buttons/api#NgbRadio)'s specify names themselves.\n   *\n   * If not provided, will be generated in the `ngb-radio-xx` format.\n   */\n  @Input() name = `ngb-radio-${nextId++}`;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  onRadioChange(radio: NgbRadio) {\n    this.writeValue(radio.value);\n    this.onChange(radio.value);\n  }\n\n  onRadioValueUpdate() { this._updateRadiosValue(); }\n\n  register(radio: NgbRadio) { this._radios.add(radio); }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._disabled = isDisabled;\n    this._updateRadiosDisabled();\n  }\n\n  unregister(radio: NgbRadio) { this._radios.delete(radio); }\n\n  writeValue(value) {\n    this._value = value;\n    this._updateRadiosValue();\n  }\n\n  private _updateRadiosValue() { this._radios.forEach((radio) => radio.updateValue(this._value)); }\n  private _updateRadiosDisabled() { this._radios.forEach((radio) => radio.updateDisabled()); }\n}\n\n\n/**\n * A directive that marks an input of type \"radio\" as a part of the\n * [`NgbRadioGroup`](#/components/buttons/api#NgbRadioGroup).\n */\n@Directive({\n  selector: '[ngbButton][type=radio]',\n  host: {\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '[name]': 'nameAttr',\n    '(change)': 'onChange()',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  }\n})\nexport class NgbRadio implements OnDestroy {\n  private _checked: boolean;\n  private _disabled: boolean;\n  private _value: any = null;\n\n  /**\n   * The value for the 'name' property of the input element.\n   *\n   * All inputs of the radio group should have the same name. If not specified,\n   * the name of the enclosing group is used.\n   */\n  @Input() name: string;\n\n  /**\n   * The form control value when current radio button is checked.\n   */\n  @Input('value')\n  set value(value: any) {\n    this._value = value;\n    const stringValue = value ? value.toString() : '';\n    this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);\n    this._group.onRadioValueUpdate();\n  }\n\n  /**\n   * If `true`, current radio button will be disabled.\n   */\n  @Input('disabled')\n  set disabled(isDisabled: boolean) {\n    this._disabled = isDisabled !== false;\n    this.updateDisabled();\n  }\n\n  set focused(isFocused: boolean) {\n    if (this._label) {\n      this._label.focused = isFocused;\n    }\n    if (!isFocused) {\n      this._group.onTouched();\n    }\n  }\n\n  get checked() { return this._checked; }\n\n  get disabled() { return this._group.disabled || this._disabled; }\n\n  get value() { return this._value; }\n\n  get nameAttr() { return this.name || this._group.name; }\n\n  constructor(\n      private _group: NgbRadioGroup, private _label: NgbButtonLabel, private _renderer: Renderer2,\n      private _element: ElementRef<HTMLInputElement>, private _cd: ChangeDetectorRef) {\n    this._group.register(this);\n    this.updateDisabled();\n  }\n\n  ngOnDestroy() { this._group.unregister(this); }\n\n  onChange() { this._group.onRadioChange(this); }\n\n  updateValue(value) {\n    // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n    if (this.value !== value) {\n      this._cd.markForCheck();\n    }\n\n    this._checked = this.value === value;\n    this._label.active = this._checked;\n  }\n\n  updateDisabled() { this._label.disabled = this.disabled; }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {NgbButtonLabel} from './label';\nimport {NgbCheckBox} from './checkbox';\nimport {NgbRadio, NgbRadioGroup} from './radio';\n\nexport {NgbButtonLabel} from './label';\nexport {NgbCheckBox} from './checkbox';\nexport {NgbRadio, NgbRadioGroup} from './radio';\n\n\nconst NGB_BUTTON_DIRECTIVES = [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio];\n\n@NgModule({declarations: NGB_BUTTON_DIRECTIVES, exports: NGB_BUTTON_DIRECTIVES})\nexport class NgbButtonsModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbButtonsModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [NgbCarousel](#/components/carousel/api#NgbCarousel) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all carousels used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbCarouselConfig {\n  interval = 5000;\n  wrap = true;\n  keyboard = true;\n  pauseOnHover = true;\n  showNavigationArrows = true;\n  showNavigationIndicators = true;\n}\n","import {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  PLATFORM_ID,\n  QueryList,\n  TemplateRef\n} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\n\nimport {NgbCarouselConfig} from './carousel-config';\n\nimport {merge, Subject, timer} from 'rxjs';\nimport {filter, map, switchMap, takeUntil} from 'rxjs/operators';\n\nlet nextId = 0;\n\n/**\n * A directive that wraps the individual carousel slide.\n */\n@Directive({selector: 'ng-template[ngbSlide]'})\nexport class NgbSlide {\n  /**\n   * Slide id that must be unique for the entire document.\n   *\n   * If not provided, will be generated in the `ngb-slide-xx` format.\n   */\n  @Input() id = `ngb-slide-${nextId++}`;\n  constructor(public tplRef: TemplateRef<any>) {}\n}\n\n/**\n * Carousel is a component to easily create and control slideshows.\n *\n * Allows to set intervals, change the way user interacts with the slides and provides a programmatic API.\n */\n@Component({\n  selector: 'ngb-carousel',\n  exportAs: 'ngbCarousel',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'carousel slide',\n    '[style.display]': '\"block\"',\n    'tabIndex': '0',\n    '(mouseenter)': 'pauseOnHover && pause()',\n    '(mouseleave)': 'pauseOnHover && cycle()',\n    '(keydown.arrowLeft)': 'keyboard && prev()',\n    '(keydown.arrowRight)': 'keyboard && next()'\n  },\n  template: `\n    <ol class=\"carousel-indicators\" *ngIf=\"showNavigationIndicators\">\n      <li *ngFor=\"let slide of slides\" [id]=\"slide.id\" [class.active]=\"slide.id === activeId\"\n          (click)=\"select(slide.id); pauseOnHover && pause()\"></li>\n    </ol>\n    <div class=\"carousel-inner\">\n      <div *ngFor=\"let slide of slides\" class=\"carousel-item\" [class.active]=\"slide.id === activeId\">\n        <ng-template [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\n      </div>\n    </div>\n    <a class=\"carousel-control-prev\" role=\"button\" (click)=\"prev()\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.previous\">Previous</span>\n    </a>\n    <a class=\"carousel-control-next\" role=\"button\" (click)=\"next()\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.next\">Next</span>\n    </a>\n  `\n})\nexport class NgbCarousel implements AfterContentChecked,\n    AfterContentInit, OnChanges, OnDestroy {\n  @ContentChildren(NgbSlide) slides: QueryList<NgbSlide>;\n\n  private _destroy$ = new Subject<void>();\n  private _start$ = new Subject<void>();\n  private _stop$ = new Subject<void>();\n\n  /**\n   * The slide id that should be displayed **initially**.\n   *\n   * For subsequent interactions use methods `select()`, `next()`, etc. and the `(slide)` output.\n   */\n  @Input() activeId: string;\n\n  /**\n   * Time in milliseconds before the next slide is shown.\n   */\n  @Input() interval: number;\n\n  /**\n   * If `true`, will 'wrap' the carousel by switching from the last slide back to the first.\n   */\n  @Input() wrap: boolean;\n\n  /**\n   * If `true`, allows to interact with carousel using keyboard 'arrow left' and 'arrow right'.\n   */\n  @Input() keyboard: boolean;\n\n  /**\n   * If `true`, will pause slide switching when mouse cursor hovers the slide.\n   *\n   * @since 2.2.0\n   */\n  @Input() pauseOnHover: boolean;\n\n  /**\n   * If `true`, 'previous' and 'next' navigation arrows will be visible on the slide.\n   *\n   * @since 2.2.0\n   */\n  @Input() showNavigationArrows: boolean;\n\n  /**\n   * If `true`, navigation indicators at the bottom of the slide will be visible.\n   *\n   * @since 2.2.0\n   */\n  @Input() showNavigationIndicators: boolean;\n\n  /**\n   * An event emitted right after the slide transition is completed.\n   *\n   * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n   */\n  @Output() slide = new EventEmitter<NgbSlideEvent>();\n\n  constructor(\n      config: NgbCarouselConfig, @Inject(PLATFORM_ID) private _platformId, private _ngZone: NgZone,\n      private _cd: ChangeDetectorRef) {\n    this.interval = config.interval;\n    this.wrap = config.wrap;\n    this.keyboard = config.keyboard;\n    this.pauseOnHover = config.pauseOnHover;\n    this.showNavigationArrows = config.showNavigationArrows;\n    this.showNavigationIndicators = config.showNavigationIndicators;\n  }\n\n  ngAfterContentInit() {\n    // setInterval() doesn't play well with SSR and protractor,\n    // so we should run it in the browser and outside Angular\n    if (isPlatformBrowser(this._platformId)) {\n      this._ngZone.runOutsideAngular(() => {\n        this._start$\n            .pipe(\n                map(() => this.interval), filter(interval => interval > 0 && this.slides.length > 0),\n                switchMap(interval => timer(interval).pipe(takeUntil(merge(this._stop$, this._destroy$)))))\n            .subscribe(() => this._ngZone.run(() => this.next()));\n\n        this._start$.next();\n      });\n    }\n\n    this.slides.changes.pipe(takeUntil(this._destroy$)).subscribe(() => this._cd.markForCheck());\n  }\n\n  ngAfterContentChecked() {\n    let activeSlide = this._getSlideById(this.activeId);\n    this.activeId = activeSlide ? activeSlide.id : (this.slides.length ? this.slides.first.id : null);\n  }\n\n  ngOnDestroy() { this._destroy$.next(); }\n\n  ngOnChanges(changes) {\n    if ('interval' in changes && !changes['interval'].isFirstChange()) {\n      this._start$.next();\n    }\n  }\n\n  /**\n   * Navigates to a slide with the specified identifier.\n   */\n  select(slideId: string) { this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId)); }\n\n  /**\n   * Navigates to the previous slide.\n   */\n  prev() { this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.RIGHT); }\n\n  /**\n   * Navigates to the next slide.\n   */\n  next() { this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.LEFT); }\n\n  /**\n   * Pauses cycling through the slides.\n   */\n  pause() { this._stop$.next(); }\n\n  /**\n   * Restarts cycling through the slides from left to right.\n   */\n  cycle() { this._start$.next(); }\n\n  private _cycleToSelected(slideIdx: string, direction: NgbSlideEventDirection) {\n    let selectedSlide = this._getSlideById(slideIdx);\n    if (selectedSlide && selectedSlide.id !== this.activeId) {\n      this.slide.emit({prev: this.activeId, current: selectedSlide.id, direction: direction});\n      this._start$.next();\n      this.activeId = selectedSlide.id;\n    }\n\n    // we get here after the interval fires or any external API call like next(), prev() or select()\n    this._cd.markForCheck();\n  }\n\n  private _getSlideEventDirection(currentActiveSlideId: string, nextActiveSlideId: string): NgbSlideEventDirection {\n    const currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n    const nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n\n    return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.RIGHT : NgbSlideEventDirection.LEFT;\n  }\n\n  private _getSlideById(slideId: string): NgbSlide { return this.slides.find(slide => slide.id === slideId); }\n\n  private _getSlideIdxById(slideId: string): number {\n    return this.slides.toArray().indexOf(this._getSlideById(slideId));\n  }\n\n  private _getNextSlide(currentSlideId: string): string {\n    const slideArr = this.slides.toArray();\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const isLastSlide = currentSlideIdx === slideArr.length - 1;\n\n    return isLastSlide ? (this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id) :\n                         slideArr[currentSlideIdx + 1].id;\n  }\n\n  private _getPrevSlide(currentSlideId: string): string {\n    const slideArr = this.slides.toArray();\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const isFirstSlide = currentSlideIdx === 0;\n\n    return isFirstSlide ? (this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id) :\n                          slideArr[currentSlideIdx - 1].id;\n  }\n}\n\n/**\n * A slide change event emitted right after the slide transition is completed.\n */\nexport interface NgbSlideEvent {\n  /**\n   * The previous slide id.\n   */\n  prev: string;\n\n  /**\n   * The current slide id.\n   */\n  current: string;\n\n  /**\n   * The slide event direction.\n   *\n   * Possible values are `'left' | 'right'`.\n   */\n  direction: NgbSlideEventDirection;\n}\n\n/**\n * Defines the carousel slide transition direction.\n */\nexport enum NgbSlideEventDirection {\n  LEFT = <any>'left',\n  RIGHT = <any>'right'\n}\n\nexport const NGB_CAROUSEL_DIRECTIVES = [NgbCarousel, NgbSlide];\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NGB_CAROUSEL_DIRECTIVES} from './carousel';\n\nexport {NgbCarousel, NgbSlide, NgbSlideEvent} from './carousel';\nexport {NgbCarouselConfig} from './carousel-config';\n\n@NgModule({declarations: NGB_CAROUSEL_DIRECTIVES, exports: NGB_CAROUSEL_DIRECTIVES, imports: [CommonModule]})\nexport class NgbCarouselModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbCarouselModule}; }\n}\n","import {Directive, Input} from '@angular/core';\n\n/**\n * A directive to provide a simple way of hiding and showing elements on the page.\n */\n@Directive({\n  selector: '[ngbCollapse]',\n  exportAs: 'ngbCollapse',\n  host: {'[class.collapse]': 'true', '[class.show]': '!collapsed'}\n})\nexport class NgbCollapse {\n  /**\n   * If `true`, will collapse the element or show it otherwise.\n   */\n  @Input('ngbCollapse') collapsed = false;\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {NgbCollapse} from './collapse';\n\nexport {NgbCollapse} from './collapse';\n\n@NgModule({declarations: [NgbCollapse], exports: [NgbCollapse]})\nexport class NgbCollapseModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbCollapseModule}; }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {NgbDateStruct} from './ngb-date-struct';\nimport {isInteger} from '../util/util';\n\n/**\n * A simple class that represents a date that datepicker also uses internally.\n *\n * It is the implementation of the `NgbDateStruct` interface that adds some convenience methods,\n * like `.equals()`, `.before()`, etc.\n *\n * All datepicker APIs consume `NgbDateStruct`, but return `NgbDate`.\n *\n * In many cases it is simpler to manipulate these objects together with\n * [`NgbCalendar`](#/components/datepicker/api#NgbCalendar) than native JS Dates.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n *\n * @since 3.0.0\n */\nexport class NgbDate implements NgbDateStruct {\n  /**\n   * The year, for example 2016\n   */\n  year: number;\n\n  /**\n   * The month, for example 1=Jan ... 12=Dec as in ISO 8601\n   */\n  month: number;\n\n  /**\n   * The day of month, starting with 1\n   */\n  day: number;\n\n  /**\n   * A **static method** that creates a new date object from the `NgbDateStruct`,\n   *\n   * ex. `NgbDate.from({year: 2000, month: 5, day: 1})`.\n   *\n   * If the `date` is already of `NgbDate` type, the method will return the same object.\n   */\n  static from(date: NgbDateStruct): NgbDate {\n    if (date instanceof NgbDate) {\n      return date;\n    }\n    return date ? new NgbDate(date.year, date.month, date.day) : null;\n  }\n\n  constructor(year: number, month: number, day: number) {\n    this.year = isInteger(year) ? year : null;\n    this.month = isInteger(month) ? month : null;\n    this.day = isInteger(day) ? day : null;\n  }\n\n  /**\n   * Checks if the current date is equal to another date.\n   */\n  equals(other: NgbDateStruct): boolean {\n    return other && this.year === other.year && this.month === other.month && this.day === other.day;\n  }\n\n  /**\n   * Checks if the current date is before another date.\n   */\n  before(other: NgbDateStruct): boolean {\n    if (!other) {\n      return false;\n    }\n\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day < other.day;\n      } else {\n        return this.month < other.month;\n      }\n    } else {\n      return this.year < other.year;\n    }\n  }\n\n  /**\n   * Checks if the current date is after another date.\n   */\n  after(other: NgbDateStruct): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day > other.day;\n      } else {\n        return this.month > other.month;\n      }\n    } else {\n      return this.year > other.year;\n    }\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {Injectable} from '@angular/core';\nimport {isInteger} from '../util/util';\n\nexport function fromJSDate(jsDate: Date) {\n  return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\nexport function toJSDate(date: NgbDate) {\n  const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n  // this is done avoid 30 -> 1930 conversion\n  if (!isNaN(jsDate.getTime())) {\n    jsDate.setFullYear(date.year);\n  }\n  return jsDate;\n}\n\nexport type NgbPeriod = 'y' | 'm' | 'd';\n\nexport function NGB_DATEPICKER_CALENDAR_FACTORY() {\n  return new NgbCalendarGregorian();\n}\n\n/**\n * A service that represents the calendar used by the datepicker.\n *\n * The default implementation uses the Gregorian calendar. You can inject it in your own\n * implementations if necessary to simplify `NgbDate` calculations.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_CALENDAR_FACTORY})\nexport abstract class NgbCalendar {\n  /**\n   * Returns the number of days per week.\n   */\n  abstract getDaysPerWeek(): number;\n\n  /**\n   * Returns an array of months per year.\n   *\n   * With default calendar we use ISO 8601 and return [1, 2, ..., 12];\n   */\n  abstract getMonths(year?: number): number[];\n\n  /**\n   * Returns the number of weeks per month.\n   */\n  abstract getWeeksPerMonth(): number;\n\n  /**\n   * Returns the weekday number for a given day.\n   *\n   * With the default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\n   */\n  abstract getWeekday(date: NgbDate): number;\n\n  /**\n   * Adds a number of years, months or days to a given date.\n   *\n   * * `period` can be `y`, `m` or `d` and defaults to day.\n   * * `number` defaults to 1.\n   *\n   * Always returns a new date.\n   */\n  abstract getNext(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n  /**\n   * Subtracts a number of years, months or days from a given date.\n   *\n   * * `period` can be `y`, `m` or `d` and defaults to day.\n   * * `number` defaults to 1.\n   *\n   * Always returns a new date.\n   */\n  abstract getPrev(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n  /**\n   * Returns the week number for a given week.\n   */\n  abstract getWeekNumber(week: NgbDate[], firstDayOfWeek: number): number;\n\n  /**\n   * Returns the today's date.\n   */\n  abstract getToday(): NgbDate;\n\n  /**\n   * Checks if a date is valid in the current calendar.\n   */\n  abstract isValid(date: NgbDate): boolean;\n}\n\n@Injectable()\nexport class NgbCalendarGregorian extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    let jsDate = toJSDate(date);\n\n    switch (period) {\n      case 'y':\n        return new NgbDate(date.year + number, 1, 1);\n      case 'm':\n        jsDate = new Date(date.year, date.month + number - 1, 1, 12);\n        break;\n      case 'd':\n        jsDate.setDate(jsDate.getDate() + number);\n        break;\n      default:\n        return date;\n    }\n\n    return fromJSDate(jsDate);\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    let jsDate = toJSDate(date);\n    let day = jsDate.getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    let date = week[thursdayIndex];\n\n    const jsDate = toJSDate(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    jsDate.setMonth(0);  // Compare with Jan 1\n    jsDate.setDate(1);\n    return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return fromJSDate(new Date()); }\n\n  isValid(date: NgbDate): boolean {\n    if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n      return false;\n    }\n\n    // year 0 doesn't exist in Gregorian calendar\n    if (date.year === 0) {\n      return false;\n    }\n\n    const jsDate = toJSDate(date);\n\n    return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month &&\n        jsDate.getDate() === date.day;\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {DatepickerViewModel, DayViewModel, MonthViewModel} from './datepicker-view-model';\nimport {NgbCalendar} from './ngb-calendar';\nimport {isDefined} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\nexport function isChangedDate(prev: NgbDate, next: NgbDate) {\n  return !dateComparator(prev, next);\n}\n\nexport function dateComparator(prev: NgbDate, next: NgbDate) {\n  return (!prev && !next) || (!!prev && !!next && prev.equals(next));\n}\n\nexport function checkMinBeforeMax(minDate: NgbDate, maxDate: NgbDate) {\n  if (maxDate && minDate && maxDate.before(minDate)) {\n    throw new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`);\n  }\n}\n\nexport function checkDateInRange(date: NgbDate, minDate: NgbDate, maxDate: NgbDate): NgbDate {\n  if (date && minDate && date.before(minDate)) {\n    return minDate;\n  }\n  if (date && maxDate && date.after(maxDate)) {\n    return maxDate;\n  }\n\n  return date;\n}\n\nexport function isDateSelectable(date: NgbDate, state: DatepickerViewModel) {\n  const {minDate, maxDate, disabled, markDisabled} = state;\n  // clang-format off\n  return !(\n    !isDefined(date) ||\n    disabled ||\n    (markDisabled && markDisabled(date, {year: date.year, month: date.month})) ||\n    (minDate && date.before(minDate)) ||\n    (maxDate && date.after(maxDate))\n  );\n  // clang-format on\n}\n\nexport function generateSelectBoxMonths(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate, maxDate: NgbDate) {\n  if (!date) {\n    return [];\n  }\n\n  let months = calendar.getMonths(date.year);\n\n  if (minDate && date.year === minDate.year) {\n    const index = months.findIndex(month => month === minDate.month);\n    months = months.slice(index);\n  }\n\n  if (maxDate && date.year === maxDate.year) {\n    const index = months.findIndex(month => month === maxDate.month);\n    months = months.slice(0, index + 1);\n  }\n\n  return months;\n}\n\nexport function generateSelectBoxYears(date: NgbDate, minDate: NgbDate, maxDate: NgbDate) {\n  if (!date) {\n    return [];\n  }\n\n  const start = minDate && minDate.year || date.year - 10;\n  const end = maxDate && maxDate.year || date.year + 10;\n\n  return Array.from({length: end - start + 1}, (e, i) => start + i);\n}\n\nexport function nextMonthDisabled(calendar: NgbCalendar, date: NgbDate, maxDate: NgbDate) {\n  return maxDate && calendar.getNext(date, 'm').after(maxDate);\n}\n\nexport function prevMonthDisabled(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate) {\n  const prevDate = calendar.getPrev(date, 'm');\n  return minDate && (prevDate.year === minDate.year && prevDate.month < minDate.month ||\n                     prevDate.year < minDate.year && minDate.month === 1);\n}\n\nexport function buildMonths(\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\n    force: boolean): MonthViewModel[] {\n  const {displayMonths, months} = state;\n  // move old months to a temporary array\n  const monthsToReuse = months.splice(0, months.length);\n\n  // generate new first dates, nullify or reuse months\n  const firstDates = Array.from({length: displayMonths}, (_, i) => {\n    const firstDate = calendar.getNext(date, 'm', i);\n    months[i] = null;\n\n    if (!force) {\n      const reusedIndex = monthsToReuse.findIndex(month => month.firstDate.equals(firstDate));\n      // move reused month back to months\n      if (reusedIndex !== -1) {\n        months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n      }\n    }\n\n    return firstDate;\n  });\n\n  // rebuild nullified months\n  firstDates.forEach((firstDate, i) => {\n    if (months[i] === null) {\n      months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || {} as MonthViewModel);\n    }\n  });\n\n  return months;\n}\n\nexport function buildMonth(\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\n    month: MonthViewModel = {} as MonthViewModel): MonthViewModel {\n  const {dayTemplateData, minDate, maxDate, firstDayOfWeek, markDisabled, outsideDays} = state;\n  const calendarToday = calendar.getToday();\n\n  month.firstDate = null;\n  month.lastDate = null;\n  month.number = date.month;\n  month.year = date.year;\n  month.weeks = month.weeks || [];\n  month.weekdays = month.weekdays || [];\n\n  date = getFirstViewDate(calendar, date, firstDayOfWeek);\n\n  // month has weeks\n  for (let week = 0; week < calendar.getWeeksPerMonth(); week++) {\n    let weekObject = month.weeks[week];\n    if (!weekObject) {\n      weekObject = month.weeks[week] = {number: 0, days: [], collapsed: true};\n    }\n    const days = weekObject.days;\n\n    // week has days\n    for (let day = 0; day < calendar.getDaysPerWeek(); day++) {\n      if (week === 0) {\n        month.weekdays[day] = calendar.getWeekday(date);\n      }\n\n      const newDate = new NgbDate(date.year, date.month, date.day);\n      const nextDate = calendar.getNext(newDate);\n\n      const ariaLabel = i18n.getDayAriaLabel(newDate);\n\n      // marking date as disabled\n      let disabled = !!((minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate)));\n      if (!disabled && markDisabled) {\n        disabled = markDisabled(newDate, {month: month.number, year: month.year});\n      }\n\n      // today\n      let today = newDate.equals(calendarToday);\n\n      // adding user-provided data to the context\n      let contextUserData =\n          dayTemplateData ? dayTemplateData(newDate, {month: month.number, year: month.year}) : undefined;\n\n      // saving first date of the month\n      if (month.firstDate === null && newDate.month === month.number) {\n        month.firstDate = newDate;\n      }\n\n      // saving last date of the month\n      if (newDate.month === month.number && nextDate.month !== month.number) {\n        month.lastDate = newDate;\n      }\n\n      let dayObject = days[day];\n      if (!dayObject) {\n        dayObject = days[day] = {} as DayViewModel;\n      }\n      dayObject.date = newDate;\n      dayObject.context = Object.assign(dayObject.context || {}, {\n        $implicit: newDate,\n        date: newDate,\n        data: contextUserData,\n        currentMonth: month.number, disabled,\n        focused: false,\n        selected: false, today\n      });\n      dayObject.tabindex = -1;\n      dayObject.ariaLabel = ariaLabel;\n      dayObject.hidden = false;\n\n      date = nextDate;\n    }\n\n    weekObject.number = calendar.getWeekNumber(days.map(day => day.date), firstDayOfWeek);\n\n    // marking week as collapsed\n    weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number &&\n        days[days.length - 1].date.month !== month.number;\n  }\n\n  return month;\n}\n\nexport function getFirstViewDate(calendar: NgbCalendar, date: NgbDate, firstDayOfWeek: number): NgbDate {\n  const daysPerWeek = calendar.getDaysPerWeek();\n  const firstMonthDate = new NgbDate(date.year, date.month, 1);\n  const dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n  return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n","import {Inject, Injectable, LOCALE_ID} from '@angular/core';\nimport {FormStyle, getLocaleDayNames, getLocaleMonthNames, TranslationWidth, formatDate} from '@angular/common';\nimport {NgbDateStruct} from './ngb-date-struct';\n\nexport function NGB_DATEPICKER_18N_FACTORY(locale) {\n  return new NgbDatepickerI18nDefault(locale);\n}\n\n/**\n * A service supplying i18n data to the datepicker component.\n *\n * The default implementation of this service uses the Angular locale and registered locale data for\n * weekdays and month names (as explained in the Angular i18n guide).\n *\n * It also provides a way to i18n data that depends on calendar calculations, like aria labels, day, week and year\n * numerals. For other static labels the datepicker uses the default Angular i18n.\n *\n * See the [i18n demo](#/components/datepicker/examples#i18n) and\n * [Hebrew calendar demo](#/components/datepicker/calendars#hebrew) on how to extend this class and define\n * a custom provider for i18n.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_18N_FACTORY, deps: [LOCALE_ID]})\nexport abstract class NgbDatepickerI18n {\n  /**\n   * Returns the short weekday name to display in the heading of the month view.\n   *\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n   */\n  abstract getWeekdayShortName(weekday: number): string;\n\n  /**\n   * Returns the short month name to display in the date picker navigation.\n   *\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   */\n  abstract getMonthShortName(month: number, year?: number): string;\n\n  /**\n   * Returns the full month name to display in the date picker navigation.\n   *\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   */\n  abstract getMonthFullName(month: number, year?: number): string;\n\n  /**\n   * Returns the value of the `aria-label` attribute for a specific date.\n   *\n   * @since 2.0.0\n   */\n  abstract getDayAriaLabel(date: NgbDateStruct): string;\n\n  /**\n   * Returns the textual representation of a day that is rendered in a day cell.\n   *\n   * @since 3.0.0\n   */\n  getDayNumerals(date: NgbDateStruct): string { return `${date.day}`; }\n\n  /**\n   * Returns the textual representation of a week number rendered by datepicker.\n   *\n   * @since 3.0.0\n   */\n  getWeekNumerals(weekNumber: number): string { return `${weekNumber}`; }\n\n  /**\n   * Returns the textual representation of a year that is rendered in the datepicker year select box.\n   *\n   * @since 3.0.0\n   */\n  getYearNumerals(year: number): string { return `${year}`; }\n}\n\n@Injectable()\nexport class NgbDatepickerI18nDefault extends NgbDatepickerI18n {\n  private _weekdaysShort: Array<string>;\n  private _monthsShort: Array<string>;\n  private _monthsFull: Array<string>;\n\n  constructor(@Inject(LOCALE_ID) private _locale: string) {\n    super();\n\n    const weekdaysStartingOnSunday = getLocaleDayNames(_locale, FormStyle.Standalone, TranslationWidth.Short);\n    this._weekdaysShort = weekdaysStartingOnSunday.map((day, index) => weekdaysStartingOnSunday[(index + 1) % 7]);\n\n    this._monthsShort = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\n    this._monthsFull = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Wide);\n  }\n\n  getWeekdayShortName(weekday: number): string { return this._weekdaysShort[weekday - 1]; }\n\n  getMonthShortName(month: number): string { return this._monthsShort[month - 1]; }\n\n  getMonthFullName(month: number): string { return this._monthsFull[month - 1]; }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    const jsDate = new Date(date.year, date.month - 1, date.day);\n    return formatDate(jsDate, 'fullDate', this._locale);\n  }\n}\n","import {NgbCalendar, NgbPeriod} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {DatepickerViewModel, NgbDayTemplateData, NgbMarkDisabled} from './datepicker-view-model';\nimport {Injectable} from '@angular/core';\nimport {isInteger, toInteger} from '../util/util';\nimport {Observable, Subject} from 'rxjs';\nimport {\n  buildMonths,\n  checkDateInRange,\n  checkMinBeforeMax,\n  isChangedDate,\n  isDateSelectable,\n  generateSelectBoxYears,\n  generateSelectBoxMonths,\n  prevMonthDisabled,\n  nextMonthDisabled\n} from './datepicker-tools';\n\nimport {filter} from 'rxjs/operators';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Injectable()\nexport class NgbDatepickerService {\n  private _model$ = new Subject<DatepickerViewModel>();\n\n  private _select$ = new Subject<NgbDate>();\n\n  private _state: DatepickerViewModel = {\n    disabled: false,\n    displayMonths: 1,\n    firstDayOfWeek: 1,\n    focusVisible: false,\n    months: [],\n    navigation: 'select',\n    outsideDays: 'visible',\n    prevDisabled: false,\n    nextDisabled: false,\n    selectBoxes: {years: [], months: []},\n    selectedDate: null\n  };\n\n  get model$(): Observable<DatepickerViewModel> { return this._model$.pipe(filter(model => model.months.length > 0)); }\n\n  get select$(): Observable<NgbDate> { return this._select$.pipe(filter(date => date !== null)); }\n\n  set dayTemplateData(dayTemplateData: NgbDayTemplateData) {\n    if (this._state.dayTemplateData !== dayTemplateData) {\n      this._nextState({dayTemplateData});\n    }\n  }\n\n  set disabled(disabled: boolean) {\n    if (this._state.disabled !== disabled) {\n      this._nextState({disabled});\n    }\n  }\n\n  set displayMonths(displayMonths: number) {\n    displayMonths = toInteger(displayMonths);\n    if (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\n      this._nextState({displayMonths});\n    }\n  }\n\n  set firstDayOfWeek(firstDayOfWeek: number) {\n    firstDayOfWeek = toInteger(firstDayOfWeek);\n    if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\n      this._nextState({firstDayOfWeek});\n    }\n  }\n\n  set focusVisible(focusVisible: boolean) {\n    if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\n      this._nextState({focusVisible});\n    }\n  }\n\n  set maxDate(date: NgbDate) {\n    const maxDate = this.toValidDate(date, null);\n    if (isChangedDate(this._state.maxDate, maxDate)) {\n      this._nextState({maxDate});\n    }\n  }\n\n  set markDisabled(markDisabled: NgbMarkDisabled) {\n    if (this._state.markDisabled !== markDisabled) {\n      this._nextState({markDisabled});\n    }\n  }\n\n  set minDate(date: NgbDate) {\n    const minDate = this.toValidDate(date, null);\n    if (isChangedDate(this._state.minDate, minDate)) {\n      this._nextState({minDate});\n    }\n  }\n\n  set navigation(navigation: 'select' | 'arrows' | 'none') {\n    if (this._state.navigation !== navigation) {\n      this._nextState({navigation});\n    }\n  }\n\n  set outsideDays(outsideDays: 'visible' | 'collapsed' | 'hidden') {\n    if (this._state.outsideDays !== outsideDays) {\n      this._nextState({outsideDays});\n    }\n  }\n\n  constructor(private _calendar: NgbCalendar, private _i18n: NgbDatepickerI18n) {}\n\n  focus(date: NgbDate) {\n    if (!this._state.disabled && this._calendar.isValid(date) && isChangedDate(this._state.focusDate, date)) {\n      this._nextState({focusDate: date});\n    }\n  }\n\n  focusMove(period?: NgbPeriod, number?: number) {\n    this.focus(this._calendar.getNext(this._state.focusDate, period, number));\n  }\n\n  focusSelect() {\n    if (isDateSelectable(this._state.focusDate, this._state)) {\n      this.select(this._state.focusDate, {emitEvent: true});\n    }\n  }\n\n  open(date: NgbDate) {\n    const firstDate = this.toValidDate(date, this._calendar.getToday());\n    if (!this._state.disabled) {\n      this._nextState({firstDate});\n    }\n  }\n\n  reset(state: DatepickerViewModel) { this._state = state; }\n\n  select(date: NgbDate, options: {emitEvent?: boolean} = {}) {\n    const selectedDate = this.toValidDate(date, null);\n    if (!this._state.disabled) {\n      if (isChangedDate(this._state.selectedDate, selectedDate)) {\n        this._nextState({selectedDate});\n      }\n\n      if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n        this._select$.next(selectedDate);\n      }\n    }\n  }\n\n  toValidDate(date: NgbDateStruct, defaultValue?: NgbDate): NgbDate {\n    const ngbDate = NgbDate.from(date);\n    if (defaultValue === undefined) {\n      defaultValue = this._calendar.getToday();\n    }\n    return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n  }\n\n  private _nextState(patch: Partial<DatepickerViewModel>) {\n    const newState = this._updateState(patch);\n    this._patchContexts(newState);\n    this._state = newState;\n    this._model$.next(this._state);\n  }\n\n  private _patchContexts(state: DatepickerViewModel) {\n    const {months, displayMonths, selectedDate, focusDate, focusVisible, disabled, outsideDays} = state;\n    state.months.forEach(month => {\n      month.weeks.forEach(week => {\n        week.days.forEach(day => {\n\n          // patch focus flag\n          if (focusDate) {\n            day.context.focused = focusDate.equals(day.date) && focusVisible;\n          }\n\n          // calculating tabindex\n          day.tabindex = !disabled && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1;\n\n          // override context disabled\n          if (disabled === true) {\n            day.context.disabled = true;\n          }\n\n          // patch selection flag\n          if (selectedDate !== undefined) {\n            day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n          }\n\n          // visibility\n          if (month.number !== day.date.month) {\n            day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' ||\n                (displayMonths > 1 && day.date.after(months[0].firstDate) &&\n                 day.date.before(months[displayMonths - 1].lastDate));\n          }\n        });\n      });\n    });\n  }\n\n  private _updateState(patch: Partial<DatepickerViewModel>): DatepickerViewModel {\n    // patching fields\n    const state = Object.assign({}, this._state, patch);\n\n    let startDate = state.firstDate;\n\n    // min/max dates changed\n    if ('minDate' in patch || 'maxDate' in patch) {\n      checkMinBeforeMax(state.minDate, state.maxDate);\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n    }\n\n    // disabled\n    if ('disabled' in patch) {\n      state.focusVisible = false;\n    }\n\n    // initial rebuild via 'select()'\n    if ('selectedDate' in patch && this._state.months.length === 0) {\n      startDate = state.selectedDate;\n    }\n\n    // terminate early if only focus visibility was changed\n    if ('focusVisible' in patch) {\n      return state;\n    }\n\n    // focus date changed\n    if ('focusDate' in patch) {\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n\n      // nothing to rebuild if only focus changed and it is still visible\n      if (state.months.length !== 0 && !state.focusDate.before(state.firstDate) &&\n          !state.focusDate.after(state.lastDate)) {\n        return state;\n      }\n    }\n\n    // first date changed\n    if ('firstDate' in patch) {\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.firstDate;\n    }\n\n    // rebuilding months\n    if (startDate) {\n      const forceRebuild = 'dayTemplateData' in patch || 'firstDayOfWeek' in patch || 'markDisabled' in patch ||\n          'minDate' in patch || 'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch;\n\n      const months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild);\n\n      // updating months and boundary dates\n      state.months = months;\n      state.firstDate = months.length > 0 ? months[0].firstDate : undefined;\n      state.lastDate = months.length > 0 ? months[months.length - 1].lastDate : undefined;\n\n      // reset selected date if 'markDisabled' returns true\n      if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n        state.selectedDate = null;\n      }\n\n      // adjusting focus after months were built\n      if ('firstDate' in patch) {\n        if (state.focusDate === undefined || state.focusDate.before(state.firstDate) ||\n            state.focusDate.after(state.lastDate)) {\n          state.focusDate = startDate;\n        }\n      }\n\n      // adjusting months/years for the select box navigation\n      const yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n      const monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n      if (state.navigation === 'select') {\n        // years ->  boundaries (min/max were changed)\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n          state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n        }\n\n        // months -> when current year or boundaries change\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n          state.selectBoxes.months =\n              generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\n        }\n      } else {\n        state.selectBoxes = {years: [], months: []};\n      }\n\n      // updating navigation arrows -> boundaries change (min/max) or month/year changes\n      if ((state.navigation === 'arrows' || state.navigation === 'select') &&\n          (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n        state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n        state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n      }\n    }\n\n    return state;\n  }\n}\n","export enum Key {\n  Tab = 9,\n  Enter = 13,\n  Escape = 27,\n  Space = 32,\n  PageUp = 33,\n  PageDown = 34,\n  End = 35,\n  Home = 36,\n  ArrowLeft = 37,\n  ArrowUp = 38,\n  ArrowRight = 39,\n  ArrowDown = 40\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDatepickerService} from './datepicker-service';\nimport {NgbCalendar} from './ngb-calendar';\nimport {Key} from '../util/key';\nimport {NgbDate} from './ngb-date';\n\n@Injectable()\nexport class NgbDatepickerKeyMapService {\n  private _minDate: NgbDate;\n  private _maxDate: NgbDate;\n  private _firstViewDate: NgbDate;\n  private _lastViewDate: NgbDate;\n\n  constructor(private _service: NgbDatepickerService, private _calendar: NgbCalendar) {\n    _service.model$.subscribe(model => {\n      this._minDate = model.minDate;\n      this._maxDate = model.maxDate;\n      this._firstViewDate = model.firstDate;\n      this._lastViewDate = model.lastDate;\n    });\n  }\n\n  processKey(event: KeyboardEvent) {\n    // tslint:disable-next-line:deprecation\n    switch (event.which) {\n      case Key.PageUp:\n        this._service.focusMove(event.shiftKey ? 'y' : 'm', -1);\n        break;\n      case Key.PageDown:\n        this._service.focusMove(event.shiftKey ? 'y' : 'm', 1);\n        break;\n      case Key.End:\n        this._service.focus(event.shiftKey ? this._maxDate : this._lastViewDate);\n        break;\n      case Key.Home:\n        this._service.focus(event.shiftKey ? this._minDate : this._firstViewDate);\n        break;\n      case Key.ArrowLeft:\n        this._service.focusMove('d', -1);\n        break;\n      case Key.ArrowUp:\n        this._service.focusMove('d', -this._calendar.getDaysPerWeek());\n        break;\n      case Key.ArrowRight:\n        this._service.focusMove('d', 1);\n        break;\n      case Key.ArrowDown:\n        this._service.focusMove('d', this._calendar.getDaysPerWeek());\n        break;\n      case Key.Enter:\n      case Key.Space:\n        this._service.focusSelect();\n        break;\n      default:\n        return;\n    }\n\n    // note 'return' in default case\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {DayTemplateContext} from './datepicker-day-template-context';\n\nexport type NgbMarkDisabled = (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\nexport type NgbDayTemplateData = (date: NgbDateStruct, current: {year: number, month: number}) => any;\n\nexport type DayViewModel = {\n  date: NgbDate,\n  context: DayTemplateContext,\n  tabindex: number,\n  ariaLabel: string,\n  hidden: boolean\n};\n\nexport type WeekViewModel = {\n  number: number,\n  days: DayViewModel[],\n  collapsed: boolean\n};\n\nexport type MonthViewModel = {\n  firstDate: NgbDate,\n  lastDate: NgbDate,\n  number: number,\n  year: number,\n  weeks: WeekViewModel[],\n  weekdays: number[]\n};\n\n// clang-format off\nexport type DatepickerViewModel = {\n  dayTemplateData?: NgbDayTemplateData,\n  disabled: boolean,\n  displayMonths: number,\n  firstDate?: NgbDate,\n  firstDayOfWeek: number,\n  focusDate?: NgbDate,\n  focusVisible: boolean,\n  lastDate?: NgbDate,\n  markDisabled?: NgbMarkDisabled,\n  maxDate?: NgbDate,\n  minDate?: NgbDate,\n  months: MonthViewModel[],\n  navigation: 'select' | 'arrows' | 'none',\n  outsideDays: 'visible' | 'collapsed' | 'hidden',\n  prevDisabled: boolean,\n  nextDisabled: boolean,\n  selectBoxes: {\n    years: number[],\n    months: number[]\n  },\n  selectedDate: NgbDate\n};\n// clang-format on\n\nexport enum NavigationEvent {\n  PREV,\n  NEXT\n}\n","import {Injectable, TemplateRef} from '@angular/core';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDateStruct} from './ngb-date-struct';\n\n/**\n * A configuration service for the [`NgbDatepicker`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDatepickerConfig {\n  dayTemplate: TemplateRef<DayTemplateContext>;\n  dayTemplateData: (date: NgbDateStruct, current: {year: number, month: number}) => any;\n  footerTemplate: TemplateRef<any>;\n  displayMonths = 1;\n  firstDayOfWeek = 1;\n  markDisabled: (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\n  minDate: NgbDateStruct;\n  maxDate: NgbDateStruct;\n  navigation: 'select' | 'arrows' | 'none' = 'select';\n  outsideDays: 'visible' | 'collapsed' | 'hidden' = 'visible';\n  showWeekdays = true;\n  showWeekNumbers = false;\n  startDate: {year: number, month: number};\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {isInteger} from '../../util/util';\n\nexport function NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {\n  return new NgbDateStructAdapter();\n}\n\n/**\n * An abstract service that does the conversion between the internal datepicker `NgbDateStruct` model and\n * any provided user date model `D`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding datepicker to a form control,\n * ex. `[(ngModel)]=\"userDateModel\"`. Here `userDateModel` can be of any type.\n *\n * The default datepicker implementation assumes we use `NgbDateStruct` as a user model.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details\n * and the [custom adapter demo](#/components/datepicker/examples#adapter) for an example.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY})\nexport abstract class NgbDateAdapter<D> {\n  /**\n   * Converts a user-model date of type `D` to an `NgbDateStruct` for internal use.\n   */\n  abstract fromModel(value: D): NgbDateStruct;\n\n  /**\n   * Converts an internal `NgbDateStruct` date to a user-model date of type `D`.\n   */\n  abstract toModel(date: NgbDateStruct): D;\n}\n\n@Injectable()\nexport class NgbDateStructAdapter extends NgbDateAdapter<NgbDateStruct> {\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  fromModel(date: NgbDateStruct): NgbDateStruct {\n    return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n        {year: date.year, month: date.month, day: date.day} :\n        null;\n  }\n\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  toModel(date: NgbDateStruct): NgbDateStruct {\n    return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n        {year: date.year, month: date.month, day: date.day} :\n        null;\n  }\n}\n","import {fromEvent, merge, Subject} from 'rxjs';\nimport {filter, take, takeUntil} from 'rxjs/operators';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerService} from './datepicker-service';\nimport {NgbDatepickerKeyMapService} from './datepicker-keymap-service';\nimport {DatepickerViewModel, NavigationEvent} from './datepicker-view-model';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {isChangedDate} from './datepicker-tools';\nimport {hasClassName} from '../util/util';\n\nconst NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbDatepicker),\n  multi: true\n};\n\n/**\n * An event emitted right before the navigation happens and the month displayed by the datepicker changes.\n */\nexport interface NgbDatepickerNavigateEvent {\n  /**\n   * The currently displayed month.\n   */\n  current: {year: number, month: number};\n\n  /**\n   * The month we're navigating to.\n   */\n  next: {year: number, month: number};\n\n  /**\n   * Calling this function will prevent navigation from happening.\n   *\n   * @since 4.1.0\n   */\n  preventDefault: () => void;\n}\n\n/**\n * A highly configurable component that helps you with selecting calendar dates.\n *\n * `NgbDatepicker` is meant to be displayed inline on a page or put inside a popup.\n */\n@Component({\n  exportAs: 'ngbDatepicker',\n  selector: 'ngb-datepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker.scss'],\n  template: `\n    <ng-template #dt let-date=\"date\" let-currentMonth=\"currentMonth\" let-selected=\"selected\" let-disabled=\"disabled\" let-focused=\"focused\">\n      <div ngbDatepickerDayView\n        [date]=\"date\"\n        [currentMonth]=\"currentMonth\"\n        [selected]=\"selected\"\n        [disabled]=\"disabled\"\n        [focused]=\"focused\">\n      </div>\n    </ng-template>\n\n    <div class=\"ngb-dp-header bg-light\">\n      <ngb-datepicker-navigation *ngIf=\"navigation !== 'none'\"\n        [date]=\"model.firstDate\"\n        [months]=\"model.months\"\n        [disabled]=\"model.disabled\"\n        [showSelect]=\"model.navigation === 'select'\"\n        [prevDisabled]=\"model.prevDisabled\"\n        [nextDisabled]=\"model.nextDisabled\"\n        [selectBoxes]=\"model.selectBoxes\"\n        (navigate)=\"onNavigateEvent($event)\"\n        (select)=\"onNavigateDateSelect($event)\">\n      </ngb-datepicker-navigation>\n    </div>\n\n    <div #months class=\"ngb-dp-months\" (keydown)=\"onKeyDown($event)\">\n      <ng-template ngFor let-month [ngForOf]=\"model.months\" let-i=\"index\">\n        <div class=\"ngb-dp-month\">\n          <div *ngIf=\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\"\n                class=\"ngb-dp-month-name bg-light\">\n            {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n          </div>\n          <ngb-datepicker-month-view\n            [month]=\"month\"\n            [dayTemplate]=\"dayTemplate || dt\"\n            [showWeekdays]=\"showWeekdays\"\n            [showWeekNumbers]=\"showWeekNumbers\"\n            (select)=\"onDateSelect($event)\">\n          </ngb-datepicker-month-view>\n        </div>\n      </ng-template>\n    </div>\n\n    <ng-template [ngTemplateOutlet]=\"footerTemplate\"></ng-template>\n  `,\n  providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NgbDatepickerService, NgbDatepickerKeyMapService]\n})\nexport class NgbDatepicker implements OnDestroy,\n    OnChanges, OnInit, AfterViewInit, ControlValueAccessor {\n  model: DatepickerViewModel;\n\n  @ViewChild('months') private _monthsEl: ElementRef<HTMLElement>;\n  private _controlValue: NgbDate;\n  private _destroyed$ = new Subject<void>();\n\n  /**\n   * The reference to a custom template for the day.\n   *\n   * Allows to completely override the way a day 'cell' in the calendar is displayed.\n   *\n   * See [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext) for the data you get inside.\n   */\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * The callback to pass any arbitrary data to the template cell via the\n   * [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext)'s `data` parameter.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   *\n   * @since 3.3.0\n   */\n  @Input() dayTemplateData: (date: NgbDate, current: {year: number, month: number}) => any;\n\n  /**\n   * The number of months to display.\n   */\n  @Input() displayMonths: number;\n\n  /**\n   * The first day of the week.\n   *\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n   */\n  @Input() firstDayOfWeek: number;\n\n  /**\n   * The reference to the custom template for the datepicker footer.\n   *\n   * @since 3.3.0\n   */\n  @Input() footerTemplate: TemplateRef<any>;\n\n  /**\n   * The callback to mark some dates as disabled.\n   *\n   * It is called for each new date when navigating to a different month.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   */\n  @Input() markDisabled: (date: NgbDate, current: {year: number, month: number}) => boolean;\n\n  /**\n   * The latest date that can be displayed or selected.\n   *\n   * If not provided, 'year' select box will display 10 years after the current month.\n   */\n  @Input() maxDate: NgbDateStruct;\n\n  /**\n   * The earliest date that can be displayed or selected.\n   *\n   * If not provided, 'year' select box will display 10 years before the current month.\n   */\n  @Input() minDate: NgbDateStruct;\n\n  /**\n   * Navigation type.\n   *\n   * * `\"select\"` - select boxes for month and navigation arrows\n   * * `\"arrows\"` - only navigation arrows\n   * * `\"none\"` - no navigation visible at all\n   */\n  @Input() navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way of displaying days that don't belong to the current month.\n   *\n   * * `\"visible\"` - days are visible\n   * * `\"hidden\"` - days are hidden, white space preserved\n   * * `\"collapsed\"` - days are collapsed, so the datepicker height might change between months\n   *\n   * For the 2+ months view, days in between months are never shown.\n   */\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * If `true`, weekdays will be displayed.\n   */\n  @Input() showWeekdays: boolean;\n\n  /**\n   * If `true`, week numbers will be displayed.\n   */\n  @Input() showWeekNumbers: boolean;\n\n  /**\n   * The date to open calendar with.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date is provided, calendar will open with current month.\n   *\n   * You could use `navigateTo(date)` method as an alternative.\n   */\n  @Input() startDate: {year: number, month: number, day?: number};\n\n  /**\n   * An event emitted right before the navigation happens and displayed month changes.\n   *\n   * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n   */\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  /**\n   * An event emitted when user selects a date using keyboard or mouse.\n   *\n   * The payload of the event is currently selected `NgbDate`.\n   */\n  @Output() select = new EventEmitter<NgbDate>();\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(\n      private _keyMapService: NgbDatepickerKeyMapService, public _service: NgbDatepickerService,\n      private _calendar: NgbCalendar, public i18n: NgbDatepickerI18n, config: NgbDatepickerConfig,\n      private _cd: ChangeDetectorRef, private _elementRef: ElementRef<HTMLElement>,\n      private _ngbDateAdapter: NgbDateAdapter<any>, private _ngZone: NgZone) {\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n     'maxDate', 'navigation', 'outsideDays', 'showWeekdays', 'showWeekNumbers', 'startDate']\n        .forEach(input => this[input] = config[input]);\n\n    _service.select$.pipe(takeUntil(this._destroyed$)).subscribe(date => { this.select.emit(date); });\n\n    _service.model$.pipe(takeUntil(this._destroyed$)).subscribe(model => {\n      const newDate = model.firstDate;\n      const oldDate = this.model ? this.model.firstDate : null;\n\n      let navigationPrevented = false;\n      // emitting navigation event if the first month changes\n      if (!newDate.equals(oldDate)) {\n        this.navigate.emit({\n          current: oldDate ? {year: oldDate.year, month: oldDate.month} : null,\n          next: {year: newDate.year, month: newDate.month},\n          preventDefault: () => navigationPrevented = true\n        });\n\n        // can't prevent the very first navigation\n        if (navigationPrevented && oldDate !== null) {\n          this._service.reset(this.model);\n          return;\n        }\n      }\n\n      const newSelectedDate = model.selectedDate;\n      const newFocusedDate = model.focusDate;\n      const oldFocusedDate = this.model ? this.model.focusDate : null;\n\n      this.model = model;\n\n      // handling selection change\n      if (isChangedDate(newSelectedDate, this._controlValue)) {\n        this._controlValue = newSelectedDate;\n        this.onTouched();\n        this.onChange(this._ngbDateAdapter.toModel(newSelectedDate));\n      }\n\n      // handling focus change\n      if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n        this.focus();\n      }\n\n      _cd.markForCheck();\n    });\n  }\n\n  focus() {\n    this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      const elementToFocus =\n          this._elementRef.nativeElement.querySelector<HTMLDivElement>('div.ngb-dp-day[tabindex=\"0\"]');\n      if (elementToFocus) {\n        elementToFocus.focus();\n      }\n    });\n  }\n\n  /**\n   * Navigates to the provided date.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   *\n   * Use the `[startDate]` input as an alternative.\n   */\n  navigateTo(date?: {year: number, month: number, day?: number}) {\n    this._service.open(NgbDate.from(date ? date.day ? date as NgbDateStruct : {...date, day: 1} : null));\n  }\n\n  ngAfterViewInit() {\n    this._ngZone.runOutsideAngular(() => {\n      const focusIns$ = fromEvent<FocusEvent>(this._monthsEl.nativeElement, 'focusin');\n      const focusOuts$ = fromEvent<FocusEvent>(this._monthsEl.nativeElement, 'focusout');\n\n      // we're changing 'focusVisible' only when entering or leaving months view\n      // and ignoring all focus events where both 'target' and 'related' target are day cells\n      merge(focusIns$, focusOuts$)\n          .pipe(\n              filter(\n                  ({target, relatedTarget}) =>\n                      !(hasClassName(target, 'ngb-dp-day') && hasClassName(relatedTarget, 'ngb-dp-day'))),\n              takeUntil(this._destroyed$))\n          .subscribe(({type}) => this._ngZone.run(() => this._service.focusVisible = type === 'focusin'));\n    });\n  }\n\n  ngOnDestroy() { this._destroyed$.next(); }\n\n  ngOnInit() {\n    if (this.model === undefined) {\n      ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n       'outsideDays']\n          .forEach(input => this._service[input] = this[input]);\n      this.navigateTo(this.startDate);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n     'outsideDays']\n        .filter(input => input in changes)\n        .forEach(input => this._service[input] = this[input]);\n\n    if ('startDate' in changes) {\n      this.navigateTo(this.startDate);\n    }\n  }\n\n  onDateSelect(date: NgbDate) {\n    this._service.focus(date);\n    this._service.select(date, {emitEvent: true});\n  }\n\n  onKeyDown(event: KeyboardEvent) { this._keyMapService.processKey(event); }\n\n  onNavigateDateSelect(date: NgbDate) { this._service.open(date); }\n\n  onNavigateEvent(event: NavigationEvent) {\n    switch (event) {\n      case NavigationEvent.PREV:\n        this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n        break;\n      case NavigationEvent.NEXT:\n        this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n        break;\n    }\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean) { this._service.disabled = isDisabled; }\n\n  writeValue(value) {\n    this._controlValue = NgbDate.from(this._ngbDateAdapter.fromModel(value));\n    this._service.select(this._controlValue);\n  }\n}\n","import {Component, Input, TemplateRef, Output, EventEmitter, ViewEncapsulation} from '@angular/core';\nimport {MonthViewModel, DayViewModel} from './datepicker-view-model';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {DayTemplateContext} from './datepicker-day-template-context';\n\n@Component({\n  selector: 'ngb-datepicker-month-view',\n  host: {'role': 'grid'},\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-month-view.scss'],\n  template: `\n    <div *ngIf=\"showWeekdays\" class=\"ngb-dp-week ngb-dp-weekdays bg-light\">\n      <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-weekday ngb-dp-showweek\"></div>\n      <div *ngFor=\"let w of month.weekdays\" class=\"ngb-dp-weekday small\">\n        {{ i18n.getWeekdayShortName(w) }}\n      </div>\n    </div>\n    <ng-template ngFor let-week [ngForOf]=\"month.weeks\">\n      <div *ngIf=\"!week.collapsed\" class=\"ngb-dp-week\" role=\"row\">\n        <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-week-number small text-muted\">{{ i18n.getWeekNumerals(week.number) }}</div>\n        <div *ngFor=\"let day of week.days\" (click)=\"doSelect(day)\" class=\"ngb-dp-day\" role=\"gridcell\"\n          [class.disabled]=\"day.context.disabled\"\n          [tabindex]=\"day.tabindex\"\n          [class.hidden]=\"day.hidden\"\n          [class.ngb-dp-today]=\"day.context.today\"\n          [attr.aria-label]=\"day.ariaLabel\">\n          <ng-template [ngIf]=\"!day.hidden\">\n            <ng-template [ngTemplateOutlet]=\"dayTemplate\" [ngTemplateOutletContext]=\"day.context\"></ng-template>\n          </ng-template>\n        </div>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbDatepickerMonthView {\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n  @Input() month: MonthViewModel;\n  @Input() showWeekdays;\n  @Input() showWeekNumbers;\n\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  doSelect(day: DayViewModel) {\n    if (!day.context.disabled && !day.hidden) {\n      this.select.emit(day.date);\n    }\n  }\n}\n","import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {NavigationEvent, MonthViewModel} from './datepicker-view-model';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: 'ngb-datepicker-navigation',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-navigation.scss'],\n  template: `\n    <div class=\"ngb-dp-arrow\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"navigate.emit(navigation.PREV)\" [disabled]=\"prevDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.previous-month\" aria-label=\"Previous month\"\n              i18n-title=\"@@ngb.datepicker.previous-month\" title=\"Previous month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    <ngb-datepicker-navigation-select *ngIf=\"showSelect\" class=\"ngb-dp-navigation-select\"\n      [date]=\"date\"\n      [disabled] = \"disabled\"\n      [months]=\"selectBoxes.months\"\n      [years]=\"selectBoxes.years\"\n      (select)=\"select.emit($event)\">\n    </ngb-datepicker-navigation-select>\n\n    <ng-template *ngIf=\"!showSelect\" ngFor let-month [ngForOf]=\"months\" let-i=\"index\">\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i > 0\"></div>\n      <div class=\"ngb-dp-month-name\">\n        {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n      </div>\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i !== months.length - 1\"></div>\n    </ng-template>\n    <div class=\"ngb-dp-arrow right\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"navigate.emit(navigation.NEXT)\" [disabled]=\"nextDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.next-month\" aria-label=\"Next month\"\n              i18n-title=\"@@ngb.datepicker.next-month\" title=\"Next month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    `\n})\nexport class NgbDatepickerNavigation {\n  navigation = NavigationEvent;\n\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() months: MonthViewModel[] = [];\n  @Input() showSelect: boolean;\n  @Input() prevDisabled: boolean;\n  @Input() nextDisabled: boolean;\n  @Input() selectBoxes: {years: number[], months: number[]};\n\n  @Output() navigate = new EventEmitter<NavigationEvent>();\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n}\n","import {NgZone} from '@angular/core';\nimport {fromEvent, Observable, race} from 'rxjs';\nimport {delay, filter, map, takeUntil, withLatestFrom} from 'rxjs/operators';\nimport {Key} from './key';\n\nconst isHTMLElementContainedIn = (element: HTMLElement, array?: HTMLElement[]) =>\n    array ? array.some(item => item.contains(element)) : false;\n\n// we'll have to use 'touch' events instead of 'mouse' events on iOS and add a more significant delay\n// to avoid re-opening when handling (click) on a toggling element\n// TODO: use proper Angular platform detection when NgbAutoClose becomes a service and we can inject PLATFORM_ID\nlet iOS = false;\nif (typeof navigator !== 'undefined') {\n  iOS = !!navigator.userAgent && /iPad|iPhone|iPod/.test(navigator.userAgent);\n}\n\nexport function ngbAutoClose(\n    zone: NgZone, document: any, type: boolean | 'inside' | 'outside', close: () => void, closed$: Observable<any>,\n    insideElements: HTMLElement[], ignoreElements?: HTMLElement[]) {\n  // closing on ESC and outside clicks\n  if (type) {\n    zone.runOutsideAngular(() => {\n\n      const shouldCloseOnClick = (event: MouseEvent | TouchEvent) => {\n        const element = event.target as HTMLElement;\n        if ((event instanceof MouseEvent && event.button === 2) || isHTMLElementContainedIn(element, ignoreElements)) {\n          return false;\n        }\n        if (type === 'inside') {\n          return isHTMLElementContainedIn(element, insideElements);\n        } else if (type === 'outside') {\n          return !isHTMLElementContainedIn(element, insideElements);\n        } else /* if (type === true) */ {\n          return true;\n        }\n      };\n\n      const escapes$ = fromEvent<KeyboardEvent>(document, 'keydown')\n                           .pipe(\n                               takeUntil(closed$),\n                               // tslint:disable-next-line:deprecation\n                               filter(e => e.which === Key.Escape));\n\n\n      // we have to pre-calculate 'shouldCloseOnClick' on 'mousedown/touchstart',\n      // because on 'mouseup/touchend' DOM nodes might be detached\n      const mouseDowns$ = fromEvent<MouseEvent>(document, iOS ? 'touchstart' : 'mousedown')\n                              .pipe(map(shouldCloseOnClick), takeUntil(closed$));\n\n      const closeableClicks$ = fromEvent<MouseEvent>(document, iOS ? 'touchend' : 'mouseup')\n                                   .pipe(\n                                       withLatestFrom(mouseDowns$), filter(([_, shouldClose]) => shouldClose),\n                                       delay(iOS ? 16 : 0), takeUntil(closed$));\n\n\n      race<Event>([escapes$, closeableClicks$]).subscribe(() => zone.run(close));\n    });\n  }\n}\n","import {fromEvent, Observable} from 'rxjs';\nimport {filter, map, takeUntil, withLatestFrom} from 'rxjs/operators';\n\nimport {Key} from '../util/key';\n\n\nconst FOCUSABLE_ELEMENTS_SELECTOR = [\n  'a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])',\n  'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex=\"-1\"])'\n].join(', ');\n\n/**\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\n */\nexport function getFocusableBoundaryElements(element: HTMLElement): HTMLElement[] {\n  const list: HTMLElement[] =\n      Array.from(element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR) as NodeListOf<HTMLElement>)\n          .filter(el => el.tabIndex !== -1);\n  return [list[0], list[list.length - 1]];\n}\n\n/**\n * Function that enforces browser focus to be trapped inside a DOM element.\n *\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\n *\n * @param element The element around which focus will be trapped inside\n * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\n * and free internal resources\n * @param refocusOnClick Put the focus back to the last focused element whenever a click occurs on element (default to\n * false)\n */\nexport const ngbFocusTrap = (element: HTMLElement, stopFocusTrap$: Observable<any>, refocusOnClick = false) => {\n  // last focused element\n  const lastFocusedElement$ =\n      fromEvent<FocusEvent>(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map(e => e.target));\n\n  // 'tab' / 'shift+tab' stream\n  fromEvent<KeyboardEvent>(element, 'keydown')\n      .pipe(\n          takeUntil(stopFocusTrap$),\n          // tslint:disable:deprecation\n          filter(e => e.which === Key.Tab),\n          // tslint:enable:deprecation\n          withLatestFrom(lastFocusedElement$))\n      .subscribe(([tabEvent, focusedElement]) => {\n        const[first, last] = getFocusableBoundaryElements(element);\n\n        if ((focusedElement === first || focusedElement === element) && tabEvent.shiftKey) {\n          last.focus();\n          tabEvent.preventDefault();\n        }\n\n        if (focusedElement === last && !tabEvent.shiftKey) {\n          first.focus();\n          tabEvent.preventDefault();\n        }\n      });\n\n  // inside click\n  if (refocusOnClick) {\n    fromEvent(element, 'click')\n        .pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map(arr => arr[1] as HTMLElement))\n        .subscribe(lastFocusedElement => lastFocusedElement.focus());\n  }\n};\n","// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nexport class Positioning {\n  private getAllStyles(element: HTMLElement) { return window.getComputedStyle(element); }\n\n  private getStyle(element: HTMLElement, prop: string): string { return this.getAllStyles(element)[prop]; }\n\n  private isStaticPositioned(element: HTMLElement): boolean {\n    return (this.getStyle(element, 'position') || 'static') === 'static';\n  }\n\n  private offsetParent(element: HTMLElement): HTMLElement {\n    let offsetParentEl = <HTMLElement>element.offsetParent || document.documentElement;\n\n    while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n      offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\n    }\n\n    return offsetParentEl || document.documentElement;\n  }\n\n  position(element: HTMLElement, round = true): ClientRect {\n    let elPosition: ClientRect;\n    let parentOffset: ClientRect = {width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0};\n\n    if (this.getStyle(element, 'position') === 'fixed') {\n      elPosition = element.getBoundingClientRect();\n      elPosition = {\n        top: elPosition.top,\n        bottom: elPosition.bottom,\n        left: elPosition.left,\n        right: elPosition.right,\n        height: elPosition.height,\n        width: elPosition.width\n      };\n    } else {\n      const offsetParentEl = this.offsetParent(element);\n\n      elPosition = this.offset(element, false);\n\n      if (offsetParentEl !== document.documentElement) {\n        parentOffset = this.offset(offsetParentEl, false);\n      }\n\n      parentOffset.top += offsetParentEl.clientTop;\n      parentOffset.left += offsetParentEl.clientLeft;\n    }\n\n    elPosition.top -= parentOffset.top;\n    elPosition.bottom -= parentOffset.top;\n    elPosition.left -= parentOffset.left;\n    elPosition.right -= parentOffset.left;\n\n    if (round) {\n      elPosition.top = Math.round(elPosition.top);\n      elPosition.bottom = Math.round(elPosition.bottom);\n      elPosition.left = Math.round(elPosition.left);\n      elPosition.right = Math.round(elPosition.right);\n    }\n\n    return elPosition;\n  }\n\n  offset(element: HTMLElement, round = true): ClientRect {\n    const elBcr = element.getBoundingClientRect();\n    const viewportOffset = {\n      top: window.pageYOffset - document.documentElement.clientTop,\n      left: window.pageXOffset - document.documentElement.clientLeft\n    };\n\n    let elOffset = {\n      height: elBcr.height || element.offsetHeight,\n      width: elBcr.width || element.offsetWidth,\n      top: elBcr.top + viewportOffset.top,\n      bottom: elBcr.bottom + viewportOffset.top,\n      left: elBcr.left + viewportOffset.left,\n      right: elBcr.right + viewportOffset.left\n    };\n\n    if (round) {\n      elOffset.height = Math.round(elOffset.height);\n      elOffset.width = Math.round(elOffset.width);\n      elOffset.top = Math.round(elOffset.top);\n      elOffset.bottom = Math.round(elOffset.bottom);\n      elOffset.left = Math.round(elOffset.left);\n      elOffset.right = Math.round(elOffset.right);\n    }\n\n    return elOffset;\n  }\n\n  /*\n    Return false if the element to position is outside the viewport\n  */\n  positionElements(hostElement: HTMLElement, targetElement: HTMLElement, placement: string, appendToBody?: boolean):\n      boolean {\n    const[placementPrimary = 'top', placementSecondary = 'center'] = placement.split('-');\n\n    const hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n    const targetElStyles = this.getAllStyles(targetElement);\n\n    const marginTop = parseFloat(targetElStyles.marginTop);\n    const marginBottom = parseFloat(targetElStyles.marginBottom);\n    const marginLeft = parseFloat(targetElStyles.marginLeft);\n    const marginRight = parseFloat(targetElStyles.marginRight);\n\n    let topPosition = 0;\n    let leftPosition = 0;\n\n    switch (placementPrimary) {\n      case 'top':\n        topPosition = (hostElPosition.top - (targetElement.offsetHeight + marginTop + marginBottom));\n        break;\n      case 'bottom':\n        topPosition = (hostElPosition.top + hostElPosition.height);\n        break;\n      case 'left':\n        leftPosition = (hostElPosition.left - (targetElement.offsetWidth + marginLeft + marginRight));\n        break;\n      case 'right':\n        leftPosition = (hostElPosition.left + hostElPosition.width);\n        break;\n    }\n\n    switch (placementSecondary) {\n      case 'top':\n        topPosition = hostElPosition.top;\n        break;\n      case 'bottom':\n        topPosition = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\n        break;\n      case 'left':\n        leftPosition = hostElPosition.left;\n        break;\n      case 'right':\n        leftPosition = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\n        break;\n      case 'center':\n        if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n          leftPosition = (hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2);\n        } else {\n          topPosition = (hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2);\n        }\n        break;\n    }\n\n    /// The translate3d/gpu acceleration render a blurry text on chrome, the next line is commented until a browser fix\n    // targetElement.style.transform = `translate3d(${Math.round(leftPosition)}px, ${Math.floor(topPosition)}px, 0px)`;\n    targetElement.style.transform = `translate(${Math.round(leftPosition)}px, ${Math.round(topPosition)}px)`;\n\n    // Check if the targetElement is inside the viewport\n    const targetElBCR = targetElement.getBoundingClientRect();\n    const html = document.documentElement;\n    const windowHeight = window.innerHeight || html.clientHeight;\n    const windowWidth = window.innerWidth || html.clientWidth;\n\n    return targetElBCR.left >= 0 && targetElBCR.top >= 0 && targetElBCR.right <= windowWidth &&\n        targetElBCR.bottom <= windowHeight;\n  }\n}\n\nconst placementSeparator = /\\s+/;\nconst positionService = new Positioning();\n\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'left', 'right',\n *   'top-left', 'top-right',\n *   'bottom-left', 'bottom-right',\n *   'left-top', 'left-bottom',\n *   'right-top', 'right-bottom'.\n * */\nexport function positionElements(\n    hostElement: HTMLElement, targetElement: HTMLElement, placement: string | Placement | PlacementArray,\n    appendToBody?: boolean, baseClass?: string): Placement {\n  let placementVals: Array<Placement> =\n      Array.isArray(placement) ? placement : placement.split(placementSeparator) as Array<Placement>;\n\n  const allowedPlacements = [\n    'top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top', 'left-bottom',\n    'right-top', 'right-bottom'\n  ];\n\n  const classList = targetElement.classList;\n  const addClassesToTarget = (targetPlacement: Placement): Array<string> => {\n    const[primary, secondary] = targetPlacement.split('-');\n    const classes = [];\n    if (baseClass) {\n      classes.push(`${baseClass}-${primary}`);\n      if (secondary) {\n        classes.push(`${baseClass}-${primary}-${secondary}`);\n      }\n\n      classes.forEach((classname) => { classList.add(classname); });\n    }\n    return classes;\n  };\n\n  // Remove old placement classes to avoid issues\n  if (baseClass) {\n    allowedPlacements.forEach((placementToRemove) => { classList.remove(`${baseClass}-${placementToRemove}`); });\n  }\n\n  // replace auto placement with other placements\n  let hasAuto = placementVals.findIndex(val => val === 'auto');\n  if (hasAuto >= 0) {\n    allowedPlacements.forEach(function(obj) {\n      if (placementVals.find(val => val.search('^' + obj) !== -1) == null) {\n        placementVals.splice(hasAuto++, 1, obj as Placement);\n      }\n    });\n  }\n\n  // coordinates where to position\n\n  // Required for transform:\n  const style = targetElement.style;\n  style.position = 'absolute';\n  style.top = '0';\n  style.left = '0';\n  // The translate3d/gpu acceleration render a blurry text on chrome, the next line is commented until a browser fix\n  // style['will-change'] = 'transform';\n\n  let testPlacement: Placement;\n  let isInViewport = false;\n  for (testPlacement of placementVals) {\n    let addedClasses = addClassesToTarget(testPlacement);\n\n    if (positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody)) {\n      isInViewport = true;\n      break;\n    }\n\n    // Remove the baseClasses for further calculation\n    if (baseClass) {\n      addedClasses.forEach((classname) => { classList.remove(classname); });\n    }\n  }\n\n  if (!isInViewport) {\n    // If nothing match, the first placement is the default one\n    testPlacement = placementVals[0];\n    addClassesToTarget(testPlacement);\n    positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody);\n  }\n\n  return testPlacement;\n}\n\nexport type Placement = 'auto' | 'top' | 'bottom' | 'left' | 'right' | 'top-left' | 'top-right' | 'bottom-left' |\n    'bottom-right' | 'left-top' | 'left-bottom' | 'right-top' | 'right-bottom';\n\nexport type PlacementArray = Placement | Array<Placement>| string;\n","import {padNumber, toInteger, isNumber} from '../util/util';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {Injectable} from '@angular/core';\n\nexport function NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {\n  return new NgbDateISOParserFormatter();\n}\n\n/**\n * An abstract service for parsing and formatting dates for the\n * [`NgbInputDatepicker`](#/components/datepicker/api#NgbInputDatepicker) directive.\n * Converts between the internal `NgbDateStruct` model presentation and a `string` that is displayed in the\n * input element.\n *\n * When user types something in the input this service attempts to parse it into a `NgbDateStruct` object.\n * And vice versa, when users selects a date in the calendar with the mouse, it must be displayed as a `string`\n * in the input.\n *\n * Default implementation uses the ISO 8601 format, but you can provide another implementation via DI\n * to use an alternative string format or a custom parsing logic.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY})\nexport abstract class NgbDateParserFormatter {\n  /**\n   * Parses the given `string` to an `NgbDateStruct`.\n   *\n   * Implementations should try their best to provide a result, even\n   * partial. They must return `null` if the value can't be parsed.\n   */\n  abstract parse(value: string): NgbDateStruct;\n\n  /**\n   * Formats the given `NgbDateStruct` to a `string`.\n   *\n   * Implementations should return an empty string if the given date is `null`,\n   * and try their best to provide a partial result if the given date is incomplete or invalid.\n   */\n  abstract format(date: NgbDateStruct): string;\n}\n\n@Injectable()\nexport class NgbDateISOParserFormatter extends NgbDateParserFormatter {\n  parse(value: string): NgbDateStruct {\n    if (value) {\n      const dateParts = value.trim().split('-');\n      if (dateParts.length === 1 && isNumber(dateParts[0])) {\n        return {year: toInteger(dateParts[0]), month: null, day: null};\n      } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: null};\n      } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: toInteger(dateParts[2])};\n      }\n    }\n    return null;\n  }\n\n  format(date: NgbDateStruct): string {\n    return date ?\n        `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}` :\n        '';\n  }\n}\n","import {\n  ChangeDetectorRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {AbstractControl, ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validator} from '@angular/forms';\nimport {Subject} from 'rxjs';\n\nimport {ngbAutoClose} from '../util/autoclose';\nimport {ngbFocusTrap} from '../util/focus-trap';\nimport {PlacementArray, positionElements} from '../util/positioning';\n\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nimport {NgbDatepicker, NgbDatepickerNavigateEvent} from './datepicker';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDatepickerService} from './datepicker-service';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\nimport {NgbDateStruct} from './ngb-date-struct';\n\nconst NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n\nconst NGB_DATEPICKER_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n\n/**\n * A directive that allows to stick a datepicker popup to an input field.\n *\n * Manages interaction with the input field itself, does value formatting and provides forms integration.\n */\n@Directive({\n  selector: 'input[ngbDatepicker]',\n  exportAs: 'ngbDatepicker',\n  host: {\n    '(input)': 'manualDateChange($event.target.value)',\n    '(change)': 'manualDateChange($event.target.value, true)',\n    '(blur)': 'onBlur()',\n    '[disabled]': 'disabled'\n  },\n  providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NGB_DATEPICKER_VALIDATOR, NgbDatepickerService]\n})\nexport class NgbInputDatepicker implements OnChanges,\n    OnDestroy, ControlValueAccessor, Validator {\n  private _closed$ = new Subject();\n  private _cRef: ComponentRef<NgbDatepicker> = null;\n  private _disabled = false;\n  private _model: NgbDate;\n  private _inputValue: string;\n  private _zoneSubscription: any;\n\n  /**\n   * Indicates whether the datepicker popup should be closed automatically after date selection / outside click or not.\n   *\n   * * `true` - the popup will close on both date selection and outside click.\n   * * `false` - the popup can only be closed manually via `close()` or `toggle()` methods.\n   * * `\"inside\"` - the popup will close on date selection, but not outside clicks.\n   * * `\"outside\"` - the popup will close only on the outside click and not on date selection/inside clicks.\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside' = true;\n\n  /**\n   * The reference to a custom template for the day.\n   *\n   * Allows to completely override the way a day 'cell' in the calendar is displayed.\n   *\n   * See [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext) for the data you get inside.\n   */\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * The callback to pass any arbitrary data to the template cell via the\n   * [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext)'s `data` parameter.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   *\n   * @since 3.3.0\n   */\n  @Input() dayTemplateData: (date: NgbDate, current: {year: number, month: number}) => any;\n\n  /**\n   * The number of months to display.\n   */\n  @Input() displayMonths: number;\n\n  /**\n   * The first day of the week.\n   *\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n   */\n  @Input() firstDayOfWeek: number;\n\n  /**\n   * The reference to the custom template for the datepicker footer.\n   *\n   * @since 3.3.0\n   */\n  @Input() footerTemplate: TemplateRef<any>;\n\n  /**\n   * The callback to mark some dates as disabled.\n   *\n   * It is called for each new date when navigating to a different month.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   */\n  @Input() markDisabled: (date: NgbDate, current: {year: number, month: number}) => boolean;\n\n  /**\n   * The earliest date that can be displayed or selected. Also used for form validation.\n   *\n   * If not provided, 'year' select box will display 10 years before the current month.\n   */\n  @Input() minDate: NgbDateStruct;\n\n  /**\n   * The latest date that can be displayed or selected. Also used for form validation.\n   *\n   * If not provided, 'year' select box will display 10 years after the current month.\n   */\n  @Input() maxDate: NgbDateStruct;\n\n  /**\n   * Navigation type.\n   *\n   * * `\"select\"` - select boxes for month and navigation arrows\n   * * `\"arrows\"` - only navigation arrows\n   * * `\"none\"` - no navigation visible at all\n   */\n  @Input() navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way of displaying days that don't belong to the current month.\n   *\n   * * `\"visible\"` - days are visible\n   * * `\"hidden\"` - days are hidden, white space preserved\n   * * `\"collapsed\"` - days are collapsed, so the datepicker height might change between months\n   *\n   * For the 2+ months view, days in between months are never shown.\n   */\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * The preferred placement of the datepicker popup.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n   */\n  @Input() placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n\n  /**\n   * If `true`, weekdays will be displayed.\n   */\n  @Input() showWeekdays: boolean;\n\n  /**\n   * If `true`, week numbers will be displayed.\n   */\n  @Input() showWeekNumbers: boolean;\n\n  /**\n   * The date to open calendar with.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date is provided, calendar will open with current month.\n   *\n   * You could use `navigateTo(date)` method as an alternative.\n   */\n  @Input() startDate: {year: number, month: number, day?: number};\n\n  /**\n   * A selector specifying the element the datepicker popup should be appended to.\n   *\n   * Currently only supports `\"body\"`.\n   */\n  @Input() container: string;\n\n  /**\n   * An event emitted when user selects a date using keyboard or mouse.\n   *\n   * The payload of the event is currently selected `NgbDate`.\n   *\n   * @since 1.1.1\n   */\n  @Output() dateSelect = new EventEmitter<NgbDate>();\n\n  /**\n   * Event emitted right after the navigation happens and displayed month changes.\n   *\n   * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n   */\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: any) {\n    this._disabled = value === '' || (value && value !== 'false');\n\n    if (this.isOpen()) {\n      this._cRef.instance.setDisabledState(this._disabled);\n    }\n  }\n\n  private _onChange = (_: any) => {};\n  private _onTouched = () => {};\n  private _validatorChange = () => {};\n\n\n  constructor(\n      private _parserFormatter: NgbDateParserFormatter, private _elRef: ElementRef<HTMLInputElement>,\n      private _vcRef: ViewContainerRef, private _renderer: Renderer2, private _cfr: ComponentFactoryResolver,\n      private _ngZone: NgZone, private _service: NgbDatepickerService, private _calendar: NgbCalendar,\n      private _dateAdapter: NgbDateAdapter<any>, @Inject(DOCUMENT) private _document: any,\n      private _changeDetector: ChangeDetectorRef) {\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._cRef) {\n        positionElements(\n            this._elRef.nativeElement, this._cRef.location.nativeElement, this.placement, this.container === 'body');\n      }\n    });\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  registerOnValidatorChange(fn: () => void): void { this._validatorChange = fn; }\n\n  setDisabledState(isDisabled: boolean): void { this.disabled = isDisabled; }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    const value = c.value;\n\n    if (value === null || value === undefined) {\n      return null;\n    }\n\n    const ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\n\n    if (!this._calendar.isValid(ngbDate)) {\n      return {'ngbDate': {invalid: c.value}};\n    }\n\n    if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n      return {'ngbDate': {requiredBefore: this.minDate}};\n    }\n\n    if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n      return {'ngbDate': {requiredAfter: this.maxDate}};\n    }\n  }\n\n  writeValue(value) {\n    this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\n    this._writeModelValue(this._model);\n  }\n\n  manualDateChange(value: string, updateView = false) {\n    const inputValueChanged = value !== this._inputValue;\n    if (inputValueChanged) {\n      this._inputValue = value;\n      this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n    }\n    if (inputValueChanged || !updateView) {\n      this._onChange(this._model ? this._dateAdapter.toModel(this._model) : (value === '' ? null : value));\n    }\n    if (updateView && this._model) {\n      this._writeModelValue(this._model);\n    }\n  }\n\n  isOpen() { return !!this._cRef; }\n\n  /**\n   * Opens the datepicker popup.\n   *\n   * If the related form control contains a valid date, the corresponding month will be opened.\n   */\n  open() {\n    if (!this.isOpen()) {\n      const cf = this._cfr.resolveComponentFactory(NgbDatepicker);\n      this._cRef = this._vcRef.createComponent(cf);\n\n      this._applyPopupStyling(this._cRef.location.nativeElement);\n      this._applyDatepickerInputs(this._cRef.instance);\n      this._subscribeForDatepickerOutputs(this._cRef.instance);\n      this._cRef.instance.ngOnInit();\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model));\n\n      // date selection event handling\n      this._cRef.instance.registerOnChange((selectedDate) => {\n        this.writeValue(selectedDate);\n        this._onChange(selectedDate);\n        this._onTouched();\n      });\n\n      this._cRef.changeDetectorRef.detectChanges();\n\n      this._cRef.instance.setDisabledState(this.disabled);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);\n      }\n\n      // focus handling\n      ngbFocusTrap(this._cRef.location.nativeElement, this._closed$, true);\n      this._cRef.instance.focus();\n\n      ngbAutoClose(\n          this._ngZone, this._document, this.autoClose, () => this.close(), this._closed$, [],\n          [this._elRef.nativeElement, this._cRef.location.nativeElement]);\n    }\n  }\n\n  /**\n   * Closes the datepicker popup.\n   */\n  close() {\n    if (this.isOpen()) {\n      this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));\n      this._cRef = null;\n      this._closed$.next();\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Toggles the datepicker popup.\n   */\n  toggle() {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Navigates to the provided date.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   *\n   * Use the `[startDate]` input as an alternative.\n   */\n  navigateTo(date?: {year: number, month: number, day?: number}) {\n    if (this.isOpen()) {\n      this._cRef.instance.navigateTo(date);\n    }\n  }\n\n  onBlur() { this._onTouched(); }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['minDate'] || changes['maxDate']) {\n      this._validatorChange();\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  private _applyDatepickerInputs(datepickerInstance: NgbDatepicker): void {\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n     'maxDate', 'navigation', 'outsideDays', 'showNavigation', 'showWeekdays', 'showWeekNumbers']\n        .forEach((optionName: string) => {\n          if (this[optionName] !== undefined) {\n            datepickerInstance[optionName] = this[optionName];\n          }\n        });\n    datepickerInstance.startDate = this.startDate || this._model;\n  }\n\n  private _applyPopupStyling(nativeElement: any) {\n    this._renderer.addClass(nativeElement, 'dropdown-menu');\n    this._renderer.addClass(nativeElement, 'show');\n\n    if (this.container === 'body') {\n      this._renderer.addClass(nativeElement, 'ngb-dp-body');\n    }\n  }\n\n  private _subscribeForDatepickerOutputs(datepickerInstance: NgbDatepicker) {\n    datepickerInstance.navigate.subscribe(navigateEvent => this.navigate.emit(navigateEvent));\n    datepickerInstance.select.subscribe(date => {\n      this.dateSelect.emit(date);\n      if (this.autoClose === true || this.autoClose === 'inside') {\n        this.close();\n      }\n    });\n  }\n\n  private _writeModelValue(model: NgbDate) {\n    const value = this._parserFormatter.format(model);\n    this._inputValue = value;\n    this._renderer.setProperty(this._elRef.nativeElement, 'value', value);\n    if (this.isOpen()) {\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(model));\n      this._onTouched();\n    }\n  }\n\n  private _fromDateStruct(date: NgbDateStruct): NgbDate {\n    const ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n    return this._calendar.isValid(ngbDate) ? ngbDate : null;\n  }\n}\n","import {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: '[ngbDatepickerDayView]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-day-view.scss'],\n  host: {\n    'class': 'btn-light',\n    '[class.bg-primary]': 'selected',\n    '[class.text-white]': 'selected',\n    '[class.text-muted]': 'isMuted()',\n    '[class.outside]': 'isMuted()',\n    '[class.active]': 'focused'\n  },\n  template: `{{ i18n.getDayNumerals(date) }}`\n})\nexport class NgbDatepickerDayView {\n  @Input() currentMonth: number;\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() focused: boolean;\n  @Input() selected: boolean;\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  isMuted() { return !this.selected && (this.date.month !== this.currentMonth || this.disabled); }\n}\n","import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {NgbDate} from './ngb-date';\nimport {toInteger} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: 'ngb-datepicker-navigation-select',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-navigation-select.scss'],\n  template: `\n    <select\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      [value]=\"date?.month\"\n      i18n-aria-label=\"@@ngb.datepicker.select-month\" aria-label=\"Select month\"\n      i18n-title=\"@@ngb.datepicker.select-month\" title=\"Select month\"\n      (change)=\"changeMonth($event.target.value)\">\n        <option *ngFor=\"let m of months\" [attr.aria-label]=\"i18n.getMonthFullName(m, date?.year)\"\n                [value]=\"m\">{{ i18n.getMonthShortName(m, date?.year) }}</option>\n    </select><select\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      [value]=\"date?.year\"\n      i18n-aria-label=\"@@ngb.datepicker.select-year\" aria-label=\"Select year\"\n      i18n-title=\"@@ngb.datepicker.select-year\" title=\"Select year\"\n      (change)=\"changeYear($event.target.value)\">\n        <option *ngFor=\"let y of years\" [value]=\"y\">{{ i18n.getYearNumerals(y) }}</option>\n    </select>\n  `\n})\nexport class NgbDatepickerNavigationSelect {\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() months: number[];\n  @Input() years: number[];\n\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  changeMonth(month: string) { this.select.emit(new NgbDate(this.date.year, toInteger(month), 1)); }\n\n  changeYear(year: string) { this.select.emit(new NgbDate(toInteger(year), this.date.month, 1)); }\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbPeriod, NgbCalendar} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\nimport {isNumber} from '../../util/util';\n\n@Injectable()\nexport abstract class NgbCalendarHijri extends NgbCalendar {\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n  abstract getDaysPerMonth(month: number, year: number): number;\n\n  /**\n   * Returns the equivalent Hijri date value for a give input Gregorian date.\n   * `gDate` is s JS Date to be converted to Hijri.\n   */\n  abstract fromGregorian(gDate: Date): NgbDate;\n\n  /**\n   * Converts the current Hijri date to Gregorian.\n   */\n  abstract toGregorian(hDate: NgbDate): Date;\n\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = this._setYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = this._setMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return this._setDay(date, date.day + number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = this.toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n\n    const jsDate = this.toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    const MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1));  // Compare with Muharram 1\n    return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return this.fromGregorian(new Date()); }\n\n\n  isValid(date: NgbDate): boolean {\n    return date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) &&\n        !isNaN(this.toGregorian(date).getTime());\n  }\n\n  private _setDay(date: NgbDate, day: number): NgbDate {\n    day = +day;\n    let mDays = this.getDaysPerMonth(date.month, date.year);\n    if (day <= 0) {\n      while (day <= 0) {\n        date = this._setMonth(date, date.month - 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n        day += mDays;\n      }\n    } else if (day > mDays) {\n      while (day > mDays) {\n        day -= mDays;\n        date = this._setMonth(date, date.month + 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n      }\n    }\n    date.day = day;\n    return date;\n  }\n\n  private _setMonth(date: NgbDate, month: number): NgbDate {\n    month = +month;\n    date.year = date.year + Math.floor((month - 1) / 12);\n    date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n    return date;\n  }\n\n  private _setYear(date: NgbDate, year: number): NgbDate {\n    date.year = +year;\n    return date;\n  }\n}\n","import {NgbCalendarHijri} from './ngb-calendar-hijri';\nimport {NgbDate} from '../ngb-date';\nimport {Injectable} from '@angular/core';\n\n/**\n * Checks if islamic year is a leap year\n */\nfunction isIslamicLeapYear(hYear: number): boolean {\n  return (14 + 11 * hYear) % 30 < 11;\n}\n\n/**\n * Checks if gregorian years is a leap year\n */\nfunction isGregorianLeapYear(gDate: Date): boolean {\n  const year = gDate.getFullYear();\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\n/**\n * Returns the start of Hijri Month.\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\n * `hYear` is any Hijri hYear.\n */\nfunction getIslamicMonthStart(hYear: number, hMonth: number): number {\n  return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\n}\n\n/**\n * Returns the start of Hijri year.\n * `year` is any Hijri year.\n */\nfunction getIslamicYearStart(year: number): number {\n  return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n}\n\nfunction mod(a: number, b: number): number {\n  return a - b * Math.floor(a / b);\n}\n\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n */\n\nconst GREGORIAN_EPOCH = 1721425.5;\nconst ISLAMIC_EPOCH = 1948439.5;\n\n@Injectable()\nexport class NgbCalendarIslamicCivil extends NgbCalendarHijri {\n  /**\n   * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n   * `gDate` is a JS Date to be converted to Hijri.\n   */\n  fromGregorian(gDate: Date): NgbDate {\n    const gYear = gDate.getFullYear(), gMonth = gDate.getMonth(), gDay = gDate.getDate();\n\n    let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) +\n        -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n        Math.floor(\n            (367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gDate) ? -1 : -2) + gDay);\n    julianDay = Math.floor(julianDay) + 0.5;\n\n    const days = julianDay - ISLAMIC_EPOCH;\n    const hYear = Math.floor((30 * days + 10646) / 10631.0);\n    let hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\n    hMonth = Math.min(hMonth, 11);\n    const hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\n    return new NgbDate(hYear, hMonth + 1, hDay);\n  }\n\n  /**\n   * Returns the equivalent JS date value for a give input islamic(civil) date.\n   * `hDate` is an islamic(civil) date to be converted to Gregorian.\n   */\n  toGregorian(hDate: NgbDate): Date {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    const julianDay =\n        hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n\n    const wjd = Math.floor(julianDay - 0.5) + 0.5, depoch = wjd - GREGORIAN_EPOCH,\n          quadricent = Math.floor(depoch / 146097), dqc = mod(depoch, 146097), cent = Math.floor(dqc / 36524),\n          dcent = mod(dqc, 36524), quad = Math.floor(dcent / 1461), dquad = mod(dcent, 1461),\n          yindex = Math.floor(dquad / 365);\n    let year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n    if (!(cent === 4 || yindex === 4)) {\n      year++;\n    }\n\n    const gYearStart = GREGORIAN_EPOCH + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400);\n\n    const yearday = wjd - gYearStart;\n\n    const tjd = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear(new Date(year, 3, 1)) ? -1 : -2) + 1);\n\n    const leapadj = wjd < tjd ? 0 : isGregorianLeapYear(new Date(year, 3, 1)) ? 1 : 2;\n\n    const month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n    const tjd2 = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) +\n        Math.floor(\n            (367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear(new Date(year, month - 1, 1)) ? -1 : -2) +\n            1);\n\n    const day = wjd - tjd2 + 1;\n\n    return new Date(year, month - 1, day);\n  }\n\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n  getDaysPerMonth(month: number, year: number): number {\n    year = year + Math.floor(month / 13);\n    month = ((month - 1) % 12) + 1;\n    let length = 29 + month % 2;\n    if (month === 12 && isIslamicLeapYear(year)) {\n      length++;\n    }\n    return length;\n  }\n}\n","import {NgbCalendarIslamicCivil} from './ngb-calendar-islamic-civil';\nimport {NgbDate} from '../ngb-date';\nimport {Injectable} from '@angular/core';\n\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n */\n\nconst GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\nconst GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\nconst HIJRI_BEGIN = 1300;\nconst HIJRI_END = 1600;\nconst ONE_DAY = 1000 * 60 * 60 * 24;\n\nconst MONTH_LENGTH = [\n  // 1300-1304\n  '101010101010', '110101010100', '111011001001', '011011010100', '011011101010',\n  // 1305-1309\n  '001101101100', '101010101101', '010101010101', '011010101001', '011110010010',\n  // 1310-1314\n  '101110101001', '010111010100', '101011011010', '010101011100', '110100101101',\n  // 1315-1319\n  '011010010101', '011101001010', '101101010100', '101101101010', '010110101101',\n  // 1320-1324\n  '010010101110', '101001001111', '010100010111', '011010001011', '011010100101',\n  // 1325-1329\n  '101011010101', '001011010110', '100101011011', '010010011101', '101001001101',\n  // 1330-1334\n  '110100100110', '110110010101', '010110101100', '100110110110', '001010111010',\n  // 1335-1339\n  '101001011011', '010100101011', '101010010101', '011011001010', '101011101001',\n  // 1340-1344\n  '001011110100', '100101110110', '001010110110', '100101010110', '101011001010',\n  // 1345-1349\n  '101110100100', '101111010010', '010111011001', '001011011100', '100101101101',\n  // 1350-1354\n  '010101001101', '101010100101', '101101010010', '101110100101', '010110110100',\n  // 1355-1359\n  '100110110110', '010101010111', '001010010111', '010101001011', '011010100011',\n  // 1360-1364\n  '011101010010', '101101100101', '010101101010', '101010101011', '010100101011',\n  // 1365-1369\n  '110010010101', '110101001010', '110110100101', '010111001010', '101011010110',\n  // 1370-1374\n  '100101010111', '010010101011', '100101001011', '101010100101', '101101010010',\n  // 1375-1379\n  '101101101010', '010101110101', '001001110110', '100010110111', '010001011011',\n  // 1380-1384\n  '010101010101', '010110101001', '010110110100', '100111011010', '010011011101',\n  // 1385-1389\n  '001001101110', '100100110110', '101010101010', '110101010100', '110110110010',\n  // 1390-1394\n  '010111010101', '001011011010', '100101011011', '010010101011', '101001010101',\n  // 1395-1399\n  '101101001001', '101101100100', '101101110001', '010110110100', '101010110101',\n  // 1400-1404\n  '101001010101', '110100100101', '111010010010', '111011001001', '011011010100',\n  // 1405-1409\n  '101011101001', '100101101011', '010010101011', '101010010011', '110101001001',\n  // 1410-1414\n  '110110100100', '110110110010', '101010111001', '010010111010', '101001011011',\n  // 1415-1419\n  '010100101011', '101010010101', '101100101010', '101101010101', '010101011100',\n  // 1420-1424\n  '010010111101', '001000111101', '100100011101', '101010010101', '101101001010',\n  // 1425-1429\n  '101101011010', '010101101101', '001010110110', '100100111011', '010010011011',\n  // 1430-1434\n  '011001010101', '011010101001', '011101010100', '101101101010', '010101101100',\n  // 1435-1439\n  '101010101101', '010101010101', '101100101001', '101110010010', '101110101001',\n  // 1440-1444\n  '010111010100', '101011011010', '010101011010', '101010101011', '010110010101',\n  // 1445-1449\n  '011101001001', '011101100100', '101110101010', '010110110101', '001010110110',\n  // 1450-1454\n  '101001010110', '111001001101', '101100100101', '101101010010', '101101101010',\n  // 1455-1459\n  '010110101101', '001010101110', '100100101111', '010010010111', '011001001011',\n  // 1460-1464\n  '011010100101', '011010101100', '101011010110', '010101011101', '010010011101',\n  // 1465-1469\n  '101001001101', '110100010110', '110110010101', '010110101010', '010110110101',\n  // 1470-1474\n  '001011011010', '100101011011', '010010101101', '010110010101', '011011001010',\n  // 1475-1479\n  '011011100100', '101011101010', '010011110101', '001010110110', '100101010110',\n  // 1480-1484\n  '101010101010', '101101010100', '101111010010', '010111011001', '001011101010',\n  // 1485-1489\n  '100101101101', '010010101101', '101010010101', '101101001010', '101110100101',\n  // 1490-1494\n  '010110110010', '100110110101', '010011010110', '101010010111', '010101000111',\n  // 1495-1499\n  '011010010011', '011101001001', '101101010101', '010101101010', '101001101011',\n  // 1500-1504\n  '010100101011', '101010001011', '110101000110', '110110100011', '010111001010',\n  // 1505-1509\n  '101011010110', '010011011011', '001001101011', '100101001011', '101010100101',\n  // 1510-1514\n  '101101010010', '101101101001', '010101110101', '000101110110', '100010110111',\n  // 1515-1519\n  '001001011011', '010100101011', '010101100101', '010110110100', '100111011010',\n  // 1520-1524\n  '010011101101', '000101101101', '100010110110', '101010100110', '110101010010',\n  // 1525-1529\n  '110110101001', '010111010100', '101011011010', '100101011011', '010010101011',\n  // 1530-1534\n  '011001010011', '011100101001', '011101100010', '101110101001', '010110110010',\n  // 1535-1539\n  '101010110101', '010101010101', '101100100101', '110110010010', '111011001001',\n  // 1540-1544\n  '011011010010', '101011101001', '010101101011', '010010101011', '101001010101',\n  // 1545-1549\n  '110100101001', '110101010100', '110110101010', '100110110101', '010010111010',\n  // 1550-1554\n  '101000111011', '010010011011', '101001001101', '101010101010', '101011010101',\n  // 1555-1559\n  '001011011010', '100101011101', '010001011110', '101000101110', '110010011010',\n  // 1560-1564\n  '110101010101', '011010110010', '011010111001', '010010111010', '101001011101',\n  // 1565-1569\n  '010100101101', '101010010101', '101101010010', '101110101000', '101110110100',\n  // 1570-1574\n  '010110111001', '001011011010', '100101011010', '101101001010', '110110100100',\n  // 1575-1579\n  '111011010001', '011011101000', '101101101010', '010101101101', '010100110101',\n  // 1580-1584\n  '011010010101', '110101001010', '110110101000', '110111010100', '011011011010',\n  // 1585-1589\n  '010101011011', '001010011101', '011000101011', '101100010101', '101101001010',\n  // 1590-1594\n  '101110010101', '010110101010', '101010101110', '100100101110', '110010001111',\n  // 1595-1599\n  '010100100111', '011010010101', '011010101010', '101011010110', '010101011101',\n  // 1600\n  '001010011101'\n];\n\nfunction getDaysDiff(date1: Date, date2: Date): number {\n  const diff = Math.abs(date1.getTime() - date2.getTime());\n  return Math.round(diff / ONE_DAY);\n}\n\n@Injectable()\nexport class NgbCalendarIslamicUmalqura extends NgbCalendarIslamicCivil {\n  /**\n  * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n  * `gdate` is s JS Date to be converted to Hijri.\n  */\n  fromGregorian(gDate: Date): NgbDate {\n    let hDay = 1, hMonth = 0, hYear = 1300;\n    let daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n    if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n      let year = 1300;\n      for (let i = 0; i < MONTH_LENGTH.length; i++, year++) {\n        for (let j = 0; j < 12; j++) {\n          let numOfDays = +MONTH_LENGTH[i][j] + 29;\n          if (daysDiff <= numOfDays) {\n            hDay = daysDiff + 1;\n            if (hDay > numOfDays) {\n              hDay = 1;\n              j++;\n            }\n            if (j > 11) {\n              j = 0;\n              year++;\n            }\n            hMonth = j;\n            hYear = year;\n            return new NgbDate(hYear, hMonth + 1, hDay);\n          }\n          daysDiff = daysDiff - numOfDays;\n        }\n      }\n    } else {\n      return super.fromGregorian(gDate);\n    }\n  }\n  /**\n  * Converts the current Hijri date to Gregorian.\n  */\n  toGregorian(hDate: NgbDate): Date {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    let gDate = new Date(GREGORIAN_FIRST_DATE);\n    let dayDiff = hDay - 1;\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      for (let y = 0; y < hYear - HIJRI_BEGIN; y++) {\n        for (let m = 0; m < 12; m++) {\n          dayDiff += +MONTH_LENGTH[y][m] + 29;\n        }\n      }\n      for (let m = 0; m < hMonth; m++) {\n        dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\n      }\n      gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n    } else {\n      gDate = super.toGregorian(hDate);\n    }\n    return gDate;\n  }\n  /**\n  * Returns the number of days in a specific Hijri hMonth.\n  * `hMonth` is 1 for Muharram, 2 for Safar, etc.\n  * `hYear` is any Hijri hYear.\n  */\n  getDaysPerMonth(hMonth: number, hYear: number): number {\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      const pos = hYear - HIJRI_BEGIN;\n      return +MONTH_LENGTH[pos][hMonth - 1] + 29;\n    }\n    return super.getDaysPerMonth(hMonth, hYear);\n  }\n}\n","import {NgbDate} from '../ngb-date';\n\n/**\n * Returns the equivalent JS date value for a give input Jalali date.\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\n */\nexport function toGregorian(jalaliDate: NgbDate): Date {\n  let jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\n  let date = julianToGregorian(jdn);\n  date.setHours(6, 30, 3, 200);\n  return date;\n}\n\n/**\n * Returns the equivalent jalali date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to jalali.\n * utc to local\n */\nexport function fromGregorian(gdate: Date): NgbDate {\n  let g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n  return julianToJalali(g2d);\n}\n\nexport function setJalaliYear(date: NgbDate, yearValue: number): NgbDate {\n  date.year = +yearValue;\n  return date;\n}\n\nexport function setJalaliMonth(date: NgbDate, month: number): NgbDate {\n  month = +month;\n  date.year = date.year + Math.floor((month - 1) / 12);\n  date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n  return date;\n}\n\nexport function setJalaliDay(date: NgbDate, day: number): NgbDate {\n  let mDays = getDaysPerMonth(date.month, date.year);\n  if (day <= 0) {\n    while (day <= 0) {\n      date = setJalaliMonth(date, date.month - 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n      day += mDays;\n    }\n  } else if (day > mDays) {\n    while (day > mDays) {\n      day -= mDays;\n      date = setJalaliMonth(date, date.month + 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n    }\n  }\n  date.day = day;\n  return date;\n}\n\nfunction mod(a: number, b: number): number {\n  return a - b * Math.floor(a / b);\n}\n\nfunction div(a: number, b: number) {\n  return Math.trunc(a / b);\n}\n\n/*\n This function determines if the Jalali (Persian) year is\n leap (366-day long) or is the common year (365 days), and\n finds the day in March (Gregorian calendar) of the first\n day of the Jalali year (jalaliYear).\n @param jalaliYear Jalali calendar year (-61 to 3177)\n @return\n leap: number of years since the last leap year (0 to 4)\n gYear: Gregorian year of the beginning of Jalali year\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\n @see: http://www.fourmilab.ch/documents/calendar/\n */\nfunction jalCal(jalaliYear: number) {\n  // Jalali years starting the 33-year rule.\n  let breaks =\n      [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178];\n  const breaksLength = breaks.length;\n  const gYear = jalaliYear + 621;\n  let leapJ = -14;\n  let jp = breaks[0];\n\n  if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\n    throw new Error('Invalid Jalali year ' + jalaliYear);\n  }\n\n  // Find the limiting years for the Jalali year jalaliYear.\n  let jump;\n  for (let i = 1; i < breaksLength; i += 1) {\n    const jm = breaks[i];\n    jump = jm - jp;\n    if (jalaliYear < jm) {\n      break;\n    }\n    leapJ = leapJ + div(jump, 33) * 8 + div(mod(jump, 33), 4);\n    jp = jm;\n  }\n  let n = jalaliYear - jp;\n\n  // Find the number of leap years from AD 621 to the beginning\n  // of the current Jalali year in the Persian calendar.\n  leapJ = leapJ + div(n, 33) * 8 + div(mod(n, 33) + 3, 4);\n  if (mod(jump, 33) === 4 && jump - n === 4) {\n    leapJ += 1;\n  }\n\n  // And the same in the Gregorian calendar (until the year gYear).\n  const leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150;\n\n  // Determine the Gregorian date of Farvardin the 1st.\n  const march = 20 + leapJ - leapG;\n\n  // Find how many years have passed since the last leap year.\n  if (jump - n < 6) {\n    n = n - jump + div(jump + 4, 33) * 33;\n  }\n  let leap = mod(mod(n + 1, 33) - 1, 4);\n  if (leap === -1) {\n    leap = 4;\n  }\n\n  return {leap: leap, gy: gYear, march: march};\n}\n\n/*\n Calculates Gregorian and Julian calendar dates from the Julian Day number\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n calendars) to some millions years ahead of the present.\n @param jdn Julian Day number\n @return\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\n gMonth: Calendar month (1 to 12)\n gDay: Calendar day of the month M (1 to 28/29/30/31)\n */\nfunction julianToGregorian(julianDayNumber: number) {\n  let j = 4 * julianDayNumber + 139361631;\n  j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\n  const i = div(mod(j, 1461), 4) * 5 + 308;\n  const gDay = div(mod(i, 153), 5) + 1;\n  const gMonth = mod(div(i, 153), 12) + 1;\n  const gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\n\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jy Jalali year (1 to 3100)\n @param jm Jalali month (1 to 12)\n @param jd Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction gregorianToJulian(gy: number, gm: number, gd: number) {\n  let d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod(gm + 9, 12) + 2, 5) + gd - 34840408;\n  d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n  return d;\n}\n\n/*\n Converts the Julian Day number to a date in the Jalali calendar.\n @param julianDayNumber Julian Day number\n @return\n jalaliYear: Jalali year (1 to 3100)\n jalaliMonth: Jalali month (1 to 12)\n jalaliDay: Jalali day (1 to 29/31)\n */\nfunction julianToJalali(julianDayNumber: number) {\n  let gy = julianToGregorian(julianDayNumber).getFullYear()  // Calculate Gregorian year (gy).\n      ,\n      jalaliYear = gy - 621, r = jalCal(jalaliYear), gregorianDay = gregorianToJulian(gy, 3, r.march), jalaliDay,\n      jalaliMonth, numberOfDays;\n\n  // Find number of days that passed since 1 Farvardin.\n  numberOfDays = julianDayNumber - gregorianDay;\n  if (numberOfDays >= 0) {\n    if (numberOfDays <= 185) {\n      // The first 6 months.\n      jalaliMonth = 1 + div(numberOfDays, 31);\n      jalaliDay = mod(numberOfDays, 31) + 1;\n      return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n    } else {\n      // The remaining months.\n      numberOfDays -= 186;\n    }\n  } else {\n    // Previous Jalali year.\n    jalaliYear -= 1;\n    numberOfDays += 179;\n    if (r.leap === 1) {\n      numberOfDays += 1;\n    }\n  }\n  jalaliMonth = 7 + div(numberOfDays, 30);\n  jalaliDay = mod(numberOfDays, 30) + 1;\n\n  return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n}\n\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jYear Jalali year (1 to 3100)\n @param jMonth Jalali month (1 to 12)\n @param jDay Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction jalaliToJulian(jYear: number, jMonth: number, jDay: number) {\n  let r = jalCal(jYear);\n  return gregorianToJulian(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\n}\n\n/**\n * Returns the number of days in a specific jalali month.\n */\nfunction getDaysPerMonth(month: number, year: number): number {\n  if (month <= 6) {\n    return 31;\n  }\n  if (month <= 11) {\n    return 30;\n  }\n  if (jalCal(year).leap === 0) {\n    return 30;\n  }\n  return 29;\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDate} from '../ngb-date';\nimport {NgbCalendar, NgbPeriod} from '../ngb-calendar';\nimport {isInteger} from '../../util/util';\n\nimport {fromGregorian, setJalaliDay, setJalaliMonth, setJalaliYear, toGregorian} from './jalali';\n\n@Injectable()\nexport class NgbCalendarPersian extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = setJalaliYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = setJalaliMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return setJalaliDay(date, date.day + number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n\n    const jsDate = toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    const startDate = toGregorian(new NgbDate(date.year, 1, 1));\n    return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return fromGregorian(new Date()); }\n\n  isValid(date: NgbDate): boolean {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) &&\n        !isNaN(toGregorian(date).getTime());\n  }\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbDateStruct} from '../ngb-date-struct';\n\nconst PARTS_PER_HOUR = 1080;\nconst PARTS_PER_DAY = 24 * PARTS_PER_HOUR;\nconst PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;\nconst PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;\nconst BAHARAD = 11 * PARTS_PER_HOUR + 204;\nconst HEBREW_DAY_ON_JAN_1_1970 = 2092591;\nconst GREGORIAN_EPOCH = 1721425.5;\n\nfunction isGregorianLeapYear(year: number): boolean {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\nfunction numberOfFirstDayInYear(year: number): number {\n  let monthsBeforeYear = Math.floor((235 * year - 234) / 19);\n  let fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;\n  let dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);\n  let timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;\n\n  let dayOfWeek = dayNumber % 7;  // 0 == Monday\n\n  if (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {\n    dayNumber++;\n    dayOfWeek = dayNumber % 7;\n  }\n  if (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {\n    dayNumber += 2;\n  } else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {\n    dayNumber++;\n  }\n  return dayNumber;\n}\n\nfunction getDaysInGregorianMonth(month: number, year: number): number {\n  let days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  if (isGregorianLeapYear(year)) {\n    days[1]++;\n  }\n  return days[month - 1];\n}\n\nfunction getHebrewMonths(year: number): number {\n  return isHebrewLeapYear(year) ? 13 : 12;\n}\n\n/**\n * Returns the number of days in a specific Hebrew year.\n * `year` is any Hebrew year.\n */\nfunction getDaysInHebrewYear(year: number): number {\n  return numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n}\n\nexport function isHebrewLeapYear(year: number): boolean {\n  let b = (year * 12 + 17) % 19;\n  return b >= ((b < 0) ? -7 : 12);\n}\n\n/**\n * Returns the number of days in a specific Hebrew month.\n * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.\n * `year` is any Hebrew year.\n */\nexport function getDaysInHebrewMonth(month: number, year: number): number {\n  let yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n  let yearType = (yearLength <= 380 ? yearLength : (yearLength - 30)) - 353;\n  let leapYear = isHebrewLeapYear(year);\n  let daysInMonth = leapYear ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29] :\n                               [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];\n  if (yearType > 0) {\n    daysInMonth[2]++;  // Kislev gets an extra day in normal or complete years.\n  }\n  if (yearType > 1) {\n    daysInMonth[1]++;  // Heshvan gets an extra day in complete years only.\n  }\n  return daysInMonth[month - 1];\n}\n\nexport function getDayNumberInHebrewYear(date: NgbDate): number {\n  let numberOfDay = 0;\n  for (let i = 1; i < date.month; i++) {\n    numberOfDay += getDaysInHebrewMonth(i, date.year);\n  }\n  return numberOfDay + date.day;\n}\n\nexport function setHebrewMonth(date: NgbDate, val: number): NgbDate {\n  let after = val >= 0;\n  if (!after) {\n    val = -val;\n  }\n  while (val > 0) {\n    if (after) {\n      if (val > getHebrewMonths(date.year) - date.month) {\n        val -= getHebrewMonths(date.year) - date.month + 1;\n        date.year++;\n        date.month = 1;\n      } else {\n        date.month += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.month) {\n        date.year--;\n        val -= date.month;\n        date.month = getHebrewMonths(date.year);\n      } else {\n        date.month -= val;\n        val = 0;\n      }\n    }\n  }\n  return date;\n}\n\nexport function setHebrewDay(date: NgbDate, val: number): NgbDate {\n  let after = val >= 0;\n  if (!after) {\n    val = -val;\n  }\n  while (val > 0) {\n    if (after) {\n      if (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {\n        val -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;\n        date.year++;\n        date.month = 1;\n        date.day = 1;\n      } else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {\n        val -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;\n        date.month++;\n        date.day = 1;\n      } else {\n        date.day += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.day) {\n        val -= date.day;\n        date.month--;\n        if (date.month === 0) {\n          date.year--;\n          date.month = getHebrewMonths(date.year);\n        }\n        date.day = getDaysInHebrewMonth(date.month, date.year);\n      } else {\n        date.day -= val;\n        val = 0;\n      }\n    }\n  }\n  return date;\n}\n\n/**\n * Returns the equivalent Hebrew date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Hebrew date.\n */\nexport function fromGregorian(gdate: Date): NgbDate {\n  const date = new Date(gdate);\n  const gYear = date.getFullYear(), gMonth = date.getMonth(), gDay = date.getDate();\n  let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) -\n      Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n      Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gYear) ? -1 : -2) + gDay);\n  julianDay = Math.floor(julianDay + 0.5);\n  let daysSinceHebEpoch = julianDay - 347997;\n  let monthsSinceHebEpoch = Math.floor(daysSinceHebEpoch * PARTS_PER_DAY / PARTS_PER_MONTH);\n  let hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;\n  let firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n  let dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  while (dayOfYear < 1) {\n    hYear--;\n    firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n    dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  }\n  let hMonth = 1;\n  let hDay = dayOfYear;\n  while (hDay > getDaysInHebrewMonth(hMonth, hYear)) {\n    hDay -= getDaysInHebrewMonth(hMonth, hYear);\n    hMonth++;\n  }\n  return new NgbDate(hYear, hMonth, hDay);\n}\n\n/**\n * Returns the equivalent JS date value for a given Hebrew date.\n * `hebrewDate` is an Hebrew date to be converted to Gregorian.\n */\nexport function toGregorian(hebrewDate: NgbDateStruct | NgbDate): Date {\n  const hYear = hebrewDate.year;\n  const hMonth = hebrewDate.month;\n  const hDay = hebrewDate.day;\n  let days = numberOfFirstDayInYear(hYear);\n  for (let i = 1; i < hMonth; i++) {\n    days += getDaysInHebrewMonth(i, hYear);\n  }\n  days += hDay;\n  let diffDays = days - HEBREW_DAY_ON_JAN_1_1970;\n  let after = diffDays >= 0;\n  if (!after) {\n    diffDays = -diffDays;\n  }\n  let gYear = 1970;\n  let gMonth = 1;\n  let gDay = 1;\n  while (diffDays > 0) {\n    if (after) {\n      if (diffDays >= (isGregorianLeapYear(gYear) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear) ? 366 : 365;\n        gYear++;\n      } else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n        diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        gMonth++;\n      } else {\n        gDay += diffDays;\n        diffDays = 0;\n      }\n    } else {\n      if (diffDays >= (isGregorianLeapYear(gYear - 1) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear - 1) ? 366 : 365;\n        gYear--;\n      } else {\n        if (gMonth > 1) {\n          gMonth--;\n        } else {\n          gMonth = 12;\n          gYear--;\n        }\n        if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n          diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        } else {\n          gDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;\n          diffDays = 0;\n        }\n      }\n    }\n  }\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\nexport function hebrewNumerals(numerals: number): string {\n  if (!numerals) {\n    return '';\n  }\n  const hArray0_9 = ['', '\\u05d0', '\\u05d1', '\\u05d2', '\\u05d3', '\\u05d4', '\\u05d5', '\\u05d6', '\\u05d7', '\\u05d8'];\n  const hArray10_19 = [\n    '\\u05d9', '\\u05d9\\u05d0', '\\u05d9\\u05d1', '\\u05d9\\u05d2', '\\u05d9\\u05d3', '\\u05d8\\u05d5', '\\u05d8\\u05d6',\n    '\\u05d9\\u05d6', '\\u05d9\\u05d7', '\\u05d9\\u05d8'\n  ];\n  const hArray20_90 = ['', '', '\\u05db', '\\u05dc', '\\u05de', '\\u05e0', '\\u05e1', '\\u05e2', '\\u05e4', '\\u05e6'];\n  const hArray100_900 = [\n    '', '\\u05e7', '\\u05e8', '\\u05e9', '\\u05ea', '\\u05ea\\u05e7', '\\u05ea\\u05e8', '\\u05ea\\u05e9', '\\u05ea\\u05ea',\n    '\\u05ea\\u05ea\\u05e7'\n  ];\n  const hArray1000_9000 = [\n    '', '\\u05d0', '\\u05d1', '\\u05d1\\u05d0', '\\u05d1\\u05d1', '\\u05d4', '\\u05d4\\u05d0', '\\u05d4\\u05d1',\n    '\\u05d4\\u05d1\\u05d0', '\\u05d4\\u05d1\\u05d1'\n  ];\n  const geresh = '\\u05f3', gershaim = '\\u05f4';\n  let mem = 0;\n  let result = [];\n  let step = 0;\n  while (numerals > 0) {\n    let m = numerals % 10;\n    if (step === 0) {\n      mem = m;\n    } else if (step === 1) {\n      if (m !== 1) {\n        result.unshift(hArray20_90[m], hArray0_9[mem]);\n      } else {\n        result.unshift(hArray10_19[mem]);\n      }\n    } else if (step === 2) {\n      result.unshift(hArray100_900[m]);\n    } else {\n      if (m !== 5) {\n        result.unshift(hArray1000_9000[m], geresh, ' ');\n      }\n      break;\n    }\n    numerals = Math.floor(numerals / 10);\n    if (step === 0 && numerals === 0) {\n      result.unshift(hArray0_9[m]);\n    }\n    step++;\n  }\n  result = result.join('').split('');\n  if (result.length === 1) {\n    result.push(geresh);\n  } else if (result.length > 1) {\n    result.splice(result.length - 1, 0, gershaim);\n  }\n  return result.join('');\n}\n","import {NgbDate} from '../ngb-date';\nimport {fromJSDate, NgbCalendar, NgbPeriod, toJSDate} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\nimport {isNumber} from '../../util/util';\nimport {\n  fromGregorian,\n  getDayNumberInHebrewYear,\n  getDaysInHebrewMonth,\n  isHebrewLeapYear,\n  toGregorian,\n  setHebrewDay,\n  setHebrewMonth\n} from './hebrew';\n\n/**\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbCalendarHebrew extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths(year?: number) {\n    if (year && isHebrewLeapYear(year)) {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n    } else {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n  }\n\n  getWeeksPerMonth() { return 6; }\n\n  isValid(date: NgbDate): boolean {\n    let b = date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day);\n    b = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);\n    b = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);\n    return b && !isNaN(toGregorian(date).getTime());\n  }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date.year += number;\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = setHebrewMonth(date, number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return setHebrewDay(date, number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\n    const date = week[week.length - 1];\n    return Math.ceil(getDayNumberInHebrewYear(date) / 7);\n  }\n\n  getToday(): NgbDate { return fromGregorian(new Date()); }\n\n  /**\n   * @since 3.4.0\n   */\n  toGregorian(date: NgbDate): NgbDate { return fromJSDate(toGregorian(date)); }\n\n  /**\n   * @since 3.4.0\n   */\n  fromGregorian(date: NgbDate): NgbDate { return fromGregorian(toJSDate(date)); }\n}\n","import {NgbDatepickerI18n} from '../datepicker-i18n';\nimport {NgbDateStruct} from '../../index';\nimport {hebrewNumerals, isHebrewLeapYear} from './hebrew';\nimport {Injectable} from '@angular/core';\n\n\nconst WEEKDAYS = ['×©× ×', '×©×××©×', '×¨×××¢×', '××××©×', '×©××©×', '×©××ª', '×¨××©××'];\nconst MONTHS = ['×ª×©×¨×', '××©××', '××¡××', '×××ª', '×©××', '×××¨', '× ××¡×', '××××¨', '×¡×××', '×ª×××', '××', '××××'];\nconst MONTHS_LEAP =\n    ['×ª×©×¨×', '××©××', '××¡××', '×××ª', '×©××', '×××¨ ××³', '×××¨ ××³', '× ××¡×', '××××¨', '×¡×××', '×ª×××', '××', '××××'];\n\n/**\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbDatepickerI18nHebrew extends NgbDatepickerI18n {\n  getMonthShortName(month: number, year?: number): string { return this.getMonthFullName(month, year); }\n\n  getMonthFullName(month: number, year?: number): string {\n    return isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] : MONTHS[month - 1];\n  }\n\n  getWeekdayShortName(weekday: number): string { return WEEKDAYS[weekday - 1]; }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    return `${hebrewNumerals(date.day)} ${this.getMonthFullName(date.month, date.year)} ${hebrewNumerals(date.year)}`;\n  }\n\n  getDayNumerals(date: NgbDateStruct): string { return hebrewNumerals(date.day); }\n\n  getWeekNumerals(weekNumber: number): string { return hebrewNumerals(weekNumber); }\n\n  getYearNumerals(year: number): string { return hebrewNumerals(year); }\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateAdapter} from './ngb-date-adapter';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {isInteger} from '../../util/util';\n\n/**\n * [`NgbDateAdapter`](#/components/datepicker/api#NgbDateAdapter) implementation that uses\n * native javascript dates as a user date model.\n */\n@Injectable()\nexport class NgbDateNativeAdapter extends NgbDateAdapter<Date> {\n  /**\n   * Converts a native `Date` to a `NgbDateStruct`.\n   */\n  fromModel(date: Date): NgbDateStruct {\n    return (date instanceof Date && !isNaN(date.getTime())) ? this._fromNativeDate(date) : null;\n  }\n\n  /**\n   * Converts a `NgbDateStruct` to a native `Date`.\n   */\n  toModel(date: NgbDateStruct): Date {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? this._toNativeDate(date) :\n                                                                                          null;\n  }\n\n  protected _fromNativeDate(date: Date): NgbDateStruct {\n    return {year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate()};\n  }\n\n  protected _toNativeDate(date: NgbDateStruct): Date {\n    const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n    // avoid 30 -> 1930 conversion\n    jsDate.setFullYear(date.year);\n    return jsDate;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {NgbDateNativeAdapter} from './ngb-date-native-adapter';\n\n/**\n * Same as [`NgbDateNativeAdapter`](#/components/datepicker/api#NgbDateNativeAdapter), but with UTC dates.\n *\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbDateNativeUTCAdapter extends NgbDateNativeAdapter {\n  protected _fromNativeDate(date: Date): NgbDateStruct {\n    return {year: date.getUTCFullYear(), month: date.getUTCMonth() + 1, day: date.getUTCDate()};\n  }\n\n  protected _toNativeDate(date: NgbDateStruct): Date {\n    const jsDate = new Date(Date.UTC(date.year, date.month - 1, date.day));\n    // avoid 30 -> 1930 conversion\n    jsDate.setUTCFullYear(date.year);\n    return jsDate;\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {NgbDatepicker} from './datepicker';\nimport {NgbDatepickerMonthView} from './datepicker-month-view';\nimport {NgbDatepickerNavigation} from './datepicker-navigation';\nimport {NgbInputDatepicker} from './datepicker-input';\nimport {NgbDatepickerDayView} from './datepicker-day-view';\nimport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\n\nexport {NgbDatepicker, NgbDatepickerNavigateEvent} from './datepicker';\nexport {NgbInputDatepicker} from './datepicker-input';\nexport {NgbCalendar, NgbPeriod, NgbCalendarGregorian} from './ngb-calendar';\nexport {NgbCalendarIslamicCivil} from './hijri/ngb-calendar-islamic-civil';\nexport {NgbCalendarIslamicUmalqura} from './hijri/ngb-calendar-islamic-umalqura';\nexport {NgbCalendarPersian} from './jalali/ngb-calendar-persian';\nexport {NgbCalendarHebrew} from './hebrew/ngb-calendar-hebrew';\nexport {NgbDatepickerI18nHebrew} from './hebrew/datepicker-i18n-hebrew';\nexport {NgbDatepickerMonthView} from './datepicker-month-view';\nexport {NgbDatepickerDayView} from './datepicker-day-view';\nexport {NgbDatepickerNavigation} from './datepicker-navigation';\nexport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\nexport {NgbDatepickerConfig} from './datepicker-config';\nexport {NgbDatepickerI18n} from './datepicker-i18n';\nexport {NgbDateStruct} from './ngb-date-struct';\nexport {NgbDate} from './ngb-date';\nexport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nexport {NgbDateNativeAdapter} from './adapters/ngb-date-native-adapter';\nexport {NgbDateNativeUTCAdapter} from './adapters/ngb-date-native-utc-adapter';\nexport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\n\n@NgModule({\n  declarations: [\n    NgbDatepicker, NgbDatepickerMonthView, NgbDatepickerNavigation, NgbDatepickerNavigationSelect, NgbDatepickerDayView,\n    NgbInputDatepicker\n  ],\n  exports: [NgbDatepicker, NgbInputDatepicker],\n  imports: [CommonModule, FormsModule],\n  entryComponents: [NgbDatepicker]\n})\nexport class NgbDatepickerModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbDatepickerModule}; }\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbDropdown`](#/components/dropdown/api#NgbDropdown) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDropdownConfig {\n  autoClose: boolean | 'outside' | 'inside' = true;\n  placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n  container: null | 'body';\n}\n","import {\n  ChangeDetectorRef,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  Renderer2,\n  SimpleChanges\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {Subject, Subscription} from 'rxjs';\n\nimport {Placement, PlacementArray, positionElements} from '../util/positioning';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {Key} from '../util/key';\n\nimport {NgbDropdownConfig} from './dropdown-config';\n\n/**\n * A directive you should put put on a dropdown item to enable keyboard navigation.\n * Arrow keys will move focus between items marked with this directive.\n *\n * @since 4.1.0\n */\n@Directive({selector: '[ngbDropdownItem]', host: {'class': 'dropdown-item', '[class.disabled]': 'disabled'}})\nexport class NgbDropdownItem {\n  private _disabled = false;\n\n  @Input()\n  set disabled(value: boolean) {\n    this._disabled = <any>value === '' || value === true;  // accept an empty attribute as true\n  }\n\n  get disabled(): boolean { return this._disabled; }\n\n  constructor(public elementRef: ElementRef<HTMLElement>) {}\n}\n\n/**\n * A directive that wraps dropdown menu content and dropdown items.\n */\n@Directive({\n  selector: '[ngbDropdownMenu]',\n  host: {\n    '[class.dropdown-menu]': 'true',\n    '[class.show]': 'dropdown.isOpen()',\n    '[attr.x-placement]': 'placement',\n    '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n    '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n    '(keydown.Home)': 'dropdown.onKeyDown($event)',\n    '(keydown.End)': 'dropdown.onKeyDown($event)'\n  }\n})\nexport class NgbDropdownMenu {\n  placement: Placement = 'bottom';\n  isOpen = false;\n\n  @ContentChildren(NgbDropdownItem) menuItems: QueryList<NgbDropdownItem>;\n\n  constructor(@Inject(forwardRef(() => NgbDropdown)) public dropdown: NgbDropdown) {}\n}\n\n/**\n * A directive to mark an element to which dropdown menu will be anchored.\n *\n * This is a simple version of the `NgbDropdownToggle` directive.\n * It plays the same role, but doesn't listen to click events to toggle dropdown menu thus enabling support\n * for events other than click.\n *\n * @since 1.1.0\n */\n@Directive({\n  selector: '[ngbDropdownAnchor]',\n  host: {'class': 'dropdown-toggle', 'aria-haspopup': 'true', '[attr.aria-expanded]': 'dropdown.isOpen()'}\n})\nexport class NgbDropdownAnchor {\n  anchorEl;\n\n  constructor(\n      @Inject(forwardRef(() => NgbDropdown)) public dropdown: NgbDropdown,\n      private _elementRef: ElementRef<HTMLElement>) {\n    this.anchorEl = _elementRef.nativeElement;\n  }\n\n  getNativeElement() { return this._elementRef.nativeElement; }\n}\n\n/**\n * A directive to mark an element that will toggle dropdown via the `click` event.\n *\n * You can also use `NgbDropdownAnchor` as an alternative.\n */\n@Directive({\n  selector: '[ngbDropdownToggle]',\n  host: {\n    'class': 'dropdown-toggle',\n    'aria-haspopup': 'true',\n    '[attr.aria-expanded]': 'dropdown.isOpen()',\n    '(click)': 'dropdown.toggle()',\n    '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n    '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n    '(keydown.Home)': 'dropdown.onKeyDown($event)',\n    '(keydown.End)': 'dropdown.onKeyDown($event)'\n  },\n  providers: [{provide: NgbDropdownAnchor, useExisting: forwardRef(() => NgbDropdownToggle)}]\n})\nexport class NgbDropdownToggle extends NgbDropdownAnchor {\n  constructor(@Inject(forwardRef(() => NgbDropdown)) dropdown: NgbDropdown, elementRef: ElementRef<HTMLElement>) {\n    super(dropdown, elementRef);\n  }\n}\n\n/**\n * A directive that provides contextual overlays for displaying lists of links and more.\n */\n@Directive({selector: '[ngbDropdown]', exportAs: 'ngbDropdown', host: {'[class.show]': 'isOpen()'}})\nexport class NgbDropdown implements OnInit, OnDestroy {\n  private _closed$ = new Subject<void>();\n  private _zoneSubscription: Subscription;\n  private _bodyContainer: HTMLElement;\n\n  @ContentChild(NgbDropdownMenu) private _menu: NgbDropdownMenu;\n  @ContentChild(NgbDropdownMenu, {read: ElementRef}) private _menuElement: ElementRef;\n\n  @ContentChild(NgbDropdownAnchor) private _anchor: NgbDropdownAnchor;\n\n  /**\n   * Indicates whether the dropdown should be closed when clicking one of dropdown items or pressing ESC.\n   *\n   * * `true` - the dropdown will close on both outside and inside (menu) clicks.\n   * * `false` - the dropdown can only be closed manually via `close()` or `toggle()` methods.\n   * * `\"inside\"` - the dropdown will close on inside menu clicks, but not outside clicks.\n   * * `\"outside\"` - the dropdown will close only on the outside clicks and not on menu clicks.\n   */\n  @Input() autoClose: boolean | 'outside' | 'inside';\n\n  /**\n   * Defines whether or not the dropdown menu is opened initially.\n   */\n  @Input('open') _open = false;\n\n  /**\n   * The preferred placement of the dropdown.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   * A selector specifying the element the dropdown should be appended to.\n   * Currently only supports \"body\".\n   *\n   * @since 4.1.0\n   */\n  @Input() container: null | 'body';\n\n  /**\n   * An event fired when the dropdown is opened or closed.\n   *\n   * The event payload is a `boolean`:\n   * * `true` - the dropdown was opened\n   * * `false` - the dropdown was closed\n   */\n  @Output() openChange = new EventEmitter<boolean>();\n\n  constructor(\n      private _changeDetector: ChangeDetectorRef, config: NgbDropdownConfig, @Inject(DOCUMENT) private _document: any,\n      private _ngZone: NgZone, private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2) {\n    this.placement = config.placement;\n    this.container = config.container;\n    this.autoClose = config.autoClose;\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => { this._positionMenu(); });\n  }\n\n  ngOnInit() {\n    this._applyPlacementClasses();\n    if (this._open) {\n      this._setCloseHandlers();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.container && this._open) {\n      this._applyContainer(this.container);\n    }\n\n    if (changes.placement && !changes.placement.isFirstChange) {\n      this._applyPlacementClasses();\n    }\n  }\n\n  /**\n   * Checks if the dropdown menu is open.\n   */\n  isOpen(): boolean { return this._open; }\n\n  /**\n   * Opens the dropdown menu.\n   */\n  open(): void {\n    if (!this._open) {\n      this._open = true;\n      this._applyContainer(this.container);\n      this.openChange.emit(true);\n      this._setCloseHandlers();\n    }\n  }\n\n  private _setCloseHandlers() {\n    ngbAutoClose(\n        this._ngZone, this._document, this.autoClose, () => this.close(), this._closed$,\n        this._menu ? [this._menuElement.nativeElement] : [], this._anchor ? [this._anchor.getNativeElement()] : []);\n  }\n\n  /**\n   * Closes the dropdown menu.\n   */\n  close(): void {\n    if (this._open) {\n      this._open = false;\n      this._resetContainer();\n      this._closed$.next();\n      this.openChange.emit(false);\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Toggles the dropdown menu.\n   */\n  toggle(): void {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  ngOnDestroy() {\n    this._resetContainer();\n\n    this._closed$.next();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  onKeyDown(event: KeyboardEvent) {\n    const itemElements = this._getMenuElements();\n\n    let position = -1;\n    let isEventFromItems = false;\n    const isEventFromToggle = this._isEventFromToggle(event);\n\n    if (!isEventFromToggle && itemElements.length) {\n      itemElements.forEach((itemElement, index) => {\n        if (itemElement.contains(event.target as HTMLElement)) {\n          isEventFromItems = true;\n        }\n        if (itemElement === this._document.activeElement) {\n          position = index;\n        }\n      });\n    }\n\n    if (isEventFromToggle || isEventFromItems) {\n      this.open();\n\n      if (itemElements.length) {\n        // tslint:disable-next-line:deprecation\n        switch (event.which) {\n          case Key.ArrowDown:\n            position = Math.min(position + 1, itemElements.length - 1);\n            break;\n          case Key.ArrowUp:\n            if (this._isDropup() && position === -1) {\n              position = itemElements.length - 1;\n              break;\n            }\n            position = Math.max(position - 1, 0);\n            break;\n          case Key.Home:\n            position = 0;\n            break;\n          case Key.End:\n            position = itemElements.length - 1;\n            break;\n        }\n        itemElements[position].focus();\n      }\n      event.preventDefault();\n    }\n  }\n\n  private _isDropup(): boolean { return this._elementRef.nativeElement.classList.contains('dropup'); }\n\n  private _isEventFromToggle(event: KeyboardEvent) {\n    return this._anchor.getNativeElement().contains(event.target as HTMLElement);\n  }\n\n  private _getMenuElements(): HTMLElement[] {\n    if (this._menu == null) {\n      return [];\n    }\n    return this._menu.menuItems.filter(item => !item.disabled).map(item => item.elementRef.nativeElement);\n  }\n\n  private _positionMenu() {\n    if (this.isOpen() && this._menu) {\n      this._applyPlacementClasses(\n          positionElements(\n              this._anchor.anchorEl, this._bodyContainer || this._menuElement.nativeElement, this.placement,\n              this.container === 'body'));\n    }\n  }\n\n  private _resetContainer() {\n    const renderer = this._renderer;\n    if (this._menuElement) {\n      const dropdownElement = this._elementRef.nativeElement;\n      const dropdownMenuElement = this._menuElement.nativeElement;\n\n      renderer.appendChild(dropdownElement, dropdownMenuElement);\n      renderer.removeStyle(dropdownMenuElement, 'position');\n      renderer.removeStyle(dropdownMenuElement, 'transform');\n    }\n    if (this._bodyContainer) {\n      renderer.removeChild(this._document.body, this._bodyContainer);\n      this._bodyContainer = null;\n    }\n  }\n\n  private _applyContainer(container: null | 'body' = null) {\n    this._resetContainer();\n    if (container === 'body') {\n      const renderer = this._renderer;\n      const dropdownMenuElement = this._menuElement.nativeElement;\n      const bodyContainer = this._bodyContainer = this._bodyContainer || renderer.createElement('div');\n\n      // Override some styles to have the positionning working\n      renderer.setStyle(bodyContainer, 'position', 'absolute');\n      renderer.setStyle(dropdownMenuElement, 'position', 'static');\n      renderer.setStyle(bodyContainer, 'z-index', '1050');\n\n      renderer.appendChild(bodyContainer, dropdownMenuElement);\n      renderer.appendChild(this._document.body, bodyContainer);\n    }\n  }\n\n  private _applyPlacementClasses(placement?: Placement) {\n    if (this._menu) {\n      if (!placement) {\n        placement = Array.isArray(this.placement) ? this.placement[0] : this.placement.split(' ')[0] as Placement;\n      }\n\n      const renderer = this._renderer;\n      const dropdownElement = this._elementRef.nativeElement;\n\n      // remove the current placement classes\n      renderer.removeClass(dropdownElement, 'dropup');\n      renderer.removeClass(dropdownElement, 'dropdown');\n      this._menu.placement = placement;\n\n      /*\n      * apply the new placement\n      * in case of top use up-arrow or down-arrow otherwise\n      */\n      const dropdownClass = placement.search('^top') !== -1 ? 'dropup' : 'dropdown';\n      renderer.addClass(dropdownElement, dropdownClass);\n\n      const bodyContainer = this._bodyContainer;\n      if (bodyContainer) {\n        renderer.removeClass(bodyContainer, 'dropup');\n        renderer.removeClass(bodyContainer, 'dropdown');\n        renderer.addClass(bodyContainer, dropdownClass);\n      }\n    }\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem} from './dropdown';\n\nexport {NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem} from './dropdown';\nexport {NgbDropdownConfig} from './dropdown-config';\n\nconst NGB_DROPDOWN_DIRECTIVES = [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem];\n\n@NgModule({declarations: NGB_DROPDOWN_DIRECTIVES, exports: NGB_DROPDOWN_DIRECTIVES})\nexport class NgbDropdownModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbDropdownModule}; }\n}\n","import {Injectable, Injector} from '@angular/core';\n\n/**\n * Options available when opening new modal windows with `NgbModal.open()` method.\n */\nexport interface NgbModalOptions {\n  /**\n   * `aria-labelledby` attribute value to set on the modal window.\n   *\n   * @since 2.2.0\n   */\n  ariaLabelledBy?: string;\n\n  /**\n   * If `true`, the backdrop element will be created for a given modal.\n   *\n   * Alternatively, specify `'static'` for a backdrop which doesn't close the modal on click.\n   *\n   * Default value is `true`.\n   */\n  backdrop?: boolean | 'static';\n\n  /**\n   * Callback right before the modal will be dismissed.\n   *\n   * If this function returns:\n   * * `false`\n   * * a promise resolved with `false`\n   * * a promise that is rejected\n   *\n   * then the modal won't be dismissed.\n   */\n  beforeDismiss?: () => boolean | Promise<boolean>;\n\n  /**\n   * If `true`, the modal will be centered vertically.\n   *\n   * Default value is `false`.\n   *\n   * @since 1.1.0\n   */\n  centered?: boolean;\n\n  /**\n   * A selector specifying the element all new modal windows should be appended to.\n   *\n   * If not specified, will be `body`.\n   */\n  container?: string;\n\n  /**\n   * The `Injector` to use for modal content.\n   */\n  injector?: Injector;\n\n  /**\n   * If `true`, the modal will be closed when `Escape` key is pressed\n   *\n   * Default value is `true`.\n   */\n  keyboard?: boolean;\n\n  /**\n   * Size of a new modal window.\n   */\n  size?: 'sm' | 'lg';\n\n  /**\n   * A custom class to append to the modal window.\n   */\n  windowClass?: string;\n\n  /**\n   * A custom class to append to the modal backdrop.\n   *\n   * @since 1.1.0\n   */\n  backdropClass?: string;\n}\n\n/**\n * A configuration service for the [`NgbModal`](#/components/modal/api#NgbModal) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all modals used in the application.\n*\n* @since 3.1.0\n*/\n@Injectable({providedIn: 'root'})\nexport class NgbModalConfig implements NgbModalOptions {\n  backdrop: boolean | 'static' = true;\n  keyboard = true;\n}\n","import {\n  Injector,\n  TemplateRef,\n  ViewRef,\n  ViewContainerRef,\n  Renderer2,\n  ComponentRef,\n  ComponentFactoryResolver\n} from '@angular/core';\n\nexport class ContentRef {\n  constructor(public nodes: any[], public viewRef?: ViewRef, public componentRef?: ComponentRef<any>) {}\n}\n\nexport class PopupService<T> {\n  private _windowRef: ComponentRef<T>;\n  private _contentRef: ContentRef;\n\n  constructor(\n      private _type: any, private _injector: Injector, private _viewContainerRef: ViewContainerRef,\n      private _renderer: Renderer2, private _componentFactoryResolver: ComponentFactoryResolver) {}\n\n  open(content?: string | TemplateRef<any>, context?: any): ComponentRef<T> {\n    if (!this._windowRef) {\n      this._contentRef = this._getContentRef(content, context);\n      this._windowRef = this._viewContainerRef.createComponent(\n          this._componentFactoryResolver.resolveComponentFactory<T>(this._type), 0, this._injector,\n          this._contentRef.nodes);\n    }\n\n    return this._windowRef;\n  }\n\n  close() {\n    if (this._windowRef) {\n      this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n      this._windowRef = null;\n\n      if (this._contentRef.viewRef) {\n        this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\n        this._contentRef = null;\n      }\n    }\n  }\n\n  private _getContentRef(content: string | TemplateRef<any>, context?: any): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      const viewRef = this._viewContainerRef.createEmbeddedView(<TemplateRef<T>>content, context);\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    } else {\n      return new ContentRef([[this._renderer.createText(`${content}`)]]);\n    }\n  }\n}\n","import {Injectable, Inject} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n\nconst noop = () => {};\n\n\n\n/** Type for the callback used to revert the scrollbar compensation. */\nexport type CompensationReverter = () => void;\n\n\n\n/**\n * Utility to handle the scrollbar.\n *\n * It allows to compensate the lack of a vertical scrollbar by adding an\n * equivalent padding on the right of the body, and to remove this compensation.\n */\n@Injectable({providedIn: 'root'})\nexport class ScrollBar {\n  constructor(@Inject(DOCUMENT) private _document: any) {}\n\n  /**\n   * Detects if a scrollbar is present and if yes, already compensates for its\n   * removal by adding an equivalent padding on the right of the body.\n   *\n   * @return a callback used to revert the compensation (noop if there was none,\n   * otherwise a function removing the padding)\n   */\n  compensate(): CompensationReverter { return !this._isPresent() ? noop : this._adjustBody(this._getWidth()); }\n\n  /**\n   * Adds a padding of the given width on the right of the body.\n   *\n   * @return a callback used to revert the padding to its previous value\n   */\n  private _adjustBody(width: number): CompensationReverter {\n    const body = this._document.body;\n    const userSetPadding = body.style.paddingRight;\n    const paddingAmount = parseFloat(window.getComputedStyle(body)['padding-right']);\n    body.style['padding-right'] = `${paddingAmount + width}px`;\n    return () => body.style['padding-right'] = userSetPadding;\n  }\n\n  /**\n   * Tells whether a scrollbar is currently present on the body.\n   *\n   * @return true if scrollbar is present, false otherwise\n   */\n  private _isPresent(): boolean {\n    const rect = this._document.body.getBoundingClientRect();\n    return rect.left + rect.right < window.innerWidth;\n  }\n\n  /**\n   * Calculates and returns the width of a scrollbar.\n   *\n   * @return the width of a scrollbar on this page\n   */\n  private _getWidth(): number {\n    const measurer = this._document.createElement('div');\n    measurer.className = 'modal-scrollbar-measure';\n\n    const body = this._document.body;\n    body.appendChild(measurer);\n    const width = measurer.getBoundingClientRect().width - measurer.clientWidth;\n    body.removeChild(measurer);\n\n    return width;\n  }\n}\n","import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'ngb-modal-backdrop',\n  template: '',\n  host:\n      {'[class]': '\"modal-backdrop fade show\" + (backdropClass ? \" \" + backdropClass : \"\")', 'style': 'z-index: 1050'}\n})\nexport class NgbModalBackdrop {\n  @Input() backdropClass: string;\n}\n","import {ComponentRef} from '@angular/core';\n\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\n\nimport {ContentRef} from '../util/popup';\n\n/**\n * A reference to the currently opened (active) modal.\n *\n * Instances of this class can be injected into your component passed as modal content.\n * So you can `.close()` or `.dismiss()` the modal window from your component.\n */\nexport class NgbActiveModal {\n  /**\n   * Closes the modal with an optional `result` value.\n   *\n   * The `NgbMobalRef.result` promise will be resolved with the provided value.\n   */\n  close(result?: any): void {}\n\n  /**\n   * Dismisses the modal with an optional `reason` value.\n   *\n   * The `NgbModalRef.result` promise will be rejected with the provided value.\n   */\n  dismiss(reason?: any): void {}\n}\n\n/**\n * A reference to the newly opened modal returned by the `NgbModal.open()` method.\n */\nexport class NgbModalRef {\n  private _resolve: (result?: any) => void;\n  private _reject: (reason?: any) => void;\n\n  /**\n   * The instance of a component used for the modal content.\n   *\n   * When a `TemplateRef` is used as the content, will return `undefined`.\n   */\n  get componentInstance(): any {\n    if (this._contentRef.componentRef) {\n      return this._contentRef.componentRef.instance;\n    }\n  }\n\n  /**\n   * The promise that is resolved when the modal is closed and rejected when the modal is dismissed.\n   */\n  result: Promise<any>;\n\n  constructor(\n      private _windowCmptRef: ComponentRef<NgbModalWindow>, private _contentRef: ContentRef,\n      private _backdropCmptRef?: ComponentRef<NgbModalBackdrop>, private _beforeDismiss?: Function) {\n    _windowCmptRef.instance.dismissEvent.subscribe((reason: any) => { this.dismiss(reason); });\n\n    this.result = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n    this.result.then(null, () => {});\n  }\n\n  /**\n   * Closes the modal with an optional `result` value.\n   *\n   * The `NgbMobalRef.result` promise will be resolved with the provided value.\n   */\n  close(result?: any): void {\n    if (this._windowCmptRef) {\n      this._resolve(result);\n      this._removeModalElements();\n    }\n  }\n\n  private _dismiss(reason?: any) {\n    this._reject(reason);\n    this._removeModalElements();\n  }\n\n  /**\n   * Dismisses the modal with an optional `reason` value.\n   *\n   * The `NgbModalRef.result` promise will be rejected with the provided value.\n   */\n  dismiss(reason?: any): void {\n    if (this._windowCmptRef) {\n      if (!this._beforeDismiss) {\n        this._dismiss(reason);\n      } else {\n        const dismiss = this._beforeDismiss();\n        if (dismiss && dismiss.then) {\n          dismiss.then(\n              result => {\n                if (result !== false) {\n                  this._dismiss(reason);\n                }\n              },\n              () => {});\n        } else if (dismiss !== false) {\n          this._dismiss(reason);\n        }\n      }\n    }\n  }\n\n  private _removeModalElements() {\n    const windowNativeEl = this._windowCmptRef.location.nativeElement;\n    windowNativeEl.parentNode.removeChild(windowNativeEl);\n    this._windowCmptRef.destroy();\n\n    if (this._backdropCmptRef) {\n      const backdropNativeEl = this._backdropCmptRef.location.nativeElement;\n      backdropNativeEl.parentNode.removeChild(backdropNativeEl);\n      this._backdropCmptRef.destroy();\n    }\n\n    if (this._contentRef && this._contentRef.viewRef) {\n      this._contentRef.viewRef.destroy();\n    }\n\n    this._windowCmptRef = null;\n    this._backdropCmptRef = null;\n    this._contentRef = null;\n  }\n}\n","export enum ModalDismissReasons {\n  BACKDROP_CLICK,\n  ESC\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output\n} from '@angular/core';\n\nimport {getFocusableBoundaryElements} from '../util/focus-trap';\nimport {ModalDismissReasons} from './modal-dismiss-reasons';\n\n@Component({\n  selector: 'ngb-modal-window',\n  host: {\n    '[class]': '\"modal fade show d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n    'role': 'dialog',\n    'tabindex': '-1',\n    '(keyup.esc)': 'escKey($event)',\n    '(click)': 'backdropClick($event)',\n    '[attr.aria-modal]': 'true',\n    '[attr.aria-labelledby]': 'ariaLabelledBy',\n  },\n  template: `\n    <div [class]=\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '')\" role=\"document\">\n        <div class=\"modal-content\"><ng-content></ng-content></div>\n    </div>\n    `\n})\nexport class NgbModalWindow implements OnInit,\n    AfterViewInit, OnDestroy {\n  private _elWithFocus: Element;  // element that is focused prior to modal opening\n\n  @Input() ariaLabelledBy: string;\n  @Input() backdrop: boolean | string = true;\n  @Input() centered: string;\n  @Input() keyboard = true;\n  @Input() size: string;\n  @Input() windowClass: string;\n\n  @Output('dismiss') dismissEvent = new EventEmitter();\n\n  constructor(@Inject(DOCUMENT) private _document: any, private _elRef: ElementRef<HTMLElement>) {}\n\n  backdropClick($event): void {\n    if (this.backdrop === true && this._elRef.nativeElement === $event.target) {\n      this.dismiss(ModalDismissReasons.BACKDROP_CLICK);\n    }\n  }\n\n  escKey($event): void {\n    if (this.keyboard && !$event.defaultPrevented) {\n      this.dismiss(ModalDismissReasons.ESC);\n    }\n  }\n\n  dismiss(reason): void { this.dismissEvent.emit(reason); }\n\n  ngOnInit() { this._elWithFocus = this._document.activeElement; }\n\n  ngAfterViewInit() {\n    if (!this._elRef.nativeElement.contains(document.activeElement)) {\n      const autoFocusable = this._elRef.nativeElement.querySelector(`[ngbAutofocus]`) as HTMLElement;\n      const firstFocusable = getFocusableBoundaryElements(this._elRef.nativeElement)[0];\n\n      const elementToFocus = autoFocusable || firstFocusable || this._elRef.nativeElement;\n      elementToFocus.focus();\n    }\n  }\n\n  ngOnDestroy() {\n    const body = this._document.body;\n    const elWithFocus = this._elWithFocus;\n\n    let elementToFocus;\n    if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n      elementToFocus = elWithFocus;\n    } else {\n      elementToFocus = body;\n    }\n    elementToFocus.focus();\n    this._elWithFocus = null;\n  }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injectable,\n  Injector,\n  RendererFactory2,\n  TemplateRef,\n} from '@angular/core';\nimport {Subject} from 'rxjs';\n\nimport {ngbFocusTrap} from '../util/focus-trap';\nimport {ContentRef} from '../util/popup';\nimport {ScrollBar} from '../util/scrollbar';\nimport {isDefined, isString} from '../util/util';\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbActiveModal, NgbModalRef} from './modal-ref';\nimport {NgbModalWindow} from './modal-window';\n\n@Injectable({providedIn: 'root'})\nexport class NgbModalStack {\n  private _activeWindowCmptHasChanged = new Subject();\n  private _ariaHiddenValues: Map<Element, string> = new Map();\n  private _backdropAttributes = ['backdropClass'];\n  private _modalRefs: NgbModalRef[] = [];\n  private _windowAttributes = ['ariaLabelledBy', 'backdrop', 'centered', 'keyboard', 'size', 'windowClass'];\n  private _windowCmpts: ComponentRef<NgbModalWindow>[] = [];\n\n  constructor(\n      private _applicationRef: ApplicationRef, private _injector: Injector, @Inject(DOCUMENT) private _document: any,\n      private _scrollBar: ScrollBar, private _rendererFactory: RendererFactory2) {\n    // Trap focus on active WindowCmpt\n    this._activeWindowCmptHasChanged.subscribe(() => {\n      if (this._windowCmpts.length) {\n        const activeWindowCmpt = this._windowCmpts[this._windowCmpts.length - 1];\n        ngbFocusTrap(activeWindowCmpt.location.nativeElement, this._activeWindowCmptHasChanged);\n        this._revertAriaHidden();\n        this._setAriaHidden(activeWindowCmpt.location.nativeElement);\n      }\n    });\n  }\n\n  open(moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, options): NgbModalRef {\n    const containerEl =\n        isDefined(options.container) ? this._document.querySelector(options.container) : this._document.body;\n    const renderer = this._rendererFactory.createRenderer(null, null);\n\n    const revertPaddingForScrollBar = this._scrollBar.compensate();\n    const removeBodyClass = () => {\n      if (!this._modalRefs.length) {\n        renderer.removeClass(this._document.body, 'modal-open');\n        this._revertAriaHidden();\n      }\n    };\n\n    if (!containerEl) {\n      throw new Error(`The specified modal container \"${options.container || 'body'}\" was not found in the DOM.`);\n    }\n\n    const activeModal = new NgbActiveModal();\n    const contentRef = this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal);\n\n    let backdropCmptRef: ComponentRef<NgbModalBackdrop> =\n        options.backdrop !== false ? this._attachBackdrop(moduleCFR, containerEl) : null;\n    let windowCmptRef: ComponentRef<NgbModalWindow> = this._attachWindowComponent(moduleCFR, containerEl, contentRef);\n    let ngbModalRef: NgbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n\n    this._registerModalRef(ngbModalRef);\n    this._registerWindowCmpt(windowCmptRef);\n    ngbModalRef.result.then(revertPaddingForScrollBar, revertPaddingForScrollBar);\n    ngbModalRef.result.then(removeBodyClass, removeBodyClass);\n    activeModal.close = (result: any) => { ngbModalRef.close(result); };\n    activeModal.dismiss = (reason: any) => { ngbModalRef.dismiss(reason); };\n\n    this._applyWindowOptions(windowCmptRef.instance, options);\n    if (this._modalRefs.length === 1) {\n      renderer.addClass(this._document.body, 'modal-open');\n    }\n\n    if (backdropCmptRef && backdropCmptRef.instance) {\n      this._applyBackdropOptions(backdropCmptRef.instance, options);\n    }\n    return ngbModalRef;\n  }\n\n  dismissAll(reason?: any) { this._modalRefs.forEach(ngbModalRef => ngbModalRef.dismiss(reason)); }\n\n  hasOpenModals(): boolean { return this._modalRefs.length > 0; }\n\n  private _attachBackdrop(moduleCFR: ComponentFactoryResolver, containerEl: any): ComponentRef<NgbModalBackdrop> {\n    let backdropFactory = moduleCFR.resolveComponentFactory(NgbModalBackdrop);\n    let backdropCmptRef = backdropFactory.create(this._injector);\n    this._applicationRef.attachView(backdropCmptRef.hostView);\n    containerEl.appendChild(backdropCmptRef.location.nativeElement);\n    return backdropCmptRef;\n  }\n\n  private _attachWindowComponent(moduleCFR: ComponentFactoryResolver, containerEl: any, contentRef: any):\n      ComponentRef<NgbModalWindow> {\n    let windowFactory = moduleCFR.resolveComponentFactory(NgbModalWindow);\n    let windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);\n    this._applicationRef.attachView(windowCmptRef.hostView);\n    containerEl.appendChild(windowCmptRef.location.nativeElement);\n    return windowCmptRef;\n  }\n\n  private _applyWindowOptions(windowInstance: NgbModalWindow, options: Object): void {\n    this._windowAttributes.forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        windowInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _applyBackdropOptions(backdropInstance: NgbModalBackdrop, options: Object): void {\n    this._backdropAttributes.forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        backdropInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _getContentRef(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any,\n      activeModal: NgbActiveModal): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      return this._createFromTemplateRef(content, activeModal);\n    } else if (isString(content)) {\n      return this._createFromString(content);\n    } else {\n      return this._createFromComponent(moduleCFR, contentInjector, content, activeModal);\n    }\n  }\n\n  private _createFromTemplateRef(content: TemplateRef<any>, activeModal: NgbActiveModal): ContentRef {\n    const context = {\n      $implicit: activeModal,\n      close(result) { activeModal.close(result); },\n      dismiss(reason) { activeModal.dismiss(reason); }\n    };\n    const viewRef = content.createEmbeddedView(context);\n    this._applicationRef.attachView(viewRef);\n    return new ContentRef([viewRef.rootNodes], viewRef);\n  }\n\n  private _createFromString(content: string): ContentRef {\n    const component = this._document.createTextNode(`${content}`);\n    return new ContentRef([[component]]);\n  }\n\n  private _createFromComponent(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any,\n      context: NgbActiveModal): ContentRef {\n    const contentCmptFactory = moduleCFR.resolveComponentFactory(content);\n    const modalContentInjector =\n        Injector.create({providers: [{provide: NgbActiveModal, useValue: context}], parent: contentInjector});\n    const componentRef = contentCmptFactory.create(modalContentInjector);\n    this._applicationRef.attachView(componentRef.hostView);\n    return new ContentRef([[componentRef.location.nativeElement]], componentRef.hostView, componentRef);\n  }\n\n  private _setAriaHidden(element: Element) {\n    const parent = element.parentElement;\n    if (parent && element !== this._document.body) {\n      Array.from(parent.children).forEach(sibling => {\n        if (sibling !== element && sibling.nodeName !== 'SCRIPT') {\n          this._ariaHiddenValues.set(sibling, sibling.getAttribute('aria-hidden'));\n          sibling.setAttribute('aria-hidden', 'true');\n        }\n      });\n\n      this._setAriaHidden(parent);\n    }\n  }\n\n  private _revertAriaHidden() {\n    this._ariaHiddenValues.forEach((value, element) => {\n      if (value) {\n        element.setAttribute('aria-hidden', value);\n      } else {\n        element.removeAttribute('aria-hidden');\n      }\n    });\n    this._ariaHiddenValues.clear();\n  }\n\n  private _registerModalRef(ngbModalRef: NgbModalRef) {\n    const unregisterModalRef = () => {\n      const index = this._modalRefs.indexOf(ngbModalRef);\n      if (index > -1) {\n        this._modalRefs.splice(index, 1);\n      }\n    };\n    this._modalRefs.push(ngbModalRef);\n    ngbModalRef.result.then(unregisterModalRef, unregisterModalRef);\n  }\n\n  private _registerWindowCmpt(ngbWindowCmpt: ComponentRef<NgbModalWindow>) {\n    this._windowCmpts.push(ngbWindowCmpt);\n    this._activeWindowCmptHasChanged.next();\n\n    ngbWindowCmpt.onDestroy(() => {\n      const index = this._windowCmpts.indexOf(ngbWindowCmpt);\n      if (index > -1) {\n        this._windowCmpts.splice(index, 1);\n        this._activeWindowCmptHasChanged.next();\n      }\n    });\n  }\n}\n","import {Injectable, Injector, ComponentFactoryResolver} from '@angular/core';\n\nimport {NgbModalOptions, NgbModalConfig} from './modal-config';\nimport {NgbModalRef} from './modal-ref';\nimport {NgbModalStack} from './modal-stack';\n\n/**\n * A service for opening modal windows.\n *\n * Creating a modal is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbModal {\n  constructor(\n      private _moduleCFR: ComponentFactoryResolver, private _injector: Injector, private _modalStack: NgbModalStack,\n      private _config: NgbModalConfig) {}\n\n  /**\n   * Opens a new modal window with the specified content and supplied options.\n   *\n   * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n   * then instances of those components can be injected with an instance of the `NgbActiveModal` class. You can then\n   * use `NgbActiveModal` methods to close / dismiss modals from \"inside\" of your component.\n   *\n   * Also see the [`NgbModalOptions`](#/components/modal/api#NgbModalOptions) for the list of supported options.\n   */\n  open(content: any, options: NgbModalOptions = {}): NgbModalRef {\n    const combinedOptions = Object.assign({}, this._config, options);\n    return this._modalStack.open(this._moduleCFR, this._injector, content, combinedOptions);\n  }\n\n  /**\n   * Dismisses all currently displayed modal windows with the supplied reason.\n   *\n   * @since 3.1.0\n   */\n  dismissAll(reason?: any) { this._modalStack.dismissAll(reason); }\n\n  /**\n   * Indicates if there are currently any open modal windows in the application.\n   *\n   * @since 3.3.0\n   */\n  hasOpenModals(): boolean { return this._modalStack.hasOpenModals(); }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\n\nimport {NgbModal} from './modal';\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\n\nexport {NgbModal} from './modal';\nexport {NgbModalConfig, NgbModalOptions} from './modal-config';\nexport {NgbModalRef, NgbActiveModal} from './modal-ref';\nexport {ModalDismissReasons} from './modal-dismiss-reasons';\n\n@NgModule({\n  declarations: [NgbModalBackdrop, NgbModalWindow],\n  entryComponents: [NgbModalBackdrop, NgbModalWindow],\n  providers: [NgbModal]\n})\nexport class NgbModalModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbModalModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbPagination`](#/components/pagination/api#NgbPagination) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbPaginationConfig {\n  disabled = false;\n  boundaryLinks = false;\n  directionLinks = true;\n  ellipses = true;\n  maxSize = 0;\n  pageSize = 10;\n  rotate = false;\n  size: 'sm' | 'lg';\n}\n","import {\n  Component,\n  ContentChild,\n  Directive,\n  EventEmitter,\n  Input,\n  Output,\n  OnChanges,\n  ChangeDetectionStrategy,\n  SimpleChanges,\n  TemplateRef\n} from '@angular/core';\nimport {getValueInRange, isNumber} from '../util/util';\nimport {NgbPaginationConfig} from './pagination-config';\n\n/**\n * A context for the\n * * `NgbPaginationFirst`\n * * `NgbPaginationPrevious`\n * * `NgbPaginationNext`\n * * `NgbPaginationLast`\n * * `NgbPaginationEllipsis`\n *\n * link templates in case you want to override one.\n *\n * @since 4.1.0\n */\nexport interface NgbPaginationLinkContext {\n  /**\n   * The currently selected page number\n   */\n  currentPage: number;\n\n  /**\n   * If `true`, the current link is disabled\n   */\n  disabled: boolean;\n}\n\n/**\n * A context for the `NgbPaginationNumber` link template in case you want to override one.\n *\n * Extends `NgbPaginationLinkContext`.\n *\n * @since 4.1.0\n */\nexport interface NgbPaginationNumberContext extends NgbPaginationLinkContext {\n  /**\n   * The page number, displayed by the current page link.\n   */\n  $implicit: number;\n}\n\n/**\n * A directive to match the 'ellipsis' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationEllipsis]'})\nexport class NgbPaginationEllipsis {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the 'first' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationFirst]'})\nexport class NgbPaginationFirst {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the 'last' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationLast]'})\nexport class NgbPaginationLast {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the 'next' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationNext]'})\nexport class NgbPaginationNext {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the page 'number' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationNumber]'})\nexport class NgbPaginationNumber {\n  constructor(public templateRef: TemplateRef<NgbPaginationNumberContext>) {}\n}\n\n/**\n * A directive to match the 'previous' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationPrevious]'})\nexport class NgbPaginationPrevious {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A component that displays page numbers and allows to customize them in several ways.\n */\n@Component({\n  selector: 'ngb-pagination',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'role': 'navigation'},\n  template: `\n    <ng-template #first><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span></ng-template>\n    <ng-template #previous><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span></ng-template>\n    <ng-template #next><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span></ng-template>\n    <ng-template #last><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span></ng-template>\n    <ng-template #ellipsis>...</ng-template>\n    <ng-template #defaultNumber let-page let-currentPage=\"currentPage\">\n      {{ page }}\n      <span *ngIf=\"page === currentPage\" class=\"sr-only\">(current)</span>\n    </ng-template>\n    <ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"First\" i18n-aria-label=\"@@ngb.pagination.first-aria\" class=\"page-link\" href\n          (click)=\"selectPage(1); $event.preventDefault()\" [attr.tabindex]=\"(hasPrevious() ? null : '-1')\">\n          <ng-template [ngTemplateOutlet]=\"tplFirst?.templateRef || first\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"directionLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"Previous\" i18n-aria-label=\"@@ngb.pagination.previous-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page-1); $event.preventDefault()\" [attr.tabindex]=\"(hasPrevious() ? null : '-1')\">\n          <ng-template [ngTemplateOutlet]=\"tplPrevious?.templateRef || previous\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled()}\"></ng-template>\n        </a>\n      </li>\n      <li *ngFor=\"let pageNumber of pages\" class=\"page-item\" [class.active]=\"pageNumber === page\"\n        [class.disabled]=\"isEllipsis(pageNumber) || disabled\">\n        <a *ngIf=\"isEllipsis(pageNumber)\" class=\"page-link\">\n          <ng-template [ngTemplateOutlet]=\"tplEllipsis?.templateRef || ellipsis\"\n                       [ngTemplateOutletContext]=\"{disabled: true, currentPage: page}\"></ng-template>\n        </a>\n        <a *ngIf=\"!isEllipsis(pageNumber)\" class=\"page-link\" href (click)=\"selectPage(pageNumber); $event.preventDefault()\">\n          <ng-template [ngTemplateOutlet]=\"tplNumber?.templateRef || defaultNumber\"\n                       [ngTemplateOutletContext]=\"{disabled: disabled, $implicit: pageNumber, currentPage: page}\"></ng-template>\n        </a>\n      </li>\n      <li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Next\" i18n-aria-label=\"@@ngb.pagination.next-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page+1); $event.preventDefault()\" [attr.tabindex]=\"(hasNext() ? null : '-1')\">\n          <ng-template [ngTemplateOutlet]=\"tplNext?.templateRef || next\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Last\" i18n-aria-label=\"@@ngb.pagination.last-aria\" class=\"page-link\" href\n          (click)=\"selectPage(pageCount); $event.preventDefault()\" [attr.tabindex]=\"(hasNext() ? null : '-1')\">\n          <ng-template [ngTemplateOutlet]=\"tplLast?.templateRef || last\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n    </ul>\n  `\n})\nexport class NgbPagination implements OnChanges {\n  pageCount = 0;\n  pages: number[] = [];\n\n  @ContentChild(NgbPaginationEllipsis) tplEllipsis: NgbPaginationEllipsis;\n  @ContentChild(NgbPaginationFirst) tplFirst: NgbPaginationFirst;\n  @ContentChild(NgbPaginationLast) tplLast: NgbPaginationLast;\n  @ContentChild(NgbPaginationNext) tplNext: NgbPaginationNext;\n  @ContentChild(NgbPaginationNumber) tplNumber: NgbPaginationNumber;\n  @ContentChild(NgbPaginationPrevious) tplPrevious: NgbPaginationPrevious;\n\n  /**\n   * If `true`, pagination links will be disabled.\n   */\n  @Input() disabled: boolean;\n\n  /**\n   * If `true`, the \"First\" and \"Last\" page links are shown.\n   */\n  @Input() boundaryLinks: boolean;\n\n  /**\n   * If `true`, the \"Next\" and \"Previous\" page links are shown.\n   */\n  @Input() directionLinks: boolean;\n\n  /**\n   * If `true`, the ellipsis symbols and first/last page numbers will be shown when `maxSize` > number of pages.\n   */\n  @Input() ellipses: boolean;\n\n  /**\n   * Whether to rotate pages when `maxSize` > number of pages.\n   *\n   * The current page always stays in the middle if `true`.\n   */\n  @Input() rotate: boolean;\n\n  /**\n   *  The number of items in your paginated collection.\n   *\n   *  Note, that this is not the number of pages. Page numbers are calculated dynamically based on\n   *  `collectionSize` and `pageSize`. Ex. if you have 100 items in your collection and displaying 20 items per page,\n   *  you'll end up with 5 pages.\n   */\n  @Input() collectionSize: number;\n\n  /**\n   *  The maximum number of pages to display.\n   */\n  @Input() maxSize: number;\n\n  /**\n   *  The current page.\n   *\n   *  Page numbers start with `1`.\n   */\n  @Input() page = 1;\n\n  /**\n   *  The number of items per page.\n   */\n  @Input() pageSize: number;\n\n  /**\n   *  An event fired when the page is changed. Will fire only if collection size is set and all values are valid.\n   *\n   *  Event payload is the number of the newly selected page.\n   *\n   *  Page numbers start with `1`.\n   */\n  @Output() pageChange = new EventEmitter<number>(true);\n\n  /**\n   * The pagination display size.\n   *\n   * Bootstrap currently supports small and large sizes.\n   */\n  @Input() size: 'sm' | 'lg';\n\n  constructor(config: NgbPaginationConfig) {\n    this.disabled = config.disabled;\n    this.boundaryLinks = config.boundaryLinks;\n    this.directionLinks = config.directionLinks;\n    this.ellipses = config.ellipses;\n    this.maxSize = config.maxSize;\n    this.pageSize = config.pageSize;\n    this.rotate = config.rotate;\n    this.size = config.size;\n  }\n\n  hasPrevious(): boolean { return this.page > 1; }\n\n  hasNext(): boolean { return this.page < this.pageCount; }\n\n  nextDisabled(): boolean { return !this.hasNext() || this.disabled; }\n\n  previousDisabled(): boolean { return !this.hasPrevious() || this.disabled; }\n\n  selectPage(pageNumber: number): void { this._updatePages(pageNumber); }\n\n  ngOnChanges(changes: SimpleChanges): void { this._updatePages(this.page); }\n\n  isEllipsis(pageNumber): boolean { return pageNumber === -1; }\n\n  /**\n   * Appends ellipses and first/last page number to the displayed pages\n   */\n  private _applyEllipses(start: number, end: number) {\n    if (this.ellipses) {\n      if (start > 0) {\n        if (start > 1) {\n          this.pages.unshift(-1);\n        }\n        this.pages.unshift(1);\n      }\n      if (end < this.pageCount) {\n        if (end < (this.pageCount - 1)) {\n          this.pages.push(-1);\n        }\n        this.pages.push(this.pageCount);\n      }\n    }\n  }\n\n  /**\n   * Rotates page numbers based on maxSize items visible.\n   * Currently selected page stays in the middle:\n   *\n   * Ex. for selected page = 6:\n   * [5,*6*,7] for maxSize = 3\n   * [4,5,*6*,7] for maxSize = 4\n   */\n  private _applyRotation(): [number, number] {\n    let start = 0;\n    let end = this.pageCount;\n    let leftOffset = Math.floor(this.maxSize / 2);\n    let rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n\n    if (this.page <= leftOffset) {\n      // very beginning, no rotation -> [0..maxSize]\n      end = this.maxSize;\n    } else if (this.pageCount - this.page < leftOffset) {\n      // very end, no rotation -> [len-maxSize..len]\n      start = this.pageCount - this.maxSize;\n    } else {\n      // rotate\n      start = this.page - leftOffset - 1;\n      end = this.page + rightOffset;\n    }\n\n    return [start, end];\n  }\n\n  /**\n   * Paginates page numbers based on maxSize items per page.\n   */\n  private _applyPagination(): [number, number] {\n    let page = Math.ceil(this.page / this.maxSize) - 1;\n    let start = page * this.maxSize;\n    let end = start + this.maxSize;\n\n    return [start, end];\n  }\n\n  private _setPageInRange(newPageNo) {\n    const prevPageNo = this.page;\n    this.page = getValueInRange(newPageNo, this.pageCount, 1);\n\n    if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n      this.pageChange.emit(this.page);\n    }\n  }\n\n  private _updatePages(newPage: number) {\n    this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n\n    if (!isNumber(this.pageCount)) {\n      this.pageCount = 0;\n    }\n\n    // fill-in model needed to render pages\n    this.pages.length = 0;\n    for (let i = 1; i <= this.pageCount; i++) {\n      this.pages.push(i);\n    }\n\n    // set page within 1..max range\n    this._setPageInRange(newPage);\n\n    // apply maxSize if necessary\n    if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n      let start = 0;\n      let end = this.pageCount;\n\n      // either paginating or rotating page numbers\n      if (this.rotate) {\n        [start, end] = this._applyRotation();\n      } else {\n        [start, end] = this._applyPagination();\n      }\n\n      this.pages = this.pages.slice(start, end);\n\n      // adding ellipses\n      this._applyEllipses(start, end);\n    }\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {\n  NgbPagination,\n  NgbPaginationEllipsis,\n  NgbPaginationFirst,\n  NgbPaginationLast,\n  NgbPaginationNext,\n  NgbPaginationNumber,\n  NgbPaginationPrevious\n} from './pagination';\n\nexport {\n  NgbPagination,\n  NgbPaginationEllipsis,\n  NgbPaginationFirst,\n  NgbPaginationLast,\n  NgbPaginationNext,\n  NgbPaginationNumber,\n  NgbPaginationPrevious\n} from './pagination';\nexport {NgbPaginationConfig} from './pagination-config';\n\nconst DIRECTIVES = [\n  NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber,\n  NgbPaginationPrevious\n];\n\n@NgModule({declarations: DIRECTIVES, exports: DIRECTIVES, imports: [CommonModule]})\nexport class NgbPaginationModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbPaginationModule}; }\n}\n","import {Observable, merge} from 'rxjs';\nimport {share, filter, delay, map} from 'rxjs/operators';\n\nexport class Trigger {\n  constructor(public open: string, public close?: string) {\n    if (!close) {\n      this.close = open;\n    }\n  }\n\n  isManual() { return this.open === 'manual' || this.close === 'manual'; }\n}\n\nconst DEFAULT_ALIASES = {\n  'hover': ['mouseenter', 'mouseleave'],\n  'focus': ['focusin', 'focusout'],\n};\n\nexport function parseTriggers(triggers: string, aliases = DEFAULT_ALIASES): Trigger[] {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers.split(/\\s+/).map(trigger => trigger.split(':')).map((triggerPair) => {\n    let alias = aliases[triggerPair[0]] || triggerPair;\n    return new Trigger(alias[0], alias[1]);\n  });\n\n  const manualTriggers = parsedTriggers.filter(triggerPair => triggerPair.isManual());\n\n  if (manualTriggers.length > 1) {\n    throw 'Triggers parse error: only one manual trigger is allowed';\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\n  }\n\n  return parsedTriggers;\n}\n\nexport function observeTriggers(renderer: any, nativeElement: any, triggers: Trigger[], isOpenedFn: () => boolean) {\n  return new Observable<boolean>(subscriber => {\n    const listeners = [];\n    const openFn = () => subscriber.next(true);\n    const closeFn = () => subscriber.next(false);\n    const toggleFn = () => subscriber.next(!isOpenedFn());\n\n    triggers.forEach((trigger: Trigger) => {\n      if (trigger.open === trigger.close) {\n        listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n      } else {\n        listeners.push(\n            renderer.listen(nativeElement, trigger.open, openFn),\n            renderer.listen(nativeElement, trigger.close, closeFn));\n      }\n    });\n\n    return () => { listeners.forEach(unsubscribeFn => unsubscribeFn()); };\n  });\n}\n\nconst delayOrNoop = <T>(time: number) => time > 0 ? delay<T>(time) : (a: Observable<T>) => a;\n\nexport function triggerDelay(openDelay: number, closeDelay: number, isOpenedFn: () => boolean) {\n  return (input$: Observable<boolean>) => {\n    let pending = null;\n    const filteredInput$ = input$.pipe(\n        map(open => ({open})), filter(event => {\n          const currentlyOpen = isOpenedFn();\n          if (currentlyOpen !== event.open && (!pending || pending.open === currentlyOpen)) {\n            pending = event;\n            return true;\n          }\n          if (pending && pending.open !== event.open) {\n            pending = null;\n          }\n          return false;\n        }),\n        share());\n    const delayedOpen$ = filteredInput$.pipe(filter(event => event.open), delayOrNoop(openDelay));\n    const delayedClose$ = filteredInput$.pipe(filter(event => !event.open), delayOrNoop(closeDelay));\n    return merge(delayedOpen$, delayedClose$)\n        .pipe(\n            filter(event => {\n              if (event === pending) {\n                pending = null;\n                return event.open !== isOpenedFn();\n              }\n              return false;\n            }),\n            map(event => event.open));\n  };\n}\n\nexport function listenToTriggers(\n    renderer: any, nativeElement: any, triggers: string, isOpenedFn: () => boolean, openFn, closeFn, openDelay = 0,\n    closeDelay = 0) {\n  const parsedTriggers = parseTriggers(triggers);\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return () => {};\n  }\n\n  const subscription = observeTriggers(renderer, nativeElement, parsedTriggers, isOpenedFn)\n                           .pipe(triggerDelay(openDelay, closeDelay, isOpenedFn))\n                           .subscribe(open => (open ? openFn() : closeFn()));\n\n  return () => subscription.unsubscribe();\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbPopover`](#/components/popover/api#NgbPopover) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbPopoverConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  placement: PlacementArray = 'auto';\n  triggers = 'click';\n  container: string;\n  disablePopover = false;\n  popoverClass: string;\n  openDelay = 0;\n  closeDelay = 0;\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  OnChanges,\n  Inject,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone,\n  SimpleChanges,\n  ViewEncapsulation,\n  ChangeDetectorRef\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {listenToTriggers} from '../util/triggers';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {positionElements, PlacementArray} from '../util/positioning';\nimport {PopupService} from '../util/popup';\n\nimport {NgbPopoverConfig} from './popover-config';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'ngb-popover-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {'[class]': '\"popover\" + (popoverClass ? \" \" + popoverClass : \"\")', 'role': 'tooltip', '[id]': 'id'},\n  template: `\n    <div class=\"arrow\"></div>\n    <h3 class=\"popover-header\" *ngIf=\"title != null\">\n      <ng-template #simpleTitle>{{title}}</ng-template>\n      <ng-template [ngTemplateOutlet]=\"isTitleTemplate() ? title : simpleTitle\" [ngTemplateOutletContext]=\"context\"></ng-template>\n    </h3>\n    <div class=\"popover-body\"><ng-content></ng-content></div>`,\n  styleUrls: ['./popover.scss']\n})\nexport class NgbPopoverWindow {\n  @Input() title: undefined | string | TemplateRef<any>;\n  @Input() id: string;\n  @Input() popoverClass: string;\n  @Input() context: any;\n\n  isTitleTemplate() { return this.title instanceof TemplateRef; }\n}\n\n/**\n * A lightweight and extensible directive for fancy popover creation.\n */\n@Directive({selector: '[ngbPopover]', exportAs: 'ngbPopover'})\nexport class NgbPopover implements OnInit, OnDestroy, OnChanges {\n  /**\n   * Indicates whether the popover should be closed on `Escape` key and inside/outside clicks:\n   *\n   * * `true` - closes on both outside and inside clicks as well as `Escape` presses\n   * * `false` - disables the autoClose feature (NB: triggers still apply)\n   * * `\"inside\"` - closes on inside clicks as well as Escape presses\n   * * `\"outside\"` - closes on outside clicks (sometimes also achievable through triggers)\n   * as well as `Escape` presses\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n\n  /**\n   * The string content or a `TemplateRef` for the content to be displayed in the popover.\n   *\n   * If the title and the content are empty, the popover won't open.\n   */\n  @Input() ngbPopover: string | TemplateRef<any>;\n\n  /**\n   * The title of the popover.\n   *\n   * If the title and the content are empty, the popover won't open.\n   */\n  @Input() popoverTitle: string | TemplateRef<any>;\n\n  /**\n   * The preferred placement of the popover.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"auto\"` (same as the sequence above).\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   * Specifies events that should trigger the tooltip.\n   *\n   * Supports a space separated list of event names.\n   * For more details see the [triggers demo](#/components/popover/examples#triggers).\n   */\n  @Input() triggers: string;\n\n  /**\n   * A selector specifying the element the popover should be appended to.\n   *\n   * Currently only supports `body`.\n   */\n  @Input() container: string;\n\n  /**\n   * If `true`, popover is disabled and won't be displayed.\n   *\n   * @since 1.1.0\n   */\n  @Input() disablePopover: boolean;\n\n  /**\n   * An optional class applied to the popover window element.\n   *\n   * @since 2.2.0\n   */\n  @Input() popoverClass: string;\n\n  /**\n   * The opening delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() openDelay: number;\n\n  /**\n   * The closing delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() closeDelay: number;\n\n  /**\n   * An event emitted when the popover is shown. Contains no payload.\n   */\n  @Output() shown = new EventEmitter<void>();\n\n  /**\n   * An event emitted when the popover is hidden. Contains no payload.\n   */\n  @Output() hidden = new EventEmitter<void>();\n\n  private _ngbPopoverWindowId = `ngb-popover-${nextId++}`;\n  private _popupService: PopupService<NgbPopoverWindow>;\n  private _windowRef: ComponentRef<NgbPopoverWindow>;\n  private _unregisterListenersFn;\n  private _zoneSubscription: any;\n  private _isDisabled(): boolean {\n    if (this.disablePopover) {\n      return true;\n    }\n    if (!this.ngbPopover && !this.popoverTitle) {\n      return true;\n    }\n    return false;\n  }\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbPopoverConfig,\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any, private _changeDetector: ChangeDetectorRef) {\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disablePopover = config.disablePopover;\n    this.popoverClass = config.popoverClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._popupService = new PopupService<NgbPopoverWindow>(\n        NgbPopoverWindow, injector, viewContainerRef, _renderer, componentFactoryResolver);\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body', 'bs-popover');\n      }\n    });\n  }\n\n  /**\n   * Opens the popover.\n   *\n   * This is considered to be a \"manual\" triggering.\n   * The `context` is an optional value to be injected into the popover template when it is created.\n   */\n  open(context?: any) {\n    if (!this._windowRef && !this._isDisabled()) {\n      this._windowRef = this._popupService.open(this.ngbPopover, context);\n      this._windowRef.instance.title = this.popoverTitle;\n      this._windowRef.instance.context = context;\n      this._windowRef.instance.popoverClass = this.popoverClass;\n      this._windowRef.instance.id = this._ngbPopoverWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      // We need to detect changes, because we don't know where .open() might be called from.\n      // Ex. opening popover from one of lifecycle hooks that run after the CD\n      // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n      this._windowRef.changeDetectorRef.detectChanges();\n\n      // We need to mark for check, because popover won't work inside the OnPush component.\n      // Ex. when we use expression like `{{ popover.isOpen() : 'opened' : 'closed' }}`\n      // inside the template of an OnPush component and we change the popover from\n      // open -> closed, the expression in question won't be updated unless we explicitly\n      // mark the parent component to be checked.\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      ngbAutoClose(\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden,\n          [this._windowRef.location.nativeElement]);\n      this.shown.emit();\n    }\n  }\n\n  /**\n   * Closes the popover.\n   *\n   * This is considered to be a \"manual\" triggering of the popover.\n   */\n  close(): void {\n    if (this._windowRef) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Toggles the popover.\n   *\n   * This is considered to be a \"manual\" triggering of the popover.\n   */\n  toggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Returns `true`, if the popover is currently shown.\n   */\n  isOpen(): boolean { return this._windowRef != null; }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this),\n        this.close.bind(this), +this.openDelay, +this.closeDelay);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // close popover if title and content become empty, or disablePopover set to true\n    if ((changes['ngbPopover'] || changes['popoverTitle'] || changes['disablePopover']) && this._isDisabled()) {\n      this.close();\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n    this._zoneSubscription.unsubscribe();\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\n\nimport {NgbPopover, NgbPopoverWindow} from './popover';\nimport {CommonModule} from '@angular/common';\n\nexport {NgbPopover} from './popover';\nexport {NgbPopoverConfig} from './popover-config';\nexport {Placement} from '../util/positioning';\n\n@NgModule({\n  declarations: [NgbPopover, NgbPopoverWindow],\n  exports: [NgbPopover],\n  imports: [CommonModule],\n  entryComponents: [NgbPopoverWindow]\n})\nexport class NgbPopoverModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbPopoverModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbProgressbar`](#/components/progressbar/api#NgbProgressbar) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbProgressbarConfig {\n  max = 100;\n  animated = false;\n  striped = false;\n  type: string;\n  showValue = false;\n  height: string;\n}\n","import {Component, Input, ChangeDetectionStrategy} from '@angular/core';\nimport {getValueInRange} from '../util/util';\nimport {NgbProgressbarConfig} from './progressbar-config';\n\n/**\n * A directive that provides feedback on the progress of a workflow or an action.\n */\n@Component({\n  selector: 'ngb-progressbar',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"progress\" [style.height]=\"height\">\n      <div class=\"progress-bar{{type ? ' bg-' + type : ''}}{{animated ? ' progress-bar-animated' : ''}}{{striped ?\n    ' progress-bar-striped' : ''}}\" role=\"progressbar\" [style.width.%]=\"getPercentValue()\"\n    [attr.aria-valuenow]=\"getValue()\" aria-valuemin=\"0\" [attr.aria-valuemax]=\"max\">\n        <span *ngIf=\"showValue\" i18n=\"@@ngb.progressbar.value\">{{getPercentValue()}}%</span><ng-content></ng-content>\n      </div>\n    </div>\n  `\n})\nexport class NgbProgressbar {\n  /**\n   * The maximal value to be displayed in the progressbar.\n   */\n  @Input() max: number;\n\n  /**\n   * If `true`, the stripes on the progressbar are animated.\n   *\n   * Takes effect only for browsers supporting CSS3 animations, and if `striped` is `true`.\n   */\n  @Input() animated: boolean;\n\n  /**\n   * If `true`, the progress bars will be displayed as striped.\n   */\n  @Input() striped: boolean;\n\n  /**\n   * If `true`, the current percentage will be shown in the `xx%` format.\n   */\n  @Input() showValue: boolean;\n\n  /**\n   * The type of the progress bar.\n   *\n   * Currently Bootstrap supports `\"success\"`, `\"info\"`, `\"warning\"` or `\"danger\"`.\n   */\n  @Input() type: string;\n\n  /**\n   * The current value for the progress bar.\n   *\n   * Should be in the `[0, max]` range.\n   */\n  @Input() value = 0;\n\n  /**\n   * THe height of the progress bar.\n   *\n   * Accepts any valid CSS height values, ex. `\"2rem\"`\n   */\n  @Input() height: string;\n\n  constructor(config: NgbProgressbarConfig) {\n    this.max = config.max;\n    this.animated = config.animated;\n    this.striped = config.striped;\n    this.type = config.type;\n    this.showValue = config.showValue;\n    this.height = config.height;\n  }\n\n  getValue() { return getValueInRange(this.value, this.max); }\n\n  getPercentValue() { return 100 * this.getValue() / this.max; }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbProgressbar} from './progressbar';\n\nexport {NgbProgressbar} from './progressbar';\nexport {NgbProgressbarConfig} from './progressbar-config';\n\n@NgModule({declarations: [NgbProgressbar], exports: [NgbProgressbar], imports: [CommonModule]})\nexport class NgbProgressbarModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbProgressbarModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbRating`](#/components/rating/api#NgbRating) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbRatingConfig {\n  max = 10;\n  readonly = false;\n  resettable = false;\n}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  TemplateRef,\n  OnChanges,\n  SimpleChanges,\n  ContentChild,\n  forwardRef,\n  ChangeDetectorRef\n} from '@angular/core';\nimport {NgbRatingConfig} from './rating-config';\nimport {getValueInRange} from '../util/util';\nimport {Key} from '../util/key';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n/**\n * The context for the custom star display template defined in the `starTemplate`.\n */\nexport interface StarTemplateContext {\n  /**\n   * The star fill percentage, an integer in the `[0, 100]` range.\n   */\n  fill: number;\n\n  /**\n   * Index of the star, starts with `0`.\n   */\n  index: number;\n}\n\nconst NGB_RATING_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRating),\n  multi: true\n};\n\n/**\n * A directive that helps visualising and interacting with a star rating bar.\n */\n@Component({\n  selector: 'ngb-rating',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'd-inline-flex',\n    'tabindex': '0',\n    'role': 'slider',\n    'aria-valuemin': '0',\n    '[attr.aria-valuemax]': 'max',\n    '[attr.aria-valuenow]': 'nextRate',\n    '[attr.aria-valuetext]': 'ariaValueText()',\n    '[attr.aria-disabled]': 'readonly ? true : null',\n    '(blur)': 'handleBlur()',\n    '(keydown)': 'handleKeyDown($event)',\n    '(mouseleave)': 'reset()'\n  },\n  template: `\n    <ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n    <ng-template ngFor [ngForOf]=\"contexts\" let-index=\"index\">\n      <span class=\"sr-only\">({{ index < nextRate ? '*' : ' ' }})</span>\n      <span (mouseenter)=\"enter(index + 1)\" (click)=\"handleClick(index + 1)\" [style.cursor]=\"readonly || disabled ? 'default' : 'pointer'\">\n        <ng-template [ngTemplateOutlet]=\"starTemplate || starTemplateFromContent || t\" [ngTemplateOutletContext]=\"contexts[index]\">\n        </ng-template>\n      </span>\n    </ng-template>\n  `,\n  providers: [NGB_RATING_VALUE_ACCESSOR]\n})\nexport class NgbRating implements ControlValueAccessor,\n    OnInit, OnChanges {\n  contexts: StarTemplateContext[] = [];\n  disabled = false;\n  nextRate: number;\n\n\n  /**\n   * The maximal rating that can be given.\n   */\n  @Input() max: number;\n\n  /**\n   * The current rating. Could be a decimal value like `3.75`.\n   */\n  @Input() rate: number;\n\n  /**\n   * If `true`, the rating can't be changed.\n   */\n  @Input() readonly: boolean;\n\n  /**\n   * If `true`, the rating can be reset to `0` by mouse clicking currently set rating.\n   */\n  @Input() resettable: boolean;\n\n  /**\n   * The template to override the way each star is displayed.\n   *\n   * Alternatively put an `<ng-template>` as the only child of your `<ngb-rating>` element\n   */\n  @Input() starTemplate: TemplateRef<StarTemplateContext>;\n  @ContentChild(TemplateRef) starTemplateFromContent: TemplateRef<StarTemplateContext>;\n\n  /**\n   * An event emitted when the user is hovering over a given rating.\n   *\n   * Event payload equals to the rating being hovered over.\n   */\n  @Output() hover = new EventEmitter<number>();\n\n  /**\n   * An event emitted when the user stops hovering over a given rating.\n   *\n   * Event payload equals to the rating of the last item being hovered over.\n   */\n  @Output() leave = new EventEmitter<number>();\n\n  /**\n   * An event emitted when the user selects a new rating.\n   *\n   * Event payload equals to the newly selected rating.\n   */\n  @Output() rateChange = new EventEmitter<number>(true);\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(config: NgbRatingConfig, private _changeDetectorRef: ChangeDetectorRef) {\n    this.max = config.max;\n    this.readonly = config.readonly;\n  }\n\n  ariaValueText() { return `${this.nextRate} out of ${this.max}`; }\n\n  enter(value: number): void {\n    if (!this.readonly && !this.disabled) {\n      this._updateState(value);\n    }\n    this.hover.emit(value);\n  }\n\n  handleBlur() { this.onTouched(); }\n\n  handleClick(value: number) { this.update(this.resettable && this.rate === value ? 0 : value); }\n\n  handleKeyDown(event: KeyboardEvent) {\n    // tslint:disable-next-line:deprecation\n    switch (event.which) {\n      case Key.ArrowDown:\n      case Key.ArrowLeft:\n        this.update(this.rate - 1);\n        break;\n      case Key.ArrowUp:\n      case Key.ArrowRight:\n        this.update(this.rate + 1);\n        break;\n      case Key.Home:\n        this.update(0);\n        break;\n      case Key.End:\n        this.update(this.max);\n        break;\n      default:\n        return;\n    }\n\n    // note 'return' in default case\n    event.preventDefault();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['rate']) {\n      this.update(this.rate);\n    }\n  }\n\n  ngOnInit(): void {\n    this.contexts = Array.from({length: this.max}, (v, k) => ({fill: 0, index: k}));\n    this._updateState(this.rate);\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  reset(): void {\n    this.leave.emit(this.nextRate);\n    this._updateState(this.rate);\n  }\n\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n\n  update(value: number, internalChange = true): void {\n    const newRate = getValueInRange(value, this.max, 0);\n    if (!this.readonly && !this.disabled && this.rate !== newRate) {\n      this.rate = newRate;\n      this.rateChange.emit(this.rate);\n    }\n    if (internalChange) {\n      this.onChange(this.rate);\n      this.onTouched();\n    }\n    this._updateState(this.rate);\n  }\n\n  writeValue(value) {\n    this.update(value, false);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _getFillValue(index: number): number {\n    const diff = this.nextRate - index;\n\n    if (diff >= 1) {\n      return 100;\n    }\n    if (diff < 1 && diff > 0) {\n      return parseInt((diff * 100).toFixed(2), 10);\n    }\n\n    return 0;\n  }\n\n  private _updateState(nextValue: number) {\n    this.nextRate = nextValue;\n    this.contexts.forEach((context, index) => context.fill = this._getFillValue(index));\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbRating} from './rating';\n\nexport {NgbRating} from './rating';\nexport {NgbRatingConfig} from './rating-config';\n\n@NgModule({declarations: [NgbRating], exports: [NgbRating], imports: [CommonModule]})\nexport class NgbRatingModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbRatingModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbTabset`](#/components/tabset/api#NgbTabset) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tabsets used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTabsetConfig {\n  justify: 'start' | 'center' | 'end' | 'fill' | 'justified' = 'start';\n  orientation: 'horizontal' | 'vertical' = 'horizontal';\n  type: 'tabs' | 'pills' = 'tabs';\n}\n","import {\n  Component,\n  Input,\n  ContentChildren,\n  QueryList,\n  Directive,\n  TemplateRef,\n  AfterContentChecked,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {NgbTabsetConfig} from './tabset-config';\n\nlet nextId = 0;\n\n/**\n * A directive to wrap tab titles that need to contain HTML markup or other directives.\n *\n * Alternatively you could use the `NgbTab.title` input for string titles.\n */\n@Directive({selector: 'ng-template[ngbTabTitle]'})\nexport class NgbTabTitle {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive to wrap content to be displayed in a tab.\n */\n@Directive({selector: 'ng-template[ngbTabContent]'})\nexport class NgbTabContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive representing an individual tab.\n */\n@Directive({selector: 'ngb-tab'})\nexport class NgbTab implements AfterContentChecked {\n  /**\n   * The tab identifier.\n   *\n   * Must be unique for the entire document for proper accessibility support.\n   */\n  @Input() id = `ngb-tab-${nextId++}`;\n\n  /**\n   * The tab title.\n   *\n   * Use the [`NgbTabTitle`](#/components/tabset/api#NgbTabTitle) directive for non-string titles.\n   */\n  @Input() title: string;\n\n  /**\n   * If `true`, the current tab is disabled and can't be toggled.\n   */\n  @Input() disabled = false;\n\n  titleTpl: NgbTabTitle | null;\n  contentTpl: NgbTabContent | null;\n\n  @ContentChildren(NgbTabTitle, {descendants: false}) titleTpls: QueryList<NgbTabTitle>;\n  @ContentChildren(NgbTabContent, {descendants: false}) contentTpls: QueryList<NgbTabContent>;\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n}\n\n/**\n * The payload of the change event fired right before the tab change.\n */\nexport interface NgbTabChangeEvent {\n  /**\n   * The id of the currently active tab.\n   */\n  activeId: string;\n\n  /**\n   * The id of the newly selected tab.\n   */\n  nextId: string;\n\n  /**\n   * Calling this function will prevent tab switching.\n   */\n  preventDefault: () => void;\n}\n\n/**\n * A component that makes it easy to create tabbed interface.\n */\n@Component({\n  selector: 'ngb-tabset',\n  exportAs: 'ngbTabset',\n  template: `\n    <ul [class]=\"'nav nav-' + type + (orientation == 'horizontal'?  ' ' + justifyClass : ' flex-column')\" role=\"tablist\">\n      <li class=\"nav-item\" *ngFor=\"let tab of tabs\">\n        <a [id]=\"tab.id\" class=\"nav-link\" [class.active]=\"tab.id === activeId\" [class.disabled]=\"tab.disabled\"\n          href (click)=\"select(tab.id); $event.preventDefault()\" role=\"tab\" [attr.tabindex]=\"(tab.disabled ? '-1': undefined)\"\n          [attr.aria-controls]=\"(!destroyOnHide || tab.id === activeId ? tab.id + '-panel' : null)\"\n          [attr.aria-expanded]=\"tab.id === activeId\" [attr.aria-disabled]=\"tab.disabled\">\n          {{tab.title}}<ng-template [ngTemplateOutlet]=\"tab.titleTpl?.templateRef\"></ng-template>\n        </a>\n      </li>\n    </ul>\n    <div class=\"tab-content\">\n      <ng-template ngFor let-tab [ngForOf]=\"tabs\">\n        <div\n          class=\"tab-pane {{tab.id === activeId ? 'active' : null}}\"\n          *ngIf=\"!destroyOnHide || tab.id === activeId\"\n          role=\"tabpanel\"\n          [attr.aria-labelledby]=\"tab.id\" id=\"{{tab.id}}-panel\"\n          [attr.aria-expanded]=\"tab.id === activeId\">\n          <ng-template [ngTemplateOutlet]=\"tab.contentTpl?.templateRef\"></ng-template>\n        </div>\n      </ng-template>\n    </div>\n  `\n})\nexport class NgbTabset implements AfterContentChecked {\n  justifyClass: string;\n\n  @ContentChildren(NgbTab) tabs: QueryList<NgbTab>;\n\n  /**\n   * The identifier of the tab that should be opened **initially**.\n   *\n   * For subsequent tab switches use the `.select()` method and the `(tabChange)` event.\n   */\n  @Input() activeId: string;\n\n  /**\n   * If `true`, non-visible tabs content will be removed from DOM. Otherwise it will just be hidden.\n   */\n  @Input() destroyOnHide = true;\n\n  /**\n   * The horizontal alignment of the tabs with flexbox utilities.\n   */\n  @Input()\n  set justify(className: 'start' | 'center' | 'end' | 'fill' | 'justified') {\n    if (className === 'fill' || className === 'justified') {\n      this.justifyClass = `nav-${className}`;\n    } else {\n      this.justifyClass = `justify-content-${className}`;\n    }\n  }\n\n  /**\n   * The orientation of the tabset.\n   */\n  @Input() orientation: 'horizontal' | 'vertical';\n\n  /**\n   * Type of navigation to be used for tabs.\n   *\n   * Currently Bootstrap supports only `\"tabs\"` and `\"pills\"`.\n   *\n   * Since `3.0.0` can also be an arbitrary string (ex. for custom themes).\n   */\n  @Input() type: 'tabs' | 'pills' | string;\n\n  /**\n   * A tab change event emitted right before the tab change happens.\n   *\n   * See [`NgbTabChangeEvent`](#/components/tabset/api#NgbTabChangeEvent) for payload details.\n   */\n  @Output() tabChange = new EventEmitter<NgbTabChangeEvent>();\n\n  constructor(config: NgbTabsetConfig) {\n    this.type = config.type;\n    this.justify = config.justify;\n    this.orientation = config.orientation;\n  }\n\n  /**\n   * Selects the tab with the given id and shows its associated content panel.\n   *\n   * Any other tab that was previously selected becomes unselected and its associated pane is removed from DOM or\n   * hidden depending on the `destroyOnHide` value.\n   */\n  select(tabId: string) {\n    let selectedTab = this._getTabById(tabId);\n    if (selectedTab && !selectedTab.disabled && this.activeId !== selectedTab.id) {\n      let defaultPrevented = false;\n\n      this.tabChange.emit(\n          {activeId: this.activeId, nextId: selectedTab.id, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        this.activeId = selectedTab.id;\n      }\n    }\n  }\n\n  ngAfterContentChecked() {\n    // auto-correct activeId that might have been set incorrectly as input\n    let activeTab = this._getTabById(this.activeId);\n    this.activeId = activeTab ? activeTab.id : (this.tabs.length ? this.tabs.first.id : null);\n  }\n\n  private _getTabById(id: string): NgbTab {\n    let tabsWithId: NgbTab[] = this.tabs.filter(tab => tab.id === id);\n    return tabsWithId.length ? tabsWithId[0] : null;\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle} from './tabset';\n\nexport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle, NgbTabChangeEvent} from './tabset';\nexport {NgbTabsetConfig} from './tabset-config';\n\nconst NGB_TABSET_DIRECTIVES = [NgbTabset, NgbTab, NgbTabContent, NgbTabTitle];\n\n@NgModule({declarations: NGB_TABSET_DIRECTIVES, exports: NGB_TABSET_DIRECTIVES, imports: [CommonModule]})\nexport class NgbTabsetModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbTabsetModule}; }\n}\n","import {isNumber, toInteger} from '../util/util';\n\nexport class NgbTime {\n  hour: number;\n  minute: number;\n  second: number;\n\n  constructor(hour?: number, minute?: number, second?: number) {\n    this.hour = toInteger(hour);\n    this.minute = toInteger(minute);\n    this.second = toInteger(second);\n  }\n\n  changeHour(step = 1) { this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step); }\n\n  updateHour(hour: number) {\n    if (isNumber(hour)) {\n      this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n    } else {\n      this.hour = NaN;\n    }\n  }\n\n  changeMinute(step = 1) { this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step); }\n\n  updateMinute(minute: number) {\n    if (isNumber(minute)) {\n      this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\n      this.changeHour(Math.floor(minute / 60));\n    } else {\n      this.minute = NaN;\n    }\n  }\n\n  changeSecond(step = 1) { this.updateSecond((isNaN(this.second) ? 0 : this.second) + step); }\n\n  updateSecond(second: number) {\n    if (isNumber(second)) {\n      this.second = second < 0 ? 60 + second % 60 : second % 60;\n      this.changeMinute(Math.floor(second / 60));\n    } else {\n      this.second = NaN;\n    }\n  }\n\n  isValid(checkSecs = true) {\n    return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n  }\n\n  toString() { return `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbTimepicker`](#/components/timepicker/api#NgbTimepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTimepickerConfig {\n  meridian = false;\n  spinners = true;\n  seconds = false;\n  hourStep = 1;\n  minuteStep = 1;\n  secondStep = 1;\n  disabled = false;\n  readonlyInputs = false;\n  size: 'small' | 'medium' | 'large' = 'medium';\n}\n","import {Injectable} from '@angular/core';\nimport {NgbTimeStruct} from './ngb-time-struct';\nimport {isInteger} from '../util/util';\n\nexport function NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {\n  return new NgbTimeStructAdapter();\n}\n\n/**\n * An abstract service that does the conversion between the internal timepicker `NgbTimeStruct` model and\n * any provided user time model `T`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding timepicker to a form control,\n * ex. `[(ngModel)]=\"userTimeModel\"`. Here `userTimeModel` can be of any type.\n *\n * The default timepicker implementation assumes we use `NgbTimeStruct` as a user model.\n *\n * See the [custom time adapter demo](#/components/timepicker/examples#adapter) for an example.\n *\n * @since 2.2.0\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY})\nexport abstract class NgbTimeAdapter<T> {\n  /**\n   * Converts a user-model time of type `T` to an `NgbTimeStruct` for internal use.\n   */\n  abstract fromModel(value: T): NgbTimeStruct;\n\n  /**\n   * Converts an internal `NgbTimeStruct` time to a user-model time of type `T`.\n   */\n  abstract toModel(time: NgbTimeStruct): T;\n}\n\n@Injectable()\nexport class NgbTimeStructAdapter extends NgbTimeAdapter<NgbTimeStruct> {\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  fromModel(time: NgbTimeStruct): NgbTimeStruct {\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null} :\n        null;\n  }\n\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  toModel(time: NgbTimeStruct): NgbTimeStruct {\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null} :\n        null;\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  forwardRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {isInteger, isNumber, padNumber, toInteger} from '../util/util';\nimport {NgbTime} from './ngb-time';\nimport {NgbTimepickerConfig} from './timepicker-config';\nimport {NgbTimeAdapter} from './ngb-time-adapter';\n\nconst NGB_TIMEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTimepicker),\n  multi: true\n};\n\n/**\n * A directive that helps with wth picking hours, minutes and seconds.\n */\n@Component({\n  selector: 'ngb-timepicker',\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./timepicker.scss'],\n  template: `\n    <fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n      <div class=\"ngb-tp\">\n        <div class=\"ngb-tp-input-container ngb-tp-hour\">\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeHour(hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" placeholder=\"HH\" i18n-placeholder=\"@@ngb.timepicker.HH\"\n            [value]=\"formatHour(model?.hour)\" (change)=\"updateHour($event.target.value)\"\n            [readonly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Hours\" i18n-aria-label=\"@@ngb.timepicker.hours\"\n            (keydown.ArrowUp)=\"changeHour(hourStep)\" (keydown.ArrowDown)=\"changeHour(-hourStep)\">\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeHour(-hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\n          </button>\n        </div>\n        <div class=\"ngb-tp-spacer\">:</div>\n        <div class=\"ngb-tp-input-container ngb-tp-minute\">\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeMinute(minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" placeholder=\"MM\" i18n-placeholder=\"@@ngb.timepicker.MM\"\n            [value]=\"formatMinSec(model?.minute)\" (change)=\"updateMinute($event.target.value)\"\n            [readonly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Minutes\" i18n-aria-label=\"@@ngb.timepicker.minutes\"\n            (keydown.ArrowUp)=\"changeMinute(minuteStep)\" (keydown.ArrowDown)=\"changeMinute(-minuteStep)\">\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeMinute(-minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\"  i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\n          </button>\n        </div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-spacer\">:</div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-input-container ngb-tp-second\">\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeSecond(secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" placeholder=\"SS\" i18n-placeholder=\"@@ngb.timepicker.SS\"\n            [value]=\"formatMinSec(model?.second)\" (change)=\"updateSecond($event.target.value)\"\n            [readonly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Seconds\" i18n-aria-label=\"@@ngb.timepicker.seconds\"\n            (keydown.ArrowUp)=\"changeSecond(secondStep)\" (keydown.ArrowDown)=\"changeSecond(-secondStep)\">\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeSecond(-secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\n          </button>\n        </div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-spacer\"></div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-meridian\">\n          <button type=\"button\" class=\"btn btn-outline-primary\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\"\n                  (click)=\"toggleMeridian()\">\n            <ng-container *ngIf=\"model?.hour >= 12; else am\" i18n=\"@@ngb.timepicker.PM\">PM</ng-container>\n            <ng-template #am i18n=\"@@ngb.timepicker.AM\">AM</ng-template>\n          </button>\n        </div>\n      </div>\n    </fieldset>\n  `,\n  providers: [NGB_TIMEPICKER_VALUE_ACCESSOR]\n})\nexport class NgbTimepicker implements ControlValueAccessor,\n    OnChanges {\n  disabled: boolean;\n  model: NgbTime;\n\n  private _hourStep: number;\n  private _minuteStep: number;\n  private _secondStep: number;\n\n  /**\n   * Whether to display 12H or 24H mode.\n   */\n  @Input() meridian: boolean;\n\n  /**\n   * If `true`, the spinners above and below inputs are visible.\n   */\n  @Input() spinners: boolean;\n\n  /**\n   * If `true`, it is possible to select seconds.\n   */\n  @Input() seconds: boolean;\n\n  /**\n   * The number of hours to add/subtract when clicking hour spinners.\n   */\n  @Input()\n  set hourStep(step: number) {\n    this._hourStep = isInteger(step) ? step : this._config.hourStep;\n  }\n\n  get hourStep(): number { return this._hourStep; }\n\n  /**\n   * The number of minutes to add/subtract when clicking minute spinners.\n   */\n  @Input()\n  set minuteStep(step: number) {\n    this._minuteStep = isInteger(step) ? step : this._config.minuteStep;\n  }\n\n  get minuteStep(): number { return this._minuteStep; }\n\n  /**\n   * The number of seconds to add/subtract when clicking second spinners.\n   */\n  @Input()\n  set secondStep(step: number) {\n    this._secondStep = isInteger(step) ? step : this._config.secondStep;\n  }\n\n  get secondStep(): number { return this._secondStep; }\n\n  /**\n   * If `true`, the timepicker is readonly and can't be changed.\n   */\n  @Input() readonlyInputs: boolean;\n\n  /**\n   * The size of inputs and buttons.\n   */\n  @Input() size: 'small' | 'medium' | 'large';\n\n  constructor(\n      private readonly _config: NgbTimepickerConfig, private _ngbTimeAdapter: NgbTimeAdapter<any>,\n      private _cd: ChangeDetectorRef) {\n    this.meridian = _config.meridian;\n    this.spinners = _config.spinners;\n    this.seconds = _config.seconds;\n    this.hourStep = _config.hourStep;\n    this.minuteStep = _config.minuteStep;\n    this.secondStep = _config.secondStep;\n    this.disabled = _config.disabled;\n    this.readonlyInputs = _config.readonlyInputs;\n    this.size = _config.size;\n  }\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  writeValue(value) {\n    const structValue = this._ngbTimeAdapter.fromModel(value);\n    this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\n    if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\n      this.model.second = 0;\n    }\n    this._cd.markForCheck();\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n\n  changeHour(step: number) {\n    this.model.changeHour(step);\n    this.propagateModelChange();\n  }\n\n  changeMinute(step: number) {\n    this.model.changeMinute(step);\n    this.propagateModelChange();\n  }\n\n  changeSecond(step: number) {\n    this.model.changeSecond(step);\n    this.propagateModelChange();\n  }\n\n  updateHour(newVal: string) {\n    const isPM = this.model.hour >= 12;\n    const enteredHour = toInteger(newVal);\n    if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {\n      this.model.updateHour(enteredHour + 12);\n    } else {\n      this.model.updateHour(enteredHour);\n    }\n    this.propagateModelChange();\n  }\n\n  updateMinute(newVal: string) {\n    this.model.updateMinute(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  updateSecond(newVal: string) {\n    this.model.updateSecond(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  toggleMeridian() {\n    if (this.meridian) {\n      this.changeHour(12);\n    }\n  }\n\n  formatHour(value: number) {\n    if (isNumber(value)) {\n      if (this.meridian) {\n        return padNumber(value % 12 === 0 ? 12 : value % 12);\n      } else {\n        return padNumber(value % 24);\n      }\n    } else {\n      return padNumber(NaN);\n    }\n  }\n\n  formatMinSec(value: number) { return padNumber(value); }\n\n  get isSmallSize(): boolean { return this.size === 'small'; }\n\n  get isLargeSize(): boolean { return this.size === 'large'; }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n      this.model.second = 0;\n      this.propagateModelChange(false);\n    }\n  }\n\n  private propagateModelChange(touched = true) {\n    if (touched) {\n      this.onTouched();\n    }\n    if (this.model.isValid(this.seconds)) {\n      this.onChange(\n          this._ngbTimeAdapter.toModel({hour: this.model.hour, minute: this.model.minute, second: this.model.second}));\n    } else {\n      this.onChange(this._ngbTimeAdapter.toModel(null));\n    }\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbTimepicker} from './timepicker';\n\nexport {NgbTimepicker} from './timepicker';\nexport {NgbTimepickerConfig} from './timepicker-config';\nexport {NgbTimeStruct} from './ngb-time-struct';\nexport {NgbTimeAdapter} from './ngb-time-adapter';\n\n@NgModule({declarations: [NgbTimepicker], exports: [NgbTimepicker], imports: [CommonModule]})\nexport class NgbTimepickerModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbTimepickerModule}; }\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbTooltip`](#/components/tooltip/api#NgbTooltip) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTooltipConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  placement: PlacementArray = 'auto';\n  triggers = 'hover focus';\n  container: string;\n  disableTooltip = false;\n  tooltipClass: string;\n  openDelay = 0;\n  closeDelay = 0;\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  Inject,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone,\n  ViewEncapsulation,\n  ChangeDetectorRef\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {listenToTriggers} from '../util/triggers';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {positionElements, PlacementArray} from '../util/positioning';\nimport {PopupService} from '../util/popup';\n\nimport {NgbTooltipConfig} from './tooltip-config';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'ngb-tooltip-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {'[class]': '\"tooltip show\" + (tooltipClass ? \" \" + tooltipClass : \"\")', 'role': 'tooltip', '[id]': 'id'},\n  template: `<div class=\"arrow\"></div><div class=\"tooltip-inner\"><ng-content></ng-content></div>`,\n  styleUrls: ['./tooltip.scss']\n})\nexport class NgbTooltipWindow {\n  @Input() id: string;\n  @Input() tooltipClass: string;\n}\n\n/**\n * A lightweight and extensible directive for fancy tooltip creation.\n */\n@Directive({selector: '[ngbTooltip]', exportAs: 'ngbTooltip'})\nexport class NgbTooltip implements OnInit, OnDestroy {\n  /**\n   * Indicates whether the tooltip should be closed on `Escape` key and inside/outside clicks:\n   *\n   * * `true` - closes on both outside and inside clicks as well as `Escape` presses\n   * * `false` - disables the autoClose feature (NB: triggers still apply)\n   * * `\"inside\"` - closes on inside clicks as well as Escape presses\n   * * `\"outside\"` - closes on outside clicks (sometimes also achievable through triggers)\n   * as well as `Escape` presses\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n\n  /**\n   * The preferred placement of the tooltip.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"auto\"` (same as the sequence above).\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   * Specifies events that should trigger the tooltip.\n   *\n   * Supports a space separated list of event names.\n   * For more details see the [triggers demo](#/components/tooltip/examples#triggers).\n   */\n  @Input() triggers: string;\n\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   *\n   * Currently only supports `\"body\"`.\n   */\n  @Input() container: string;\n\n  /**\n   * If `true`, tooltip is disabled and won't be displayed.\n   *\n   * @since 1.1.0\n   */\n  @Input() disableTooltip: boolean;\n\n  /**\n   * An optional class applied to the tooltip window element.\n   *\n   * @since 3.2.0\n   */\n  @Input() tooltipClass: string;\n\n  /**\n   * The opening delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() openDelay: number;\n\n  /**\n   * The closing delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() closeDelay: number;\n\n  /**\n   * An event emitted when the tooltip is shown. Contains no payload.\n   */\n  @Output() shown = new EventEmitter();\n  /**\n   * An event emitted when the popover is hidden. Contains no payload.\n   */\n  @Output() hidden = new EventEmitter();\n\n  private _ngbTooltip: string | TemplateRef<any>;\n  private _ngbTooltipWindowId = `ngb-tooltip-${nextId++}`;\n  private _popupService: PopupService<NgbTooltipWindow>;\n  private _windowRef: ComponentRef<NgbTooltipWindow>;\n  private _unregisterListenersFn;\n  private _zoneSubscription: any;\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbTooltipConfig,\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any, private _changeDetector: ChangeDetectorRef) {\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disableTooltip = config.disableTooltip;\n    this.tooltipClass = config.tooltipClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._popupService = new PopupService<NgbTooltipWindow>(\n        NgbTooltipWindow, injector, viewContainerRef, _renderer, componentFactoryResolver);\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body', 'bs-tooltip');\n      }\n    });\n  }\n\n  /**\n   * The string content or a `TemplateRef` for the content to be displayed in the tooltip.\n   *\n   * If the content if falsy, the tooltip won't open.\n   */\n  @Input()\n  set ngbTooltip(value: string | TemplateRef<any>) {\n    this._ngbTooltip = value;\n    if (!value && this._windowRef) {\n      this.close();\n    }\n  }\n\n  get ngbTooltip() { return this._ngbTooltip; }\n\n  /**\n   * Opens the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering.\n   * The `context` is an optional value to be injected into the tooltip template when it is created.\n   */\n  open(context?: any) {\n    if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n      this._windowRef = this._popupService.open(this._ngbTooltip, context);\n      this._windowRef.instance.tooltipClass = this.tooltipClass;\n      this._windowRef.instance.id = this._ngbTooltipWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      // We need to detect changes, because we don't know where .open() might be called from.\n      // Ex. opening tooltip from one of lifecycle hooks that run after the CD\n      // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n      this._windowRef.changeDetectorRef.detectChanges();\n\n      // We need to mark for check, because tooltip won't work inside the OnPush component.\n      // Ex. when we use expression like `{{ tooltip.isOpen() : 'opened' : 'closed' }}`\n      // inside the template of an OnPush component and we change the tooltip from\n      // open -> closed, the expression in question won't be updated unless we explicitly\n      // mark the parent component to be checked.\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      ngbAutoClose(\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden,\n          [this._windowRef.location.nativeElement]);\n\n      this.shown.emit();\n    }\n  }\n\n  /**\n   * Closes the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering of the tooltip.\n   */\n  close(): void {\n    if (this._windowRef != null) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Toggles the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering of the tooltip.\n   */\n  toggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Returns `true`, if the popover is currently shown.\n   */\n  isOpen(): boolean { return this._windowRef != null; }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this),\n        this.close.bind(this), +this.openDelay, +this.closeDelay);\n  }\n\n  ngOnDestroy() {\n    this.close();\n    // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n    this._zoneSubscription.unsubscribe();\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\n\nimport {NgbTooltip, NgbTooltipWindow} from './tooltip';\n\nexport {NgbTooltipConfig} from './tooltip-config';\nexport {NgbTooltip} from './tooltip';\nexport {Placement} from '../util/positioning';\n\n@NgModule({declarations: [NgbTooltip, NgbTooltipWindow], exports: [NgbTooltip], entryComponents: [NgbTooltipWindow]})\nexport class NgbTooltipModule {\n  /**\n   * No need in forRoot anymore with tree-shakeable services\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbTooltipModule}; }\n}\n","import {Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges, ViewEncapsulation} from '@angular/core';\nimport {regExpEscape, toString} from '../util/util';\n\n/**\n * A component that helps with text highlighting.\n *\n * If splits the `result` text into parts that contain the searched `term` and generates the HTML markup to simplify\n * highlighting:\n *\n * Ex. `result=\"Alaska\"` and `term=\"as\"` will produce `Al<span class=\"ngb-highlight\">as</span>ka`.\n */\n@Component({\n  selector: 'ngb-highlight',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `<ng-template ngFor [ngForOf]=\"parts\" let-part let-isOdd=\"odd\">` +\n      `<span *ngIf=\"isOdd; else even\" [class]=\"highlightClass\">{{part}}</span><ng-template #even>{{part}}</ng-template>` +\n      `</ng-template>`,  // template needs to be formatted in a certain way so we don't add empty text nodes\n  styleUrls: ['./highlight.scss']\n})\nexport class NgbHighlight implements OnChanges {\n  parts: string[];\n\n  /**\n   * The CSS class for `<span>` elements wrapping the `term` inside the `result`.\n   */\n  @Input() highlightClass = 'ngb-highlight';\n\n  /**\n   * The text highlighting is added to.\n   *\n   * If the `term` is found inside this text, it will be highlighted.\n   */\n  @Input() result: string;\n\n  /**\n   * The term to be highlighted.\n   */\n  @Input() term: string;\n\n  ngOnChanges(changes: SimpleChanges) {\n    const resultStr = toString(this.result);\n    const resultLC = resultStr.toLowerCase();\n    const termLC = toString(this.term).toLowerCase();\n    let currentIdx = 0;\n\n    if (termLC.length > 0) {\n      this.parts = resultLC.split(new RegExp(`(${regExpEscape(termLC)})`)).map((part) => {\n        const originalPart = resultStr.substr(currentIdx, part.length);\n        currentIdx += part.length;\n        return originalPart;\n      });\n    } else {\n      this.parts = [resultStr];\n    }\n  }\n}\n","import {Component, Input, Output, EventEmitter, TemplateRef, OnInit} from '@angular/core';\n\nimport {toString} from '../util/util';\n\n/**\n * The context for the typeahead result template in case you want to override the default one.\n */\nexport interface ResultTemplateContext {\n  /**\n   * Your typeahead result item.\n   */\n  result: any;\n\n  /**\n   * Search term from the `<input>` used to get current result.\n   */\n  term: string;\n}\n\n@Component({\n  selector: 'ngb-typeahead-window',\n  exportAs: 'ngbTypeaheadWindow',\n  host: {'(mousedown)': '$event.preventDefault()', 'class': 'dropdown-menu show', 'role': 'listbox', '[id]': 'id'},\n  template: `\n    <ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n      <ngb-highlight [result]=\"formatter(result)\" [term]=\"term\"></ngb-highlight>\n    </ng-template>\n    <ng-template ngFor [ngForOf]=\"results\" let-result let-idx=\"index\">\n      <button type=\"button\" class=\"dropdown-item\" role=\"option\"\n        [id]=\"id + '-' + idx\"\n        [class.active]=\"idx === activeIdx\"\n        (mouseenter)=\"markActive(idx)\"\n        (click)=\"select(result)\">\n          <ng-template [ngTemplateOutlet]=\"resultTemplate || rt\"\n          [ngTemplateOutletContext]=\"{result: result, term: term, formatter: formatter}\"></ng-template>\n      </button>\n    </ng-template>\n  `\n})\nexport class NgbTypeaheadWindow implements OnInit {\n  activeIdx = 0;\n\n  /**\n   *  The id for the typeahead window. The id should be unique and the same\n   *  as the associated typeahead's id.\n   */\n  @Input() id: string;\n\n  /**\n   * Flag indicating if the first row should be active initially\n   */\n  @Input() focusFirst = true;\n\n  /**\n   * Typeahead match results to be displayed\n   */\n  @Input() results;\n\n  /**\n   * Search term used to get current results\n   */\n  @Input() term: string;\n\n  /**\n   * A function used to format a given result before display. This function should return a formatted string without any\n   * HTML markup\n   */\n  @Input() formatter = toString;\n\n  /**\n   * A template to override a matching result default display\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * Event raised when user selects a particular result row\n   */\n  @Output('select') selectEvent = new EventEmitter();\n\n  @Output('activeChange') activeChangeEvent = new EventEmitter();\n\n  hasActive() { return this.activeIdx > -1 && this.activeIdx < this.results.length; }\n\n  getActive() { return this.results[this.activeIdx]; }\n\n  markActive(activeIdx: number) {\n    this.activeIdx = activeIdx;\n    this._activeChanged();\n  }\n\n  next() {\n    if (this.activeIdx === this.results.length - 1) {\n      this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n    } else {\n      this.activeIdx++;\n    }\n    this._activeChanged();\n  }\n\n  prev() {\n    if (this.activeIdx < 0) {\n      this.activeIdx = this.results.length - 1;\n    } else if (this.activeIdx === 0) {\n      this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n    } else {\n      this.activeIdx--;\n    }\n    this._activeChanged();\n  }\n\n  resetActive() {\n    this.activeIdx = this.focusFirst ? 0 : -1;\n    this._activeChanged();\n  }\n\n  select(item) { this.selectEvent.emit(item); }\n\n  ngOnInit() { this.resetActive(); }\n\n  private _activeChanged() {\n    this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n  }\n}\n","import {Injectable, Inject, InjectionToken, OnDestroy} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n\n\n// usefulness (and default value) of delay documented in Material's CDK\n// https://github.com/angular/material2/blob/6405da9b8e8532a7e5c854c920ee1815c275d734/src/cdk/a11y/live-announcer/live-announcer.ts#L50\nexport type ARIA_LIVE_DELAY_TYPE = number | null;\nexport const ARIA_LIVE_DELAY = new InjectionToken<ARIA_LIVE_DELAY_TYPE>(\n    'live announcer delay', {providedIn: 'root', factory: ARIA_LIVE_DELAY_FACTORY});\nexport function ARIA_LIVE_DELAY_FACTORY(): number {\n  return 100;\n}\n\n\nfunction getLiveElement(document: any, lazyCreate = false): HTMLElement | null {\n  let element = document.body.querySelector('#ngb-live') as HTMLElement;\n\n  if (element == null && lazyCreate) {\n    element = document.createElement('div');\n\n    element.setAttribute('id', 'ngb-live');\n    element.setAttribute('aria-live', 'polite');\n    element.setAttribute('aria-atomic', 'true');\n\n    element.classList.add('sr-only');\n\n    document.body.appendChild(element);\n  }\n\n  return element;\n}\n\n\n\n@Injectable({providedIn: 'root'})\nexport class Live implements OnDestroy {\n  constructor(@Inject(DOCUMENT) private _document: any, @Inject(ARIA_LIVE_DELAY) private _delay: any) {}\n\n  ngOnDestroy() {\n    const element = getLiveElement(this._document);\n    if (element) {\n      element.parentElement.removeChild(element);\n    }\n  }\n\n  say(message: string) {\n    const element = getLiveElement(this._document, true);\n    const delay = this._delay;\n\n    element.textContent = '';\n    const setText = () => element.textContent = message;\n    if (delay === null) {\n      setText();\n    } else {\n      setTimeout(setText, delay);\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbTypeahead`](#/components/typeahead/api#NgbTypeahead) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTypeaheadConfig {\n  container;\n  editable = true;\n  focusFirst = true;\n  showHint = false;\n  placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n}\n","import {\n  ChangeDetectorRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Injector,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {DOCUMENT} from '@angular/common';\nimport {BehaviorSubject, fromEvent, Observable, Subject, Subscription} from 'rxjs';\nimport {map, switchMap, tap} from 'rxjs/operators';\n\nimport {Live} from '../util/accessibility/live';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {Key} from '../util/key';\nimport {PopupService} from '../util/popup';\nimport {PlacementArray, positionElements} from '../util/positioning';\nimport {isDefined, toString} from '../util/util';\n\nimport {NgbTypeaheadConfig} from './typeahead-config';\nimport {NgbTypeaheadWindow, ResultTemplateContext} from './typeahead-window';\n\n\nconst NGB_TYPEAHEAD_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTypeahead),\n  multi: true\n};\n\n/**\n * An event emitted right before an item is selected from the result list.\n */\nexport interface NgbTypeaheadSelectItemEvent {\n  /**\n   * The item from the result list about to be selected.\n   */\n  item: any;\n\n  /**\n   * Calling this function will prevent item selection from happening.\n   */\n  preventDefault: () => void;\n}\n\nlet nextWindowId = 0;\n\n/**\n * A directive providing a simple way of creating powerful typeaheads from any text input.\n */\n@Directive({\n  selector: 'input[ngbTypeahead]',\n  exportAs: 'ngbTypeahead',\n  host: {\n    '(blur)': 'handleBlur()',\n    '[class.open]': 'isPopupOpen()',\n    '(keydown)': 'handleKeyDown($event)',\n    '[autocomplete]': 'autocomplete',\n    'autocapitalize': 'off',\n    'autocorrect': 'off',\n    'role': 'combobox',\n    'aria-multiline': 'false',\n    '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n    '[attr.aria-activedescendant]': 'activeDescendant',\n    '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n    '[attr.aria-expanded]': 'isPopupOpen()'\n  },\n  providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]\n})\nexport class NgbTypeahead implements ControlValueAccessor,\n    OnInit, OnDestroy {\n  private _popupService: PopupService<NgbTypeaheadWindow>;\n  private _subscription: Subscription;\n  private _closed$ = new Subject();\n  private _inputValueBackup: string;\n  private _valueChanges: Observable<string>;\n  private _resubscribeTypeahead: BehaviorSubject<any>;\n  private _windowRef: ComponentRef<NgbTypeaheadWindow>;\n  private _zoneSubscription: any;\n\n  /**\n   * The value for the `autocomplete` attribute for the `<input>` element.\n   *\n   * Defaults to `\"off\"` to disable the native browser autocomplete, but you can override it if necessary.\n   *\n   * @since 2.1.0\n   */\n  @Input() autocomplete = 'off';\n\n  /**\n   * A selector specifying the element the typeahead popup will be appended to.\n   *\n   * Currently only supports `\"body\"`.\n   */\n  @Input() container: string;\n\n  /**\n   * If `true`, model values will not be restricted only to items selected from the popup.\n   */\n  @Input() editable: boolean;\n\n  /**\n   * If `true`, the first item in the result list will always stay focused while typing.\n   */\n  @Input() focusFirst: boolean;\n\n  /**\n   * The function that converts an item from the result list to a `string` to display in the `<input>` field.\n   *\n   * It is called when the user selects something in the popup or the model value changes, so the input needs to\n   * be updated.\n   */\n  @Input() inputFormatter: (item: any) => string;\n\n  /**\n   * The function that converts a stream of text values from the `<input>` element to the stream of the array of items\n   * to display in the typeahead popup.\n   *\n   * If the resulting observable emits a non-empty array - the popup will be shown. If it emits an empty array - the\n   * popup will be closed.\n   *\n   * See the [basic example](#/components/typeahead/examples#basic) for more details.\n   *\n   * Note that the `this` argument is `undefined` so you need to explicitly bind it to a desired \"this\" target.\n   */\n  @Input() ngbTypeahead: (text: Observable<string>) => Observable<any[]>;\n\n  /**\n   * The function that converts an item from the result list to a `string` to display in the popup.\n   *\n   * Must be provided, if your `ngbTypeahead` returns something other than `Observable<string[]>`.\n   *\n   * Alternatively for more complex markup in the popup you should use `resultTemplate`.\n   */\n  @Input() resultFormatter: (item: any) => string;\n\n  /**\n   * The template to override the way resulting items are displayed in the popup.\n   *\n   * See the [ResultTemplateContext](#/components/typeahead/api#ResultTemplateContext) for the template context.\n   *\n   * Also see the [template for results demo](#/components/typeahead/examples#template) for more details.\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * If `true`, will show the hint in the `<input>` when an item in the result list matches.\n   */\n  @Input() showHint: boolean;\n\n  /**\n   * The preferred placement of the typeahead.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n\n  */\n  @Input() placement: PlacementArray = 'bottom-left';\n\n  /**\n   * An event emitted right before an item is selected from the result list.\n   *\n   * Event payload is of type [`NgbTypeaheadSelectItemEvent`](#/components/typeahead/api#NgbTypeaheadSelectItemEvent).\n   */\n  @Output() selectItem = new EventEmitter<NgbTypeaheadSelectItemEvent>();\n\n  activeDescendant: string;\n  popupId = `ngb-typeahead-${nextWindowId++}`;\n\n  private _onTouched = () => {};\n  private _onChange = (_: any) => {};\n\n  constructor(\n      private _elementRef: ElementRef<HTMLInputElement>, private _viewContainerRef: ViewContainerRef,\n      private _renderer: Renderer2, private _injector: Injector, componentFactoryResolver: ComponentFactoryResolver,\n      config: NgbTypeaheadConfig, ngZone: NgZone, private _live: Live, @Inject(DOCUMENT) private _document: any,\n      private _ngZone: NgZone, private _changeDetector: ChangeDetectorRef) {\n    this.container = config.container;\n    this.editable = config.editable;\n    this.focusFirst = config.focusFirst;\n    this.showHint = config.showHint;\n    this.placement = config.placement;\n\n    this._valueChanges = fromEvent<Event>(_elementRef.nativeElement, 'input')\n                             .pipe(map($event => ($event.target as HTMLInputElement).value));\n\n    this._resubscribeTypeahead = new BehaviorSubject(null);\n\n    this._popupService = new PopupService<NgbTypeaheadWindow>(\n        NgbTypeaheadWindow, _injector, _viewContainerRef, _renderer, componentFactoryResolver);\n\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\n      if (this.isPopupOpen()) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body');\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    const inputValues$ = this._valueChanges.pipe(tap(value => {\n      this._inputValueBackup = this.showHint ? value : null;\n      if (this.editable) {\n        this._onChange(value);\n      }\n    }));\n    const results$ = inputValues$.pipe(this.ngbTypeahead);\n    const processedResults$ = results$.pipe(tap(() => {\n      if (!this.editable) {\n        this._onChange(undefined);\n      }\n    }));\n    const userInput$ = this._resubscribeTypeahead.pipe(switchMap(() => processedResults$));\n    this._subscription = this._subscribeToUserInput(userInput$);\n  }\n\n  ngOnDestroy(): void {\n    this._closePopup();\n    this._unsubscribeFromUserInput();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  writeValue(value) {\n    this._writeInputValue(this._formatItemForInput(value));\n    if (this.showHint) {\n      this._inputValueBackup = value;\n    }\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  /**\n   * Dismisses typeahead popup window\n   */\n  dismissPopup() {\n    if (this.isPopupOpen()) {\n      this._resubscribeTypeahead.next(null);\n      this._closePopup();\n      if (this.showHint && this._inputValueBackup !== null) {\n        this._writeInputValue(this._inputValueBackup);\n      }\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Returns true if the typeahead popup window is displayed\n   */\n  isPopupOpen() { return this._windowRef != null; }\n\n  handleBlur() {\n    this._resubscribeTypeahead.next(null);\n    this._onTouched();\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (!this.isPopupOpen()) {\n      return;\n    }\n\n    // tslint:disable-next-line:deprecation\n    switch (event.which) {\n      case Key.ArrowDown:\n        event.preventDefault();\n        this._windowRef.instance.next();\n        this._showHint();\n        break;\n      case Key.ArrowUp:\n        event.preventDefault();\n        this._windowRef.instance.prev();\n        this._showHint();\n        break;\n      case Key.Enter:\n      case Key.Tab:\n        const result = this._windowRef.instance.getActive();\n        if (isDefined(result)) {\n          event.preventDefault();\n          event.stopPropagation();\n          this._selectResult(result);\n        }\n        this._closePopup();\n        break;\n    }\n  }\n\n  private _openPopup() {\n    if (!this.isPopupOpen()) {\n      this._inputValueBackup = this._elementRef.nativeElement.value;\n      this._windowRef = this._popupService.open();\n      this._windowRef.instance.id = this.popupId;\n      this._windowRef.instance.selectEvent.subscribe((result: any) => this._selectResultClosePopup(result));\n      this._windowRef.instance.activeChangeEvent.subscribe((activeId: string) => this.activeDescendant = activeId);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      this._changeDetector.markForCheck();\n\n      ngbAutoClose(\n          this._ngZone, this._document, 'outside', () => this.dismissPopup(), this._closed$,\n          [this._elementRef.nativeElement, this._windowRef.location.nativeElement]);\n    }\n  }\n\n  private _closePopup() {\n    this._closed$.next();\n    this._popupService.close();\n    this._windowRef = null;\n    this.activeDescendant = undefined;\n  }\n\n  private _selectResult(result: any) {\n    let defaultPrevented = false;\n    this.selectItem.emit({item: result, preventDefault: () => { defaultPrevented = true; }});\n    this._resubscribeTypeahead.next(null);\n\n    if (!defaultPrevented) {\n      this.writeValue(result);\n      this._onChange(result);\n    }\n  }\n\n  private _selectResultClosePopup(result: any) {\n    this._selectResult(result);\n    this._closePopup();\n  }\n\n  private _showHint() {\n    if (this.showHint && this._windowRef.instance.hasActive() && this._inputValueBackup != null) {\n      const userInputLowerCase = this._inputValueBackup.toLowerCase();\n      const formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n\n      if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {\n        this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));\n        this._elementRef.nativeElement['setSelectionRange'].apply(\n            this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);\n      } else {\n        this._writeInputValue(formattedVal);\n      }\n    }\n  }\n\n  private _formatItemForInput(item: any): string {\n    return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n  }\n\n  private _writeInputValue(value: string): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', toString(value));\n  }\n\n  private _subscribeToUserInput(userInput$: Observable<any[]>): Subscription {\n    return userInput$.subscribe((results) => {\n      if (!results || results.length === 0) {\n        this._closePopup();\n      } else {\n        this._openPopup();\n        this._windowRef.instance.focusFirst = this.focusFirst;\n        this._windowRef.instance.results = results;\n        this._windowRef.instance.term = this._elementRef.nativeElement.value;\n        if (this.resultFormatter) {\n          this._windowRef.instance.formatter = this.resultFormatter;\n        }\n        if (this.resultTemplate) {\n          this._windowRef.instance.resultTemplate = this.resultTemplate;\n        }\n        this._windowRef.instance.resetActive();\n\n        // The observable stream we are subscribing to might have async steps\n        // and if a component containing typeahead is using the OnPush strategy\n        // the change detection turn wouldn't be invoked automatically.\n        this._windowRef.changeDetectorRef.detectChanges();\n\n        this._showHint();\n      }\n\n      // live announcer\n      const count = results ? results.length : 0;\n      this._live.say(count === 0 ? 'No results available' : `${count} result${count === 1 ? '' : 's'} available`);\n    });\n  }\n\n  private _unsubscribeFromUserInput() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n    this._subscription = null;\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbHighlight} from './highlight';\nimport {NgbTypeaheadWindow} from './typeahead-window';\nimport {NgbTypeahead} from './typeahead';\n\nexport {NgbHighlight} from './highlight';\nexport {NgbTypeaheadWindow} from './typeahead-window';\nexport {NgbTypeaheadConfig} from './typeahead-config';\nexport {NgbTypeahead, NgbTypeaheadSelectItemEvent} from './typeahead';\n\n@NgModule({\n  declarations: [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow],\n  exports: [NgbTypeahead, NgbHighlight],\n  imports: [CommonModule],\n  entryComponents: [NgbTypeaheadWindow]\n})\nexport class NgbTypeaheadModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbTypeaheadModule}; }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\n\nimport {NgbAccordionModule} from './accordion/accordion.module';\nimport {NgbAlertModule} from './alert/alert.module';\nimport {NgbButtonsModule} from './buttons/buttons.module';\nimport {NgbCarouselModule} from './carousel/carousel.module';\nimport {NgbCollapseModule} from './collapse/collapse.module';\nimport {NgbDatepickerModule} from './datepicker/datepicker.module';\nimport {NgbDropdownModule} from './dropdown/dropdown.module';\nimport {NgbModalModule} from './modal/modal.module';\nimport {NgbPaginationModule} from './pagination/pagination.module';\nimport {NgbPopoverModule} from './popover/popover.module';\nimport {NgbProgressbarModule} from './progressbar/progressbar.module';\nimport {NgbRatingModule} from './rating/rating.module';\nimport {NgbTabsetModule} from './tabset/tabset.module';\nimport {NgbTimepickerModule} from './timepicker/timepicker.module';\nimport {NgbTooltipModule} from './tooltip/tooltip.module';\nimport {NgbTypeaheadModule} from './typeahead/typeahead.module';\n\nexport {\n  NgbAccordionModule,\n  NgbPanelChangeEvent,\n  NgbAccordionConfig,\n  NgbAccordion,\n  NgbPanel,\n  NgbPanelTitle,\n  NgbPanelContent,\n  NgbPanelHeader,\n  NgbPanelHeaderContext,\n  NgbPanelToggle\n} from './accordion/accordion.module';\nexport {NgbAlertModule, NgbAlertConfig, NgbAlert} from './alert/alert.module';\nexport {NgbButtonsModule, NgbButtonLabel, NgbCheckBox, NgbRadio, NgbRadioGroup} from './buttons/buttons.module';\nexport {NgbCarouselModule, NgbCarouselConfig, NgbCarousel, NgbSlide} from './carousel/carousel.module';\nexport {NgbCollapseModule, NgbCollapse} from './collapse/collapse.module';\nexport {\n  NgbCalendar,\n  NgbPeriod,\n  NgbCalendarGregorian,\n  NgbCalendarIslamicCivil,\n  NgbCalendarIslamicUmalqura,\n  NgbCalendarHebrew,\n  NgbCalendarPersian,\n  NgbDatepickerModule,\n  NgbDatepickerI18n,\n  NgbDatepickerI18nHebrew,\n  NgbDatepickerConfig,\n  NgbDatepickerNavigateEvent,\n  NgbDateStruct,\n  NgbDate,\n  NgbDateParserFormatter,\n  NgbDateAdapter,\n  NgbDateNativeAdapter,\n  NgbDateNativeUTCAdapter,\n  NgbDatepicker,\n  NgbInputDatepicker\n} from './datepicker/datepicker.module';\nexport {\n  NgbDropdownModule,\n  NgbDropdownAnchor,\n  NgbDropdownConfig,\n  NgbDropdownItem,\n  NgbDropdownMenu,\n  NgbDropdownToggle,\n  NgbDropdown\n} from './dropdown/dropdown.module';\nexport {\n  NgbModalModule,\n  NgbModal,\n  NgbModalConfig,\n  NgbModalOptions,\n  NgbActiveModal,\n  NgbModalRef,\n  ModalDismissReasons\n} from './modal/modal.module';\nexport {\n  NgbPaginationModule,\n  NgbPaginationConfig,\n  NgbPagination,\n  NgbPaginationEllipsis,\n  NgbPaginationFirst,\n  NgbPaginationLast,\n  NgbPaginationNext,\n  NgbPaginationNumber,\n  NgbPaginationPrevious\n} from './pagination/pagination.module';\nexport {NgbPopoverModule, NgbPopoverConfig, NgbPopover} from './popover/popover.module';\nexport {NgbProgressbarModule, NgbProgressbarConfig, NgbProgressbar} from './progressbar/progressbar.module';\nexport {NgbRatingModule, NgbRatingConfig, NgbRating} from './rating/rating.module';\nexport {\n  NgbTabsetModule,\n  NgbTabChangeEvent,\n  NgbTabsetConfig,\n  NgbTabset,\n  NgbTab,\n  NgbTabContent,\n  NgbTabTitle\n} from './tabset/tabset.module';\nexport {\n  NgbTimepickerModule,\n  NgbTimepickerConfig,\n  NgbTimeStruct,\n  NgbTimepicker,\n  NgbTimeAdapter\n} from './timepicker/timepicker.module';\nexport {NgbTooltipModule, NgbTooltipConfig, NgbTooltip} from './tooltip/tooltip.module';\nexport {\n  NgbHighlight,\n  NgbTypeaheadModule,\n  NgbTypeaheadConfig,\n  NgbTypeaheadSelectItemEvent,\n  NgbTypeahead\n} from './typeahead/typeahead.module';\n\nexport {Placement} from './util/positioning';\n\nconst NGB_MODULES = [\n  NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule,\n  NgbDropdownModule, NgbModalModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule,\n  NgbTabsetModule, NgbTimepickerModule, NgbTooltipModule, NgbTypeaheadModule\n];\n\n@NgModule({imports: NGB_MODULES, exports: NGB_MODULES})\nexport class NgbModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbModule}; }\n}\n"]}